{"version":3,"sources":["pathfinderComponents/node.jsx","pathfinderComponents/grid.jsx","pathfinderComponents/simpleSelect.jsx","pathfinderComponents/navbar.jsx","pathfinderComponents/menu.jsx","algorithms/dijkstra.js","algorithms/recursiveMaze.js","algorithms/bfs.jsx","pathfinderComponents/pathfinder.jsx","algorithms/randomMaze.js","homeComponents/navbar.jsx","homeComponents/greet.jsx","homeComponents/typewriter.jsx","homeComponents/images/graph.png","homeComponents/card.jsx","homeComponents/card2.jsx","homeComponents/images/primes.jpg","homeComponents/sort.png","homeComponents/images/queen.PNG","homeComponents/images/binaryTree.png","homeComponents/images/convexHull.png","homeComponents/images/15puzzle.PNG","homeComponents/images/sudoku.png","homeComponents/cards.jsx","homeComponents/cardDetails.js","homeComponents/footer.jsx","homeComponents/home.jsx","primeComponents/cell.jsx","primeComponents/cells.jsx","primeComponents/navbar.jsx","primeComponents/slider.jsx","primeComponents/simpleSelect.jsx","primeComponents/menu.jsx","primeComponents/seive.jsx","sortComponents/rect.jsx","sortComponents/rects.jsx","algorithms/sortingAlgorithms.js","algorithms/quickSort.js","sortComponents/navbar.jsx","sortComponents/slider.jsx","sortComponents/simpleSelect.jsx","sortComponents/airBnbSlider.jsx","sortComponents/doubleSlider.jsx","sortComponents/formControlLabel.jsx","sortComponents/menu.jsx","sortComponents/sort.js","queenComponents/queen.png","queenComponents/cell.jsx","queenComponents/cells.jsx","queenComponents/navbar.jsx","queenComponents/slider.jsx","queenComponents/menu.jsx","queenComponents/queen.jsx","convexHullComponents/timer.jsx","algorithms/grahamScan.js","convexHullComponents/canvas.jsx","convexHullComponents/navbar.jsx","convexHullComponents/slider.jsx","convexHullComponents/menu.jsx","convexHullComponents/convexHull.jsx","binarySearchComponent/entryPoint.jsx","binarySearchComponent/doubleSlider.jsx","binarySearchComponent/guess.jsx","binarySearchComponent/result.jsx","binarySearchComponent/search.jsx","binarySearchComponent/navbar.jsx","binarySearchComponent/binarySearch.jsx","recursiveSortComponents/rect.jsx","recursiveSortComponents/rects.jsx","algorithms/mergeSort.js","algorithms/heapSort.js","algorithms/quickSortRecursive.js","recursiveSortComponents/navbar.jsx","recursiveSortComponents/slider.jsx","recursiveSortComponents/simpleSelect.jsx","recursiveSortComponents/airBnbSlider.jsx","recursiveSortComponents/doubleSlider.jsx","recursiveSortComponents/menu.jsx","recursiveSortComponents/recursiveSort.js","App.js","reportWebVitals.js","index.js"],"names":["Node","static","row","props","col","this","onMouseDown","isVisited","onMouseEnter","onMouseUp","id","className","getClassName","node","isWall","isStartNode","isEndNode","ispathNode","Component","Grid","state","grid","map","rowidx","nodeidx","visitedNode","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","React","useState","age","setAge","FormControl","InputLabel","Select","labelId","value","onChange","event","target","onAlgoChanged","items","item","itemidx","MenuItem","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","style","color","Menu","algorithms","onMazeChanged","mazes","onClick","onCreateMaze","onVisualize","onClearPath","onClearBoard","dijkstra","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","push","getAllNodes","length","sortNodesByDistance","closestNode","shift","Infinity","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","decideMaze","pairs","board","startRow","endRow","startCol","endCol","mid","Math","floor","random","start","end","i","xx","yy","recursiveMazeVertical","recursiveMazeHorizontal","bfsdfs","endNode","algo","list","nodesInOrder","currentNode","pop","nodesToPush","getNeighbours","Pathfinder","handleMouseDown","newGrid","getNewGridWithWallToggled","setState","mouseIsPressed","handleMouseEnter","handleMouseUp","handleAlgoChanged","val","handleMazeChanged","maze","handleCreateMaze","newBoard","slice","j","randomMaze","getMaze","setTimeout","document","getElementById","handleClearBoard","clearBoard","handleClearPath","clearPath","handleClick","visualizeDijkstra","width","window","innerWidth","height","innerHeight","max","console","log","getInitialGrid","textAlign","nodesInShortestPathOrder","unshift","getNodesInShortestPathOrder","animateDijkstra","sleep","animateShortestPath","toggleVisit","newNode","totRow","totCol","currentRow","createNode","ms","Promise","resolve","href","Greet","TypeWriterC","options","strings","autoStart","loop","card","maxWidth","minHeight","borderRadius","boxShadow","media","actionArea","padding","transition","transform","expand","marginLeft","transitions","create","duration","shortest","expandOpen","ImgMediaCard2","expanded","setExpanded","CardActionArea","m","Card","route","CardMedia","component","alt","title","src","img","CardHeader","backgroundColor","action","IconButton","clsx","Collapse","in","timeout","unmountOnExit","CardContent","Typography","description","Cards","cards","getData","e","graph","primes","queen","convex","binSearch","sudoku","puzzle","Fragment","TextField","label","toLowerCase","includes","Footer","class","data-show-count","data-icon","Home","Cell","getClass","cell","isVisiting","isChecking","isPrime","Cells","cells","cellidx","root","valuetext","DiscreteSlider","gutterBottom","Slider","defaultValue","default","getAriaValueText","aria-labelledby","valueLabelDisplay","onChangeCommitted","innerText","num","parseInt","step","marks","min","isDisabled","selected","isClickable","cursor","onRefresh","disabled","onChangeSpeed","onChangeValues","Seive","number","isRunning","speed","changeSpeed","handleValueIncease","getCells","handleRefresh","startSeive","a","prime","changedCells","prevCheck","getNewCellPrimeToggled","getNewCellVisitingToggled","getNewCellCheckToggled","pos","newCells","newCell","rows","createCell","Rect","checkColor","rect","isSorted","isSorting","background","marg","Rects","rects","rectidx","selectionSort","arr","n","prevRect","min_idx","changed","recti","rectj","bubbleSort","insertionSort","key","values","quickSort","rects2","sz","quick","left","right","partition","pivot","it","rect1","rect2","getPartition","onCountChange","disable","withStyles","thumb","border","marginRight","active","track","rail","opacity","CSlider","RangeSlider","setValue","newValue","SwitchLabels","checkedA","FormGroup","FormControlLabel","control","Switch","checked","name","onDoubleChange","onRandomize","onSpeedChange","onViusalize","Sort","count","doubles","isRunning1","isRunning2","algo1","algo2","handleRandomize","getInitialRects","handleDouble","handleCountChange","handleSpeedChanged","handleSort","steps1","steps2","handleFirst","handleSecond","steps","tot","getRect","isAttacked","isCurrent","isPresent","isChecked","getStyled","onClear","Queen","handleStop","handleSpeedChange","handleQueenChange","getBoard","handleClear","handleTurnOff","turnOffAttack","startAlgo","queensAlgo","newBoard2","result","getChecked","onStop","N","cols","getCell","cw","b","c","ccw","Canvas","dots","lines","canvasWidth","canvasHeight","animateLine","canvas2","canvasLineRef","current","ctx2","getContext","clearRect","fillStyle","strokeStyle","onGoing","beginPath","add","lineWidth","moveTo","from","arc","PI","fill","closePath","lineTo","stroke","onTurnOff","myRef","createRef","redrawDots","prevProps","prevState","snapshot","ref","canvas","ctx","res","points","size","pointStart","pointEnd","up","down","convex_hull","getNewDots","getDot","rowpos","ConvexHull","isALgoLive","handleRefreshDots","handleAlgoStateChanged","isAlgoLive","handleVisualize","handleMoreDot","dot","EntryPoint","error","setUpper","validateNumbers","variant","upper","startGame","lower","useEffect","Guess","getMid","justifyContent","yesButton","noButton","Result","onRestart","Search","BinarySearch","handleStartGame","handleRestart","handleYes","handleNo","handleSetUpper","isLeft","isRight","checkBorder","isRange","mergeSort","mergeS","l","r","n1","n2","L","R","k","merge","HeapSort","heapify","temp","sorted","heapSort","largest","quickSortRecursive","swap","changedRange","RecursiveSort","handleMerge","handleHeap","handleQuick","hasChanged","ii","App","basename","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"kbAoCeA,G,mNAjCXC,OAAS,CACLC,IAAK,EAAKC,MAAMD,IAChBE,IAAK,EAAKD,MAAMC,K,uDAEV,IAAD,EAC8DC,KAAKF,MAAhED,EADH,EACGA,IAAIE,EADP,EACOA,IAAeE,GADtB,EACWC,UADX,EACsBD,aAAaE,EADnC,EACmCA,aAAaC,EADhD,EACgDA,UACrD,OACI,qBACIC,GAAE,eAAYL,KAAKF,MAAMD,IAAvB,YAA8BG,KAAKF,MAAMC,KAC3CO,UAAWN,KAAKO,eAChBN,YAAa,kBAAMA,EAAYJ,EAAIE,IACnCI,aAAc,kBAAMA,EAAaN,EAAIE,IACrCK,UAAW,kBAAMA,EAAUP,EAAIE,Q,qCAKvC,OAA8B,IAA3BC,KAAKF,MAAMU,KAAKC,OACR,kBACgC,IAAhCT,KAAKF,MAAMU,KAAKE,YAChB,oBAC8B,IAA9BV,KAAKF,MAAMU,KAAKG,UAChB,iBACDX,KAAKF,MAAMU,KAAKI,WACf,2BAC6B,IAA9BZ,KAAKF,MAAMU,KAAKN,UACf,qBAEA,W,GA7BAW,cCoCJC,G,mNAlCXC,MAAQ,CACJC,KAAM,EAAKlB,MAAMkB,M,uDAGX,IAAD,OACL,OACI,qBAAKV,UAAU,OAAf,SACKN,KAAKF,MAAMkB,KAAKC,KAAI,SAACpB,EAAKqB,GACvB,OACI,8BACKrB,EAAIoB,KAAI,SAACT,EAAMW,GAAa,IAClBtB,EAAmCW,EAAnCX,IAAKE,EAA8BS,EAA9BT,IAAKU,EAAyBD,EAAzBC,OAAQW,EAAiBZ,EAAjBY,YACzB,OACI,cAAC,EAAD,CAEIvB,IAAKA,EACLE,IAAKA,EACLS,KAAMA,EACNC,OAAQA,EACRW,YAAcA,EACdnB,YAAe,EAAKH,MAAMG,YAC1BE,aAAgB,EAAKL,MAAMK,aAC3BC,UAAa,EAAKN,MAAMM,WARnBe,OALXD,Y,GAVfL,c,qDCKbQ,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,YAAa,CACTC,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,KAEdC,YAAa,CACTC,UAAWN,EAAMG,QAAQ,QAoClBI,EAhCM,SAAChC,GAClB,IAAMiC,EAAUV,IADY,EAENW,IAAMC,SAAS,KAFT,mBAErBC,EAFqB,KAEhBC,EAFgB,KAS5B,OACI,8BACI,eAACC,EAAA,EAAD,CAAa9B,UAAWyB,EAAQP,YAAhC,UACI,cAACa,EAAA,EAAD,CAAYhC,GAAG,2BAAf,uBACA,cAACiC,EAAA,EAAD,CACIC,QAAQ,2BACRlC,GAAG,qBACHmC,MAAON,EACPO,SAbK,SAACC,GAClBP,EAAOO,EAAMC,OAAOH,OACpB1C,EAAM8C,cAAcF,EAAMC,OAAOH,QAOzB,SAMK1C,EAAM+C,MAAM5B,KAAK,SAAC6B,EAAKC,GACpB,OACI,cAACC,EAAA,EAAD,CAEIR,MAAOO,EAFX,SAEqBD,GADZC,cCbtBE,E,uKArBP,OACI,sBAAK3C,UAAU,8CAAf,UACI,sBAAMA,UAAU,eAAhB,wBACA,wBAAQA,UAAU,iBAAiB4C,KAAK,SAASC,cAAY,WACrDC,cAAY,0BAA0BC,gBAAc,yBACpDC,gBAAc,QAAQC,aAAW,oBAFzC,SAGI,sBAAMjD,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BD,GAAG,yBAA7C,SACI,cAAC,IAAD,CAAMmD,GAAI,IAAV,SACI,sBAAMC,MAAO,CAACC,MAAM,SAApB,6B,GAZH7C,aC+BN8C,E,uKA9BP,OACI,sBAAKrD,UAAU,iBAAf,UACI,cAAC,EAAD,CACIsC,cAAiB5C,KAAKF,MAAM8C,cAC5BC,MAAO7C,KAAKF,MAAM8D,aAEtB,cAAC,EAAD,CACIhB,cAAe5C,KAAKF,MAAM+D,cAC1BhB,MAAO7C,KAAKF,MAAMgE,QAEtB,wBACIxD,UAAU,+BACVyD,QAAS/D,KAAKF,MAAMkE,aAFxB,yBAKA,wBACID,QAAS/D,KAAKF,MAAMmE,YACpB3D,UAAU,yBAFd,uBAIA,wBACIyD,QAAS/D,KAAKF,MAAMoE,YACpB5D,UAAU,4BAFd,wBAGA,wBACIyD,QAAS/D,KAAKF,MAAMqE,aACpB7D,UAAU,4BAFd,gC,GAxBGO,a,QCCZ,SAASuD,EAASpD,EAAMqD,EAAWC,GACxC,IAAMC,EAAsB,GAC5BF,EAAUG,SAAW,EAErB,IADA,IAAMC,EAsCR,SAAqBzD,GACnB,IADyB,EACnB0D,EAAQ,GADW,cAEP1D,GAFO,IAEzB,2BAAwB,CAAC,IAAD,EAAbnB,EAAa,sBACHA,GADG,IACtB,2BAAwB,CAAC,IAAdW,EAAa,QACtBkE,EAAMC,KAAKnE,IAFS,gCAFC,8BAOzB,OAAOkE,EA7CgBE,CAAY5D,GAC1ByD,EAAeI,QAAQ,CAC9BC,EAAoBL,GACpB,IAAMM,EAAcN,EAAeO,QAEnC,IAAID,EAAYtE,OAAhB,CAGA,GAAIsE,EAAYP,WAAaS,IAAU,OAAOV,EAG9C,GAFAQ,EAAY7E,WAAY,EACxBqE,EAAoBI,KAAKI,GACrBA,IAAgBT,EAAY,OAAOC,EACvCW,EAAyBH,EAAa/D,KAI1C,SAAS8D,EAAoBL,GAC3BA,EAAeU,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMZ,SAAWa,EAAMb,YAG/D,SAASU,EAAyB1E,EAAMQ,GACtC,IAD4C,EACtCsE,EAOR,SAA+B9E,EAAMQ,GACnC,IAAMuE,EAAY,GACXxF,EAAYS,EAAZT,IAAKF,EAAOW,EAAPX,IACRA,EAAM,GAAG0F,EAAUZ,KAAK3D,EAAKnB,EAAM,GAAGE,IACtCF,EAAMmB,EAAK6D,OAAS,GAAGU,EAAUZ,KAAK3D,EAAKnB,EAAM,GAAGE,IACpDA,EAAM,GAAGwF,EAAUZ,KAAK3D,EAAKnB,GAAKE,EAAM,IACxCA,EAAMiB,EAAK,GAAG6D,OAAS,GAAGU,EAAUZ,KAAK3D,EAAKnB,GAAKE,EAAM,IAC7D,OAAOwF,EAAUC,QAAO,SAAAC,GAAQ,OAAKA,EAASvF,aAdnBwF,CAAsBlF,EAAMQ,GADX,cAErBsE,GAFqB,IAE5C,2BAA2C,CAAC,IAAjCG,EAAgC,QACzCA,EAASjB,SAAWhE,EAAKgE,SAAW,EACpCiB,EAASE,aAAenF,GAJkB,+BCU9C,SAASoF,EAAWC,EAAMC,EAAMC,EAASC,EAAOC,EAASC,GAI/CF,EAAOD,GAAY,GAAQG,EAASD,GAAY,IAIhDC,EAASD,EAAaD,EAASD,EAMzC,SAA+BF,EAAMC,EAAMC,EAASC,EAAOC,EAASC,GAChE,IAAIC,EAAMC,KAAKC,OAAOH,EAAOD,GAAU,GACnCK,EAASF,KAAKC,MAAMD,KAAKE,UAAYN,EAAOD,EAAS,IAAMA,EAE3DQ,EAAQR,EACPD,EAAMC,EAAS,GAAGI,GAAK1F,SACxB6F,EAASC,EACTA,KAEJ,IAAIC,EAAMR,EACLF,EAAME,EAAO,GAAGG,GAAK1F,SACtB6F,EAASE,EACTA,KAEJ,IAAI,IAAIC,EAAIF,EAAME,GAAGD,EAAIC,IACjBA,IAAIH,IACJR,EAAMW,GAAGN,GAAK1F,QAAS,EACvBoF,EAAMlB,KAAK,CACP+B,GAAGD,EACHE,GAAGR,KAIfP,EAAWC,EAAMC,EAAMC,EAASC,EAAOC,EAASE,EAAI,GACpDP,EAAWC,EAAMC,EAAMC,EAASC,EAAOG,EAAI,EAAED,GA7BzCU,CAAsBf,EAAMC,EAAMC,EAASC,EAAOC,EAASC,GA+BnE,SAAiCL,EAAMC,EAAMC,EAASC,EAAOC,EAASC,GAClE,IAAIC,EAAMC,KAAKC,OAAOL,EAAOD,GAAU,GAEnCO,EAASF,KAAKC,MAAMD,KAAKE,UAAYJ,EAAOD,EAAS,IAAMA,EAC3DM,EAAQN,EACPH,EAAMK,GAAKF,EAAS,GAAGxF,SACxB6F,EAASC,EACTA,KAEJ,IAAIC,EAAMN,EACLJ,EAAMK,GAAKD,EAAO,GAAGzF,SACtB6F,EAASE,EACTA,KAEJ,IAAI,IAAIC,EAAIF,EAAME,GAAGD,EAAIC,IACjBA,IAAIH,IACJR,EAAMK,GAAKM,GAAGhG,QAAS,EACvBoF,EAAMlB,KAAK,CACP+B,GAAGP,EACHQ,GAAGF,KAIfb,EAAWC,EAAMC,EAAMC,EAASI,EAAI,EAAEF,EAASC,GAC/CN,EAAWC,EAAMC,EAAMK,EAAI,EAAEH,EAAOC,EAASC,GArDzCW,CAAwBhB,EAAMC,EAAMC,EAASC,EAAOC,EAASC,IChD9D,SAASY,EAAO9F,EAAKqD,EAAU0C,EAAQC,GAC1C,IAAIC,EAAO,GACLC,EAAe,GAIrB,IAHAA,EAAavC,KAAKN,GAClB4C,EAAKtC,KAAKN,GACVA,EAAUnE,WAAY,EACd+G,EAAKpC,QAAO,CAChB,IAAMsC,EAAwB,QAATH,EAAiBC,EAAKjC,QAAQiC,EAAKG,MAExD,GADAF,EAAavC,KAAKwC,GACdA,IAAgBJ,EAAU,OAAOG,EACxB,QAATF,IAAiBG,EAAYjH,WAAY,GAC7C,IALgB,EAKVmH,EAAcC,EAActG,EAAKmG,GALvB,cAMGE,GANH,IAMhB,IAAI,EAAJ,qBAAgC,CAAC,IAAtB7G,EAAqB,QAChB,QAATwG,IACCxG,EAAKN,WAAY,GAErBM,EAAKmF,aAAewB,EACpBF,EAAKtC,KAAKnE,IAXE,+BAepB,OAAO0G,EAGX,SAASI,EAActG,EAAKR,GACxB,IAAM+E,EAAY,GACXxF,EAAYS,EAAZT,IAAKF,EAAOW,EAAPX,IAOZ,OAJIE,EAAM,GAAGwF,EAAUZ,KAAK3D,EAAKnB,GAAKE,EAAM,IACxCF,EAAM,GAAG0F,EAAUZ,KAAK3D,EAAKnB,EAAM,GAAGE,IACtCF,EAAMmB,EAAK6D,OAAS,GAAGU,EAAUZ,KAAK3D,EAAKnB,EAAM,GAAGE,IACpDA,EAAMiB,EAAK,GAAG6D,OAAS,GAAGU,EAAUZ,KAAK3D,EAAKnB,GAAKE,EAAM,IACtDwF,EAAUC,QAAO,SAAAC,GAAQ,OAAMA,EAASvF,YAAcuF,EAAShF,U,ICxBpE8G,E,kDACF,aAAe,IAAD,8BACV,gBA8DJC,gBAAkB,SAAC3H,EAAKE,GACpB,IAAI,EAAKgB,MAAMsD,UAAUxE,MAAMA,GAAO,EAAKkB,MAAMsD,UAAUtE,MAAMA,KAAS,EAAKgB,MAAMgG,QAAQlH,MAAMA,GAAO,EAAKkB,MAAMgG,QAAQhH,MAAMA,GAAM,CACrI,IAAM0H,EAAUC,EAA0B,EAAK3G,MAAMC,KAAMnB,EAAKE,GAChE,EAAK4H,SAAS,CAAC3G,KAAKyG,IAExB,EAAKE,SAAS,CAACC,gBAAgB,KApErB,EAuEdC,iBAAmB,SAAChI,EAAKE,GACrB,IAAkC,IAA9B,EAAKgB,MAAM6G,iBACX,EAAK7G,MAAMsD,UAAUxE,MAAMA,GAAO,EAAKkB,MAAMsD,UAAUtE,MAAMA,KAAS,EAAKgB,MAAMgG,QAAQlH,MAAMA,GAAO,EAAKkB,MAAMgG,QAAQhH,MAAMA,GAAM,CACrI,IAAM0H,EAAUC,EAA0B,EAAK3G,MAAMC,KAAMnB,EAAKE,GAChE,EAAK4H,SAAS,CAAC3G,KAAKyG,MA3Ed,EA+EdK,cAAgB,SAACjI,EAAIE,GACjB,EAAK4H,SAAS,CAACC,gBAAgB,KAhFrB,EAmFdG,kBAAoB,SAACC,GACjB,EAAKL,SAAS,CAACX,KAAKgB,KApFV,EAuFdC,kBAAoB,SAACD,GACjB,EAAKL,SAAS,CAACO,KAAKF,KAxFV,EA2FdG,iBAAmB,WACf,IAAItC,EACJ,OAAQ,EAAK9E,MAAMmH,MACf,KAAK,EACDrC,ECzGT,SAAoBC,EAAMjG,EAAIE,GAGjC,IAFA,IAAIqI,EAAWtC,EAAMuC,QACfxC,EAAQ,GACNY,EAAI,EAAEA,EAAE5G,EAAI4G,IAChB,IAAK,IAAI6B,EAAI,EAAEA,EAAGvI,EAAIuI,KACHlC,KAAKC,MAAoB,IAAdD,KAAKE,UAAc,IAClC,IAAM,IACb8B,EAAS3B,GAAG6B,GAAG7H,QAAS,EACxBoF,EAAMlB,KAAK,CACP+B,GAAGD,EACHE,GAAG2B,KAKnB,OAAOzC,ED0FY0C,CAAW,EAAKxH,MAAMC,KAAK,EAAKD,MAAMlB,IAAI,EAAKkB,MAAMhB,KAC5D,MACJ,QACI8F,EF5GT,SAAiBC,EAAMjG,EAAIE,GAG9B,IAFA,IAAM8F,EAAQ,GACVuC,EAAWtC,EAAMuC,QACZ5B,EAAI,EAAEA,EAAG1G,EAAI0G,IAClB2B,EAAS,GAAG3B,GAAGhG,QAAS,EACxBoF,EAAMlB,KAAK,CACP+B,GAAG,EACHC,GAAGF,IAGX,IAAK,IAAIA,EAAI,EAAEA,EAAG5G,EAAI4G,IAClB2B,EAAS3B,GAAG1G,EAAI,GAAGU,QAAS,EAC5BoF,EAAMlB,KAAK,CACP+B,GAAGD,EACHE,GAAG5G,EAAI,IAGf,IAAK,IAAI0G,EAAI1G,EAAI,EAAE0G,GAAG,EAAEA,IACpB2B,EAASvI,EAAI,GAAG4G,GAAGhG,QAAS,EAC5BoF,EAAMlB,KAAK,CACP+B,GAAG7G,EAAI,EACP8G,GAAGF,IAGX,IAAI,IAAIA,EAAI5G,EAAI,EAAE4G,GAAG,EAAEA,IACnB2B,EAAS3B,GAAG,GAAGhG,QAAS,EACxBoF,EAAMlB,KAAK,CACP+B,GAAGD,EACHE,GAAG,IAKX,OAFAf,EAAWC,EAAMuC,EAAS,EAAEvI,EAAI,EAAE,EAAEE,EAAI,GAEjC8F,EE2EY2C,CAAQ,EAAKzH,MAAMC,KAAK,EAAKD,MAAMlB,IAAI,EAAKkB,MAAMhB,KAGjE,IAVoB,MASQ,EAAKgB,MAA1BsD,EATa,EASbA,UAAU0C,EATG,EASHA,QATG,WAUXN,GACLgC,YAAW,WACP,GAAIhC,IAAMZ,EAAMhB,OAAO,EAAG,CAEtB,IAAM7D,EAAO,EAAKD,MAAMC,KACxBA,EAAMqD,EAAUxE,KAAMwE,EAAUtE,KAAhC,2BAAyCiB,EAAMqD,EAAUxE,KAAMwE,EAAUtE,MAAzE,IAA8EU,QAAQ,IACtFO,EAAK+F,EAAQlH,KAAKkH,EAAQhH,KAA1B,2BAAmCiB,EAAK+F,EAAQlH,KAAKkH,EAAQhH,MAA7D,IAAkEU,QAAQ,IAC1E,EAAKkH,SAAS,CAAC3G,SAEf6E,EAAMY,GAAGC,KAAKrC,EAAUxE,KAAOgG,EAAMY,GAAGE,KAAKtC,EAAUtE,KAAS8F,EAAMY,GAAGC,KAAKK,EAAQlH,KAAOgG,EAAMY,GAAGE,KAAKI,EAAQhH,MACnH2I,SAASC,eAAT,eAAgC9C,EAAMY,GAAGC,GAAzC,YAA+Cb,EAAMY,GAAGE,KAAMrG,UAAY,oBAE9E,GAAFmG,IAZGA,EAAI,EAAEA,EAAEZ,EAAMhB,OAAO4B,IAAM,EAA3BA,IArGC,EAoHdmC,iBAAmB,WAAK,IAAD,EACI,EAAK7H,MAArBC,EADY,EACZA,KAAKnB,EADO,EACPA,IAAIE,EADG,EACHA,IAChB,EAAK4H,SAAS,CAAC3G,KAAK6H,EAAW7H,EAAKnB,EAAIE,MAtH9B,EAwHd+I,gBAAkB,WAAM,IAAD,EACI,EAAK/H,MAArBC,EADY,EACZA,KAAKnB,EADO,EACPA,IAAIE,EADG,EACHA,IAChB,EAAK4H,SAAS,CAAC3G,KAAK+H,EAAU/H,EAAKnB,EAAIE,MA1H7B,EA4HdiJ,YAAc,WAMV,EAAKC,qBAhIL,EAAKlI,MAAQ,CACTC,KAAK,GACL4G,gBAAe,EACfhE,WAAW,CACP,WAAW,MAAM,OAErBoD,KAAK,EACLlD,MAAM,CACF,qBAAqB,SAAS,gCAAgC,+BAElEoE,KAAK,GAZC,E,gEAgBV,IAAMgB,EAAQC,OAAOC,WACfC,EAASF,OAAOG,YAChBzJ,EAAMuG,KAAKmD,IAAInD,KAAKC,MAAMgD,EAAO,IAAI,EAAE,IACvCtJ,EAAMqG,KAAKC,MAAM6C,EAAM,IACvB7E,EAAY,CACdxE,IAAI,EACJE,IAAI,GAEFgH,EAAU,CACZlH,IAAKA,EAAI,EACTE,IAAKA,EAAI,GAEbyJ,QAAQC,IAAK1C,EAAQlH,KACrB,IAAMmB,EAAO0I,EAAe7J,EAAIE,GAChCiB,EAAKqD,EAAUxE,KAAKwE,EAAUtE,KAAKW,aAAc,EACjDM,EAAKnB,EAAI,GAAGE,EAAI,GAAGY,WAAY,EAC/BX,KAAK2H,SAAS,CAAC3G,OAAKnB,MAAIE,MAAIsE,YAAU0C,c,+BAItC,OACI,eAAC,WAAD,WACI,cAAC,EAAD,IAEA,cAAC,EAAD,CACInE,cAAiB5C,KAAK+H,kBACtB9D,YAAejE,KAAKgJ,YACpBpF,WAAY5D,KAAKe,MAAM6C,WACvBE,MAAO9D,KAAKe,MAAM+C,MAClBD,cAAe7D,KAAKiI,kBACpBjE,aAAchE,KAAKmI,iBACnBhE,aAAcnE,KAAK4I,iBACnB1E,YAAalE,KAAK8I,kBAEtB,sBAAMrF,MAAO,CAAChC,OAAQ,KACtB,qBAAKgC,MAAO,CAACkG,UAAU,UAAvB,SACI,cAAC,EAAD,CACI3I,KAAMhB,KAAKe,MAAMC,KACjBf,YAAaD,KAAKwH,gBAClBrH,aAAcH,KAAK6H,iBACnBzH,UAAWJ,KAAK8H,uB,0CAsFf,IAIbvD,EAHGvD,EAAQhB,KAAKe,MAAbC,KACDqD,EAAYrD,EAAKhB,KAAKe,MAAMsD,UAAUxE,KAAKG,KAAKe,MAAMsD,UAAUtE,KAChEuE,EAAatD,EAAKhB,KAAKe,MAAMgG,QAAQlH,KAAKG,KAAKe,MAAMgG,QAAQhH,KAEnE,OAAQC,KAAKe,MAAMiG,MACf,KAAK,EACDzC,EAAsBH,EAASpD,EAAMqD,EAAWC,GAChD,MACJ,KAAK,EACDC,EAAsBuC,EAAO9F,EAAMqD,EAAWC,EAAW,OACzD,MACJ,QACIC,EAAsBuC,EAAO9F,EAAMqD,EAAWC,EAAW,OAEjE,IAAMsF,EH9GP,SAAqCtF,GAG1C,IAFA,IAAMsF,EAA2B,GAC7BzC,EAAc7C,EACK,OAAhB6C,GACLyC,EAAyBC,QAAQ1C,GACjCA,EAAcA,EAAYxB,aAE5B,OAAOiE,EGuGgCE,CAA4BxF,GAC7DtE,KAAK+J,gBAAgBxF,EAAqBqF,K,+EAExBrF,EAAqBqF,G,yEAC9BnD,EAAI,E,YAAGA,GAAKlC,EAAoBM,Q,oBAEjC4B,IAAMlC,EAAoBM,O,gCAEhBmF,EAAM,K,uBACNhK,KAAKiK,oBAAoBL,G,+CAM7BpJ,EAAO+D,EAAoBkC,GACjByD,EAAYlK,KAAKe,MAAMC,KAAKR,EAAKX,IAAIW,EAAKT,KAE1D2I,SAASC,eAAT,eAAgCnI,EAAKX,IAArC,YAA4CW,EAAKT,MAAOO,UACpD,oB,UACE0J,EAAM,I,QAhB6BvD,I,4MAqB3BmD,G,+EAChB5I,EAAOhB,KAAKe,MAAMC,KAClByG,EAAUzG,EAAKqH,QACZ5B,EAAI,E,YAAGA,EAAImD,EAAyB/E,Q,wBAG/BrE,EAAOoJ,EAAyBnD,GAChC0D,E,2BAAc1C,EAAQjH,EAAKX,KAAKW,EAAKT,M,IAAKa,YAAW,IAC3D6G,EAAQjH,EAAKX,KAAKW,EAAKT,KAAOoK,EAC1B1D,IAAMmD,EAAyB/E,OAAO,GACtC7E,KAAK2H,SAAS,CAAC3G,KAAKyG,IAExBiB,SAASC,eAAT,eAAgCnI,EAAKX,IAArC,YAA4CW,EAAKT,MAAOO,UACpD,0B,UACE0J,EAAM,I,QAXiCvD,I,4HA1LpC5F,aA4MnBkI,EAAY,SAAC/H,EAAKnB,EAAIE,GAExB,IADA,IAAM0H,EAAUzG,EAAKqH,QACb5B,EAAI,EAAEA,EAAI5G,EAAM4G,IACpB,IAAK,IAAI6B,EAAI,EAAEA,EAAIvI,EAAKuI,IAAI,CACxB,IAAM9H,EAAOiH,EAAQhB,GAAG6B,GAClB6B,EAAO,2BACN3J,GADM,IAETgE,SAASS,IACT7D,aAAa,EACblB,WAAU,EACVU,YAAW,EACX+E,aAAa,OAGjB8B,EAAQhB,GAAG6B,GAAK6B,EAGxB,OAAO1C,GAELoB,EAAa,SAAC7H,EAAKnB,EAAIE,GAEzB,IADA,IAAM0H,EAAUzG,EAAKqH,QACb5B,EAAI,EAAEA,EAAI5G,EAAM4G,IACpB,IAAK,IAAI6B,EAAI,EAAEA,EAAIvI,EAAKuI,IAAI,CACxB,IAAM9H,EAAOiH,EAAQhB,GAAG6B,GAClB6B,EAAO,2BACN3J,GADM,IAETC,QAAQ,EACR+D,SAASS,IACT7D,aAAa,EACblB,WAAU,EACVU,YAAW,EACX+E,aAAa,OAGjB8B,EAAQhB,GAAG6B,GAAK6B,EAGxB,OAAO1C,GAGLyC,EAAc,SAAClJ,EAAKnB,EAAIE,GAC1B,IAAM0H,EAAUzG,EAAKqH,QACf7H,EAAOiH,EAAQ5H,GAAKE,GACpBoK,EAAO,2BACN3J,GADM,IAETY,aAAcZ,EAAKY,cAGvB,OADAqG,EAAQ5H,GAAKE,GAAOoK,EACb1C,GAELC,EAA4B,SAAC1G,EAAMnB,EAAKE,GAC1C,IAAM0H,EAAUzG,EAAKqH,QACf7H,EAAOiH,EAAQ5H,GAAKE,GACpBoK,EAAO,2BACN3J,GADM,IAETC,QAAQ,IAGZ,OADAgH,EAAQ5H,GAAKE,GAAOoK,EACb1C,GAELiC,EAAiB,SAACU,EAAOC,GAE3B,IADA,IAAMrJ,EAAO,GACJnB,EAAM,EAAGA,EAAMuK,EAAQvK,IAAO,CAEnC,IADA,IAAMyK,EAAa,GACVvK,EAAM,EAAGA,EAAMsK,EAAQtK,IAC5BuK,EAAW3F,KAAK4F,EAAW1K,EAAIE,IAEnCiB,EAAK2D,KAAK2F,GAEd,OAAOtJ,GAGLuJ,EAAa,SAAC1K,EAAIE,GACpB,MAAO,CACHF,MACAE,MACAU,QAAQ,EACRC,aAAY,EACZC,WAAU,EACV6D,SAASS,IACT7D,aAAa,EACblB,WAAU,EACVU,YAAW,EACX+E,aAAa,OAGrB,SAASqE,EAAMQ,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIjC,WAAWiC,EAASF,MAGvCjD,QErRAtE,E,uKAtBP,OACI,sBAAK3C,UAAU,+CAAf,UACI,mBAAGA,UAAU,eAAeqK,KAAK,IAAjC,kCACA,wBAAQrK,UAAU,iBAAiB4C,KAAK,SAASC,cAAY,WACrDC,cAAY,0BAA0BC,gBAAc,yBACpDC,gBAAc,QAAQC,aAAW,oBAFzC,SAGI,sBAAMjD,UAAU,0BAGpB,qBAAKA,UAAU,2BAA2BD,GAAG,yBAA7C,SACI,oBAAIC,UAAU,qBAAd,SACI,oBAAIA,UAAU,kBAAd,SACI,oBAAGA,UAAU,WAAWqK,KAAK,IAA7B,mBAAuC,sBAAMrK,UAAU,UAAhB,uC,GAd9CO,aCgBN+J,G,6KAdP,OACI,sBAAKtK,UAAU,QAAf,UACI,oBAAIA,UAAU,YAAd,kCAGA,oBAAIA,UAAU,qBACd,oBAAIA,UAAU,YAAd,oE,GARIO,c,iBCsBLgK,E,4MApBX9J,MAAQ,G,uDAIJ,OACI,qBAAKT,UAAU,iBAAf,SACI,sBAAMA,UAAU,mBAAhB,SACA,cAAC,IAAD,CACIwK,QAAS,CACLC,QAAS,CAAC,mBAAoB,qBAAqB,WACnDC,WAAW,EACXC,MAAM,a,GAZJpK,a,sDCHX,OAA0B,kC,OCgBvBS,YAAW,CACzB4J,KAAM,CACFvJ,SAAU,IACVwJ,SAAS,IACTC,UAAU,IACVC,aAAc,EACd,UAAW,CACPC,UAAU,kHAOlBC,MAAO,CACHlC,OAAQ,KAEZmC,WAAY,CACRC,QAAQ,GACRC,WAAY,OACZ,UAAW,CACPC,UAAW,iB,+DCnBjBtK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrC2J,KAAM,CACFvJ,SAAU,IACVwJ,SAAS,IACTC,UAAU,IACVC,aAAc,EACd,UAAW,CACPC,UAAU,kHAOlBC,MAAO,CACHlC,OAAQ,KAEZuC,OAAQ,CACJD,UAAW,eACXE,WAAY,OACZH,WAAYnK,EAAMuK,YAAYC,OAAO,YAAa,CAC9CC,SAAUzK,EAAMuK,YAAYE,SAASC,YAG7CC,WAAY,CACRP,UAAW,kBAEfH,WAAY,CACRC,QAAQ,GACRC,WAAY,OACZ,UAAW,CACPC,UAAW,mBAMR,SAASQ,GAAcrM,GAClC,IAAMiC,EAAUV,KADyB,EAETW,IAAMC,UAAS,GAFN,mBAElCmK,EAFkC,KAExBC,EAFwB,KAQzC,OACI,cAACC,EAAA,EAAD,CAAgBhM,UAAWyB,EAAQyJ,WAAYe,EAAG,GAAlD,SACI,eAACC,EAAA,EAAD,CACIlM,UAAWyB,EAAQmJ,KADvB,UAGG,cAAC,IAAD,CAAM1H,GAAI1D,EAAMoL,KAAKuB,MAArB,SACI,cAACC,GAAA,EAAD,CACIC,UAAU,MACVC,IAAK9M,EAAMoL,KAAK2B,MAChBxD,OAAO,MACPyD,IAAKhN,EAAMoL,KAAK6B,QAGvB,cAACC,GAAA,EAAD,CACIH,MAAO/M,EAAMoL,KAAK2B,MAClBpJ,MAAO,CAACwJ,gBAAgB,cACxBC,OACI,cAACC,GAAA,EAAD,CACI7M,UAAW8M,YAAKrL,EAAQ6J,OAAT,gBACV7J,EAAQmK,WAAaE,IAE1BrI,QAzBE,WACtBsI,GAAaD,IAyBO9I,gBAAe8I,EACf7I,aAAW,YANf,SAQI,cAAC,KAAD,QAIZ,cAAC8J,GAAA,EAAD,CAAUC,GAAIlB,EAAUmB,QAAQ,OAAOC,eAAa,EAApD,SACI,cAACC,GAAA,EAAD,CACIhK,MAAO,CAACwJ,gBAAgB,cAD5B,SAGI,cAACS,GAAA,EAAD,UACK5N,EAAMoL,KAAKyC,uBCjGzB,WAA0B,mCCA1B,OAA0B,iCCA1B,OAA0B,kCCA1B,OAA0B,uCCA1B,OAA0B,uCCA1B,OAA0B,qCCA1B,OAA0B,mC,cCsD1BC,G,4MAxCX7M,MAAQ,CACJ8M,MAAM,GACNrI,OAAO,I,EAMXsI,QAAU,SAACC,GACPvE,QAAQC,IAAIsE,EAAEpL,OAAOH,OACrB,EAAKmF,SAAS,CAACnC,OAAOuI,EAAEpL,OAAOH,S,kEAJ/BxC,KAAK2H,SAAS,CAACkG,MCXb,CACH,CACIxN,GAAG,EACHwM,MAAM,aACNc,YAAY,qDACZlB,MAAM,cACNM,IAAIiB,IAER,CACI3N,GAAG,EACHwM,MAAM,gBACNc,YAAY,iDACZlB,MAAM,SACNM,IAAIkB,IAER,CACI5N,GAAG,EACHwM,MAAM,oBACNc,YAAY,uCACZlB,MAAM,QACNM,IAAI5H,IAER,CACI9E,GAAG,EACHwM,MAAM,oBACNc,YAAY,iDACZlB,MAAM,iBACNM,IAAI5H,IAER,CACI9E,GAAG,EACHwM,MAAM,UACNc,YAAY,8HACZlB,MAAM,UACNM,IAAImB,IAER,CACI7N,GAAG,EACHwM,MAAM,cACNc,YAAY,uGACZlB,MAAM,cACNM,IAAIoB,IAER,CACI9N,GAAG,EACHwM,MAAM,gBACNc,YAAY,yFACZlB,MAAM,gBACNM,IAAIqB,IAER,CACI/N,GAAG,EACHwM,MAAM,SACNc,YAAY,iBACZlB,MAAM,IACNM,IAAIsB,IAGR,CACIhO,GAAG,EACHwM,MAAM,YACNc,YAAY,iBACZlB,MAAM,IACNM,IAAIuB,S,+BD9CD,IAAD,OACL,OACG,eAAC,IAAMC,SAAP,WACI,qBAAKjO,UAAU,mCAAf,SACI,cAACkO,GAAA,EAAD,CACInO,GAAG,iBAAiBoO,MAAM,SAC1B/K,MAAM,YACNjB,SAAUzC,KAAK8N,YAGvB,qBAAKxN,UAAU,uDAAf,SAEQN,KAAKe,MAAM8M,MAAMrI,QAAO,SAAC0F,GAAD,OAAUA,EAAK2B,MAAM6B,cAAcC,SAAS,EAAK5N,MAAMyE,OAAOkJ,gBAAgBxD,EAAKyC,YAAYe,cAAcC,SAAS,EAAK5N,MAAMyE,OAAOkJ,kBAAgBzN,KAAI,SAAAiK,GAAI,OACpL,8BACI,cAACiB,GAAD,CACI7L,UAAU,mBAEV4K,KAAMA,GADDA,EAAK7K,kB,GA9BzBQ,a,SEcL+N,G,uKArBP,OACI,yBAAQC,MAAM,kDAAd,UAEI,sBAAKvO,UAAU,YAAYmD,MAAO,CAACkG,UAAU,UAA7C,UACI,qBAAKrJ,UAAU,MAAf,SAAqB,cAAC,KAAD,CAAcqK,KAAK,gCAAgCmE,kBAAgB,OAAOvL,aAAW,+BAArF,kCACrB,cAAC,KAAD,CAAcoH,KAAK,+CAA+CoE,YAAU,eAAeD,kBAAgB,OAAOvL,aAAW,2CAA7H,kBAFJ,QAII,cAAC,KAAD,CAAcoH,KAAK,oDAAoDoE,YAAU,sBAAsBD,kBAAgB,OAAOvL,aAAW,2CAAzI,kBAJJ,QAMI,qBAAKuJ,IAAI,sDAAsDF,IAAI,YAGvE,sBAAKiC,MAAM,oCAAX,iCACI,mBAAGlE,KAAK,gCAAgClH,MAAO,CAACC,MAAO,WAAvD,oC,GAfC7C,aCkBNmO,G,uKAZP,OACI,eAAC,IAAMT,SAAP,WACI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,W,GARG1N,aCmBJoO,I,mNAdXC,SAAW,WAAM,IAAD,EACkC,EAAKpP,MAAMqP,KAA5CC,GADD,EACJpH,IADI,EACCoH,YAAWC,EADZ,EACYA,WACxB,OAFY,EACuBC,QAExB,sBACDF,EACC,yBACAC,EACA,sBAEA,Y,uDAjBX,OACI,qBAAK/O,UAAWN,KAAKkP,WAArB,SACI,+BACKlP,KAAKF,MAAMqP,KAAKnH,Y,GALlBnH,cCmBJ0O,I,8KAfP,OACI,qBAAKjP,UAAU,QAAf,SACKN,KAAKF,MAAM0P,MAAMvO,KAAK,SAACkO,EAAKM,GACzB,OACI,cAAC,GAAD,CAEIN,KAAMA,GADDM,Y,GARb5O,cCwBLoC,G,uKArBP,OACI,sBAAK3C,UAAU,8CAAf,UACI,sBAAMA,UAAU,eAAhB,mBACA,wBAAQA,UAAU,iBAAiB4C,KAAK,SAASC,cAAY,WACrDC,cAAY,0BAA0BC,gBAAc,yBACpDC,gBAAc,QAAQC,aAAW,oBAFzC,SAGI,sBAAMjD,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BD,GAAG,yBAA7C,SACI,cAAC,IAAD,CAAMmD,GAAI,IAAV,SACI,sBAAMC,MAAO,CAACC,MAAM,SAApB,6B,GAZH7C,a,UCCfQ,GAAYC,YAAW,CACzBoO,KAAM,CACFxG,MAAO,OAIf,SAASyG,GAAUnN,GACf,MAAM,GAAN,OAAUA,GAIC,SAASoN,GAAe9P,GAAQ,IAAD,EACpCiC,EAAUV,KAQhB,OACI,sBAAKf,UAAWyB,EAAQ2N,KAAK,aAA7B,UACI,cAAChC,GAAA,EAAD,CAAYrN,GAAG,kBAAkBwP,cAAY,EAA7C,SACK/P,EAAM+M,QAEX,cAACiD,GAAA,GAAD,GACIC,aAAcjQ,EAAMkQ,QACpBC,iBAAkBN,GAClBO,kBAAgB,kBAChBC,kBAAkB,OAClBC,kBAjBS,SAAC1N,GAClB,GAA+B,KAA3BA,EAAMC,OAAO0N,UAAjB,CAGA,IAAMC,EAAMC,SAAS7N,EAAMC,OAAO0N,UAAU,IAC5CvQ,EAAM2C,SAAS6N,KAaPE,KAAM1Q,EAAM0Q,KACZC,MAAO3Q,EAAM2Q,MACbC,IAAK5Q,EAAM4Q,IACXnH,IAAKzJ,EAAMyJ,KATf,mCAUsB,MAVtB,0BAWczJ,EAAM6Q,YAXpB,OCtBZ,IAAMtP,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,YAAa,CACTC,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,KAEdC,YAAa,CACTC,UAAWN,EAAMG,QAAQ,QA+BlBI,GA3BM,SAAChC,GAClB,IAAMiC,EAAUV,KADY,EAENW,IAAMC,SAAS,KAFT,mBAErBC,EAFqB,KAEhBC,EAFgB,KAS5B,OACI,qBAAK7B,UAAU,YAAf,SACI,eAAC8B,EAAA,EAAD,CAAa9B,UAAWyB,EAAQP,YAAhC,UACI,cAACa,EAAA,EAAD,CAAYhC,GAAG,2BAAf,uBACA,eAACiC,EAAA,EAAD,CACIC,QAAQ,2BACRlC,GAAG,qBACHmC,MAAON,EACPO,SAbK,SAACC,GAClBP,EAAOO,EAAMC,OAAOH,QAQZ,UAMI,cAACQ,EAAA,EAAD,CAAUR,MAAO,EAAGiB,MAAO,CAACmN,UAAS,GAArC,mBACA,cAAC5N,EAAA,EAAD,CAAUR,MAAO,EAAjB,sCCOLmB,G,4MATXkN,YAAc,WACV,OAAI,EAAK/Q,MAAM6Q,WACJ,CAACG,OAAQ,eAET,I,uDAlCX,OACI,sBAAKxQ,UAAU,iBAAf,UACI,wBAAQA,UAAU,6BAA6ByD,QAAS/D,KAAKF,MAAMiR,UAAWC,SAAUhR,KAAKF,MAAM6Q,WAAYlN,MAAOzD,KAAK6Q,cAA3H,qBACA,cAAC,GAAD,IACA,cAACjB,GAAD,CACInN,SAAUzC,KAAKF,MAAMmR,cACrBpE,MAAM,QACN4D,OAAO,EACPT,QAAS,GACTQ,KAAM,EACNE,IAAK,GACLnH,IAAK,GACLoH,YAAY,IAEhB,cAACf,GAAD,CACInN,SAAUzC,KAAKF,MAAMoR,eACrBrE,MAAM,eACN4D,OAAO,EACPT,QAAS,IACTQ,KAAM,EACNE,IAAK,GACLnH,IAAK,IACLoH,WAAY3Q,KAAKF,MAAM6Q,aAE3B,wBAAQrQ,UAAU,6BAA6ByD,QAAS/D,KAAKF,MAAMmE,YAAa+M,SAAUhR,KAAKF,MAAM6Q,WAAYlN,MAAOzD,KAAK6Q,cAA7H,8B,GA1BGhQ,aCEbsQ,G,kDAQF,WAAYrR,GAAQ,IAAD,8BACf,cAAMA,IARViB,MAAQ,CACJqQ,OAAQ,IACR5B,MAAM,GACN6B,WAAU,EACVC,MAAM,KAGS,EA4BnBC,YAAc,SAACD,GAEX,EAAK3J,SAAS,CAAC2J,MAAM,IAAU,GAANA,KA9BV,EAgCnBE,mBAAqB,SAAChP,GAClB,EAAKmF,SAAS,CAACyJ,OAAO5O,IACtB,EAAKmF,SAAS,CAAC6H,MAAMiC,GAASjP,GAAO6O,WAAU,IAC/C7H,QAAQC,IAAIjH,IAnCG,EAqCnBkP,cAAgB,WACZ,EAAK/J,SAAS,CAAC6H,MAAMiC,GAAS,EAAK1Q,MAAMqQ,QAAQC,WAAU,KAtC5C,EAwCnBM,WAxCmB,sBAwCN,sCAAAC,EAAA,sDAIT,IAHc,EAAK7Q,MAAMuQ,MACzB,EAAK3J,SAAS,CAAC0J,WAAU,IACnBQ,EAAQ,GACNpL,EAAI,EAAEA,GAAG,EAAK1F,MAAMqQ,OAAO3K,IAC/BoL,EAAMlN,KAAK,GAEfkN,EAAM,GAAKA,EAAM,GAAK,EAClBC,EAAe,EAAK/Q,MAAMyO,MAC1BuC,GAAa,EACH,EACLtL,EAAI,EAXJ,YAWOA,GAAG,EAAK1F,MAAMqQ,QAXrB,oBAYY,IAAbS,EAAMpL,GAZL,wBAcGqL,EAAeE,GAAuBF,EAAarL,EAAE,GACrD,EAAKkB,SAAS,CAAC6H,MAAMsC,IAfxB,UAiBK9H,GAAM,EAAKjJ,MAAMuQ,OAjBtB,QAmBOhJ,EAAI7B,EAAEA,EAnBb,aAmBe6B,GAAG,EAAKvH,MAAMqQ,QAnB7B,wBAqBuB,GAAZW,IACAD,EAAeG,GAA0BH,EAAaC,IAE1DA,EAAYzJ,EAAE,EACdwJ,EAAeI,GAAuBJ,EAAaxJ,EAAE,GACrDwJ,EAAeG,GAA0BH,EAAaC,GACtD,EAAKpK,SAAS,CAAC6H,MAAMsC,IA3B5B,UA6BS9H,GAAM,EAAKjJ,MAAMuQ,OA7B1B,QA+BGO,EAAMvJ,GAAK,EA/Bd,QAmBoCA,GAAG7B,EAnBvC,wBAW4BA,IAX5B,uBAoCLqL,EAAeG,GAA0BH,EAAaC,GACtD,EAAKpK,SAAS,CAAC6H,MAAMsC,EAAaT,WAAU,IArCvC,4CAxCM,E,gEAIf,IAAM7B,EAAQiC,GAASzR,KAAKe,MAAMqQ,QAClCpR,KAAK2H,SAAS,CAAC6H,Y,+BAIf,OACI,gCACI,cAAC,GAAD,IACA,cAAC,GAAD,CACIyB,cAAejR,KAAKuR,YACpBL,eAAgBlR,KAAKwR,mBACrBvN,YAAejE,KAAK2R,WACpBZ,UAAa/Q,KAAK0R,cAClBf,WAAc3Q,KAAKe,MAAMsQ,YAE7B,cAAC,GAAD,CACIf,IAAKtQ,KAAKe,MAAMqQ,OAChB5B,MAAOxP,KAAKe,MAAMyO,e,GA7BlB3O,aA0FdmR,GAAyB,SAACxC,EAAM2C,GAClC,IAAMC,EAAW5C,EAAMnH,QACjB8G,EAAOiD,EAASD,GAChBE,EAAO,2BACNlD,GADM,IAETG,SAAQ,IAGZ,OADA8C,EAASD,GAAOE,EACTD,GAGLH,GAA4B,SAACzC,EAAM2C,GACrC,IAAMC,EAAW5C,EAAMnH,QACjB8G,EAAOiD,EAASD,GAChBE,EAAO,2BACNlD,GADM,IAETC,YAAYD,EAAKC,aAGrB,OADAgD,EAASD,GAAOE,EACTD,GAGLF,GAAyB,SAAC1C,EAAM2C,GAClC,IAAMC,EAAW5C,EAAMnH,QACjB8G,EAAOiD,EAASD,GAChBE,EAAO,2BACNlD,GADM,IAETE,YAAW,IAGf,OADA+C,EAASD,GAAOE,EACTD,GAGLX,GAAW,SAACa,GAEd,IADA,IAAM9C,EAAQ,GACNL,EAAO,EAAEA,GAAMmD,EAAKnD,IACxBK,EAAM7K,KAAK4N,GAAWpD,IAE1B,OAAOK,GAEL+C,GAAa,SAACvK,GAChB,MAAO,CACHA,MACAqH,YAAW,EACXD,YAAW,EACXE,SAAQ,IAGhB,SAAStF,GAAMQ,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIjC,WAAWiC,EAASF,MAEvC2G,UCvHAqB,I,mNAXXC,WAAa,WACT,OAAI,EAAK3S,MAAM4S,KAAKC,SACT,QACA,EAAK7S,MAAM4S,KAAKE,UAChB,MAEA,S,uDAlBX,OACI,qBACItS,UAAU,OACVmD,MAAO,CAAC4F,OAAOrJ,KAAKF,MAAM4S,KAAKxJ,MAC3B2J,WAAW7S,KAAKyS,aAChBhR,OAAOzB,KAAKF,MAAMgT,Y,GARnBjS,cCuBJkS,G,uKApBP,IAAItR,EAAS,EAIb,OAHIzB,KAAKF,MAAMkT,MAAMnO,OAAO,KACxBpD,EAAO,GAGP,qBAAKnB,UAAU,gDAAf,SACKN,KAAKF,MAAMkT,MAAM/R,KAAK,SAACyR,EAAKO,GACzB,OACI,cAAC,GAAD,CACIH,KAAMrR,EAENiR,KAAMA,GADDO,Y,GAZbpS,aCiCb,SAASqS,GAAcC,GAK1B,IAJA,IAAMtN,EAAQ,GACVuN,EAAID,EAAItO,OACNwO,EAAWF,EAAI9K,QAEZ5B,EAAI,EAAGA,EAAI2M,EAAE,EAAG3M,IACzB,CAEI,IADA,IAAI6M,EAAU7M,EACL6B,EAAI7B,EAAE,EAAG6B,EAAI8K,EAAG9K,IACrBzC,EAAMlB,KAAM,CACR+B,GAAG4M,EACH3M,GAAG2B,EACHiL,SAAQ,IAERF,EAAS/K,GAAGY,MAAQmK,EAASC,GAASpK,QACtCoK,EAAUhL,GAMlB,IAAMkL,EAAK,eAAOH,EAAS5M,IACrBgN,EAAK,eAAOJ,EAASC,IAC3BD,EAASC,GAAWE,EACpBH,EAAS5M,GAAKgN,EACd5N,EAAMlB,KAAM,CACR+B,GAAG4M,EACH3M,GAAGF,EACH8M,SAAQ,IAEZ1N,EAAMlB,KAAM,CACR+B,GAAGD,EACHE,GAAGF,EACH8M,SAAQ,IAShB,OANA1N,EAAMlB,KAAK,CACH+B,GAAG0M,EAAE,EACLzM,GAAGyM,EAAE,EACLG,SAAQ,IAGT1N,EAGJ,SAAS6N,GAAWP,GAIvB,IAHA,IAAMtN,EAAO,GACTuN,EAAID,EAAItO,OACNwO,EAAWF,EAAI9K,QACZ5B,EAAI,EAAGA,EAAI2M,EAAE,EAAG3M,IACrB,IAAK,IAAI6B,EAAI,EAAGA,EAAI8K,EAAE3M,EAAE,EAAG6B,IAAI,CAC3B,GAAI+K,EAAS/K,GAAGY,MAAQmK,EAAS/K,EAAE,GAAGY,MAAO,CAEzC,IAAMsK,EAAK,eAAOH,EAAS/K,IACrBmL,EAAK,eAAOJ,EAAS/K,EAAE,IAC7B+K,EAAS/K,EAAE,GAAKkL,EAChBH,EAAS/K,GAAKmL,EACd5N,EAAMlB,KAAM,CACR+B,GAAG4B,EACH3B,GAAG2B,EAAE,EACLiL,SAAQ,SAGZ1N,EAAMlB,KAAM,CACR+B,GAAG4B,EACH3B,GAAG2B,EAAE,EACLiL,SAAQ,IAGZjL,IAAM8K,EAAE3M,EAAE,GACVZ,EAAMlB,KAAM,CACR+B,GAAG0M,EAAE3M,EAAE,EACPE,GAAGyM,EAAE3M,EAAE,EACP8M,SAAQ,IAWxB,OANA1N,EAAMlB,KAAK,CACH+B,GAAG,EACHC,GAAG,EACH4M,SAAQ,IAGT1N,EAGJ,SAAS8N,GAAcR,GAI1B,IAHA,IAAMtN,EAAQ,GACVuN,EAAID,EAAItO,OACNwO,EAAWF,EAAI9K,QACZ5B,EAAI,EAAGA,EAAI2M,IAAK3M,EAIrB,IAHA,IAAImN,EAAMP,EAAS5M,GAAGyC,MAClBZ,EAAI7B,EAAI,EAEL6B,GAAK,GAAK+K,EAAS/K,GAAGY,MAAQ0K,GAAK,CACtC,IAAMJ,EAAK,eAAOH,EAAS/K,IACrBmL,EAAK,eAAOJ,EAAS/K,EAAE,IAC7B+K,EAAS/K,EAAE,GAAKkL,EAChBH,EAAS/K,GAAKmL,EACd5N,EAAMlB,KAAM,CACR+B,GAAG4B,EACH3B,GAAG2B,EAAE,EACLiL,SAAQ,IAEZjL,GAAQ,EAIhB,IAAI,IAAI7B,EAAE,EAAEA,EAAE2M,EAAE3M,IACZZ,EAAMlB,KAAK,CACP+B,GAAGD,EACHE,GAAGF,EACH8M,SAAQ,IAGhB,OAAO1N,ECxJX,IAAIgO,GAAS,GAEN,SAASC,GAAUC,GACtB,IAAIf,EAAQe,EAAO1L,QACnBwL,GAAS,GACT,IAAIG,EAAKD,EAAOlP,OAGhBoP,GAAMjB,EAAM,EADZgB,GAAQ,GAER,IAAI,IAAIvN,EAAE,EAAEA,GAAGuN,EAAGvN,IACdoN,GAAOlP,KAAK,CACR+B,GAAGD,EACHE,GAAGF,EACH8M,SAAQ,IAGhB,OAAOM,GAqCX,SAASI,GAAMjB,EAAMkB,EAAKC,GACtB,KAAID,GAAMC,GAAV,CACA,IAAMC,EAnCV,SAAsBpB,EAAOkB,EAAMC,GAG/B,IAFA,IAAIE,EAAQrB,EAAMmB,GAAOjL,MACrBoL,EAAKJ,EAAK,EACN5L,EAAE4L,EAAK5L,GAAG6L,EAAM,EAAE7L,IACtB,GAAI0K,EAAM1K,GAAGY,MAAOmL,KAChBC,IACShM,EAAG,CAER,IAAMiM,EAAK,eAAOvB,EAAMsB,IAClBE,EAAK,eAAOxB,EAAM1K,IACxB0K,EAAMsB,GAAME,EACZxB,EAAM1K,GAAKiM,EACXV,GAAOlP,KAAK,CACR+B,GAAG4N,EACH3N,GAAG2B,EACHiL,SAAQ,IAKxB,GAAIe,EAAG,IAAIH,EAAO,CACd,IAAMI,EAAK,eAAOvB,EAAMsB,EAAG,IACrBE,EAAK,eAAOxB,EAAMmB,IACxBnB,EAAMsB,EAAG,GAAKE,EACdxB,EAAMmB,GAASI,EACfV,GAAOlP,KAAK,CACR+B,GAAG4N,EAAG,EACN3N,GAAGwN,EACHZ,SAAQ,IAGhB,OAAOe,EAAG,EAIQG,CAAazB,EAAMkB,EAAKC,GAC1CF,GAAMjB,EAAMkB,EAAKE,EAAU,GAC3BH,GAAMjB,EAAMoB,EAAU,EAAED,I,IC/BblR,G,uKArBP,OACI,sBAAK3C,UAAU,8CAAf,UACI,sBAAMA,UAAU,eAAhB,gCACA,wBAAQA,UAAU,iBAAiB4C,KAAK,SAASC,cAAY,WACrDC,cAAY,0BAA0BC,gBAAc,yBACpDC,gBAAc,QAAQC,aAAW,oBAFzC,SAGI,sBAAMjD,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BD,GAAG,yBAA7C,SACI,cAAC,IAAD,CAAMmD,GAAI,IAAV,SACQ,sBAAMC,MAAO,CAACC,MAAM,SAApB,6B,GAZP7C,aCEfQ,GAAYC,YAAW,CACzBoO,KAAM,CACFxG,MAAO,OAIf,SAASyG,GAAUnN,GACf,MAAM,GAAN,OAAUA,GAIC,SAASoN,GAAe9P,GAAQ,IAAD,EACpCiC,EAAUV,KAQhB,OACI,sBAAKf,UAAWyB,EAAQ2N,KAAK,aAA7B,UAEI,cAACI,GAAA,GAAD,GACIC,aAAcjQ,EAAMkQ,QACpBC,iBAAkBN,GAClBO,kBAAgB,kBAChBC,kBAAkB,OAClBC,kBAfS,SAAC1N,GAClB,GAA+B,KAA3BA,EAAMC,OAAO0N,UAAjB,CAGA,IAAMC,EAAMC,SAAS7N,EAAMC,OAAO0N,UAAU,IAC5CvQ,EAAM4U,cAAcpE,KAWZE,KAAM1Q,EAAM0Q,KAEZE,IAAK5Q,EAAM4Q,IACXnH,IAAKzJ,EAAMyJ,KATf,mCAUsB,MAVtB,0BAWczJ,EAAM6U,SAXpB,IAaA,cAACjH,GAAA,EAAD,CAAYrN,GAAG,kBAAkBwP,cAAY,EAA7C,SACK/P,EAAM+M,WClCvB,IAAMxL,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,YAAa,CACTC,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,KAEdC,YAAa,CACTC,UAAWN,EAAMG,QAAQ,QAoClBI,GAhCM,SAAChC,GAClB,IAAMiC,EAAUV,KADY,EAENW,IAAMC,SAAS,KAFT,mBAErBC,EAFqB,KAEhBC,EAFgB,OAGFH,IAAMC,SAAS,CACrCkQ,IAAKrS,EAAMqS,MAJa,mBAGrBpR,EAHqB,UAY5B,OACI,qBAAKT,UAAU,YAAf,SACI,eAAC8B,EAAA,EAAD,CAAa9B,UAAWyB,EAAQP,YAAhC,UACI,cAACa,EAAA,EAAD,CAAYhC,GAAG,2BAAf,uBACA,eAACiC,EAAA,EAAD,CACIC,QAAQ,2BACRlC,GAAG,qBACHmC,MAAON,EACPO,SAdK,SAACC,GAClB8G,QAAQC,IAAI1I,EAAMoR,KAClBhQ,EAAOO,EAAMC,OAAOH,OACpB1C,EAAM8C,cAAc7B,EAAMoR,IAAIzP,EAAMC,OAAOH,QAOnC,UAMI,cAACQ,EAAA,EAAD,CAAUR,MAAO,EAAGiB,MAAO,CAACmN,UAAS,GAArC,yBACA,cAAC5N,EAAA,EAAD,CAAUR,MAAO,EAAjB,4BACA,cAACQ,EAAA,EAAD,CAAUR,MAAO,EAAjB,4BACA,cAACQ,EAAA,EAAD,CAAUR,MAAO,EAAjB,iC,gBCpCFlB,aAAW,SAACC,GAAD,MAAY,CACrCmO,KAAM,CACFxG,MAAO,IAAyB,EAAnB3H,EAAMG,QAAQ,IAE/BD,OAAQ,CACJ4H,OAAQ9H,EAAMG,QAAQ,QAuBTkT,aAAW,CAC5BlF,KAAM,CACFhM,MAAO,UACP2F,OAAQ,EACRoC,QAAS,UAEboJ,MAAO,CACHxL,OAAQ,GACRH,MAAO,GACP+D,gBAAiB,OACjB6H,OAAQ,yBACRjT,WAAY,GACZgK,YAAa,GACbP,UAAW,oBACX,6BAA8B,CAC1BA,UAAW,sBAEf,SAAU,CAENjC,OAAQ,EACRH,MAAO,EACP+D,gBAAiB,eACjBpB,WAAY,EACZkJ,YAAa,IAGrBC,OAAQ,GACRC,MAAO,CACH5L,OAAQ,GAEZ6L,KAAM,CACFxR,MAAO,UACPyR,QAAS,EACT9L,OAAQ,IAjCKuL,CAmClB9E,MCjEH,IAAMzO,GAAYC,YAAW,CACzBoO,KAAM,CACFxG,MAAO,OAKTkM,GAAUR,aAAW,CACvBlF,KAAM,CAEFrG,OAAQ,EACRoC,QAAS,UAEbwJ,MAAO,CACH5L,OAAQ,EACRgC,aAAc,GAElBwJ,MAAO,CACH5H,gBAAiB,SAXT2H,CAcb9E,MAEH,SAASH,GAAUnN,GACf,MAAM,GAAN,OAAUA,GAKC,SAAS6S,GAAYvV,GAChC,IAAMiC,EAAUV,KADuB,EAEbW,IAAMC,SAAS,CAAC,GAAI,KAFP,mBAEhCO,EAFgC,KAEzB8S,EAFyB,KAYvC,OACI,sBAAKhV,UAAWyB,EAAQ2N,KAAxB,UACI,cAAC0F,GAAD,cACIpE,SAAUlR,EAAM6U,QAChBnS,MAAOA,EACPC,SAbS,SAACC,EAAO6S,GACzBD,EAASC,IAaDnF,kBAVS,SAAC1N,EAAO6S,GACzB/L,QAAQC,IAAI8L,IAUJpF,kBAAkB,OAClBD,kBAAgB,eAChBD,iBAAkBN,IAPtB,oBAQsB,QAEtB,cAACjC,GAAA,EAAD,CAAYrN,GAAG,eAAewP,cAAY,EAA1C,4B,kCCrDG,SAAS2F,GAAa1V,GAAQ,IAAD,EACdkC,IAAMC,SAAS,CACrCwT,UAAU,IAF0B,mBACjC1U,EADiC,KAC1B4G,EAD0B,KAUxC,OACI,cAAC+N,GAAA,EAAD,CAAW7V,KAAG,EAAd,SACI,cAAC8V,GAAA,EAAD,CACIC,QAAS,cAACC,GAAA,EAAD,CAAQC,QAAS/U,EAAM0U,SAAUhT,SARjC,SAACC,GAClBiF,EAAS,2BAAK5G,GAAN,mBAAc2B,EAAMC,OAAOoT,KAAOrT,EAAMC,OAAOmT,WACvDhW,EAAMkW,eAAetT,EAAMC,OAAOmT,UAMwCC,KAAK,aACvEtH,MAAM,MACNuC,SAAUlR,EAAM6U,Y,ICwDjBhR,G,4MAVXkN,YAAc,WACV,OAAI,EAAK/Q,MAAM6U,QACJ,CAAC7D,OAAQ,eAET,I,uDA5DX,OACI,sBAAKxQ,UAAU,iBAAf,UACI,wBACIA,UAAU,wBACVyD,QAAS/D,KAAKF,MAAMmW,YACpBjF,SAAUhR,KAAKF,MAAM6U,QACrBlR,MAAOzD,KAAK6Q,cAJhB,uBASA,cAACwE,GAAD,CACIV,QAAS3U,KAAKF,MAAM6U,UAExB,cAAC,GAAD,CACI3E,QAAS,GACTU,IAAK,GACLnH,IAAK,IACLiH,KAAM,GACN3D,MAAM,UACN6H,cAAe1U,KAAKF,MAAM4U,cAC1BC,QAAS3U,KAAKF,MAAM6U,UAExB,cAAC,GAAD,CACI3E,QAAS,GACTU,IAAK,GACLnH,IAAK,IACLiH,KAAM,EACN3D,MAAM,QACN6H,cAAe1U,KAAKF,MAAMoW,cAC1BvB,SAAS,IAEb,cAAC,GAAD,CACIxC,IAAK,EACLvP,cAAe5C,KAAKF,MAAM8C,gBAE9B,cAAC4S,GAAD,CACIb,QAAS3U,KAAKF,MAAM6U,QACpBqB,eAAgBhW,KAAKF,MAAMkW,iBAE/B,cAAC,GAAD,CACI7D,IAAK,EACLvP,cAAe5C,KAAKF,MAAM8C,gBAE9B,wBACItC,UAAU,0BACVyD,QAAS/D,KAAKF,MAAMqW,YACpBnF,SAAUhR,KAAKF,MAAM6U,QACrBlR,MAAOzD,KAAK6Q,cAJhB,8B,GA9CGhQ,aCAbuV,G,kDAaJ,aAAe,IAAD,8BACV,gBAbJrV,MAAQ,CACJsV,MAAM,GACNrD,MAAO,GACPe,OAAQ,GACRuC,SAAQ,EACRhF,MAAM,GACND,WAAU,EACVkF,YAAW,EACXC,YAAW,EACXC,MAAM,EACNC,MAAM,GAEI,EAqCdC,gBAAkB,WACd,IAAMjE,EAAOkE,GAAgB,EAAK7V,MAAMsV,OAClC7B,EAAQ9B,EAAKrK,QACnB,EAAKV,SAAS,CAACqL,MAAMN,EAAKqB,OAAOS,KAxCvB,EA0Cd9C,cAAgB,WAEZ,IADA,IAAMsB,EAAQ,EAAKjS,MAAMiS,MACjBvM,EAAE,EAAEA,EAAEuM,EAAMnO,OAAO4B,IAAI,CAC3B,IAAMiM,EAAI,2BAAOM,EAAMvM,IAAb,IAAgBkM,UAAS,EAAOC,WAAU,IACpDI,EAAMvM,GAAKiM,EAEf,IAAMqB,EAASf,EAAM3K,QACrB,EAAKV,SAAS,CAACqL,QAAMe,YAjDX,EAoDd8C,aAAe,SAAC7O,GACZ,EAAKL,SAAS,CAAC2O,QAAQtO,KArDb,EAuDd8O,kBAAoB,SAAC9O,GACjB,EAAKL,SAAS,CAAC0O,MAAMrO,IACrB,EAAK2O,mBAzDK,EA2Dd5O,kBAAoB,SAACoK,EAAInK,GACT,IAARmK,EACA,EAAKxK,SAAS,CAAC8O,MAAMzO,IAErB,EAAKL,SAAS,CAAC+O,MAAM1O,KA/Df,EAkEd+O,mBAAqB,SAAC/O,GACpB,IAAMsJ,EAAS,IAAItJ,EACnB,EAAKL,SAAS,CAAC2J,WApEH,EAsEd0F,WAAa,WAGT,IAAIC,EAmBAC,EAlBJ,OAFA,EAAKvP,SAAS,CAAC0J,WAAU,IAEjB,EAAKtQ,MAAM0V,OACf,KAAK,EACDQ,EAASvD,GAAW,EAAK3S,MAAMiS,OAC/B,MACJ,KAAK,EACDiE,EAAS/D,GAAc,EAAKnS,MAAMiS,OAClC,MACJ,KAAK,EACDiE,EAAStD,GAAc,EAAK5S,MAAMiS,OAClC,MACJ,KAAK,EACDiE,EAASnD,GAAU,EAAK/S,MAAMgT,QAC9BvK,QAAQC,IAAIwN,GACZ,MACJ,QACIA,EAASvD,GAAW,EAAK3S,MAAMiS,OAIvC,GAAI,EAAKjS,MAAMuV,QAEX,OAAQ,EAAKvV,MAAM2V,OACf,KAAK,EACDQ,EAASxD,GAAW,EAAK3S,MAAMgT,QAC/B,MACJ,KAAK,EACDmD,EAAShE,GAAc,EAAKnS,MAAMgT,QAClC,MACJ,KAAK,EACDmD,EAASvD,GAAc,EAAK5S,MAAMgT,QAClC,MACJ,KAAK,EACDmD,EAASpD,GAAU,EAAK/S,MAAMgT,QAC9B,MACJ,QACImD,EAASxD,GAAW,EAAK3S,MAAMgT,QAK3C,EAAKoD,YAAYF,GACb,EAAKlW,MAAMuV,SAAU,EAAKc,aAAaF,IAnHjC,EAqHdC,YArHc,uCAqHA,WAAOE,GAAP,qBAAAzF,EAAA,sDAEV,EAAKjK,SAAS,CAAC4O,YAAW,IACV,EAAKxV,MAAduQ,MAGD+B,EAAW,EAAKtS,MAAMiS,MACpBvM,EAAI,EAPF,YAOIA,EAAE4Q,EAAMxS,QAPZ,wBASM,IAAJ4B,IACA4M,EAASgE,EAAM5Q,EAAE,GAAGC,IAApB,2BAA+B2M,EAASgE,EAAM5Q,EAAE,GAAGC,KAAnD,IAAuDkM,WAAU,IACjES,EAASgE,EAAM5Q,EAAE,GAAGE,IAApB,2BAA+B0M,EAASgE,EAAM5Q,EAAE,GAAGE,KAAnD,IAAuDiM,WAAU,KAElEyE,EAAM5Q,GAAGC,KAAK2Q,EAAM5Q,GAAGE,GACtB0M,EAASgE,EAAM5Q,GAAGC,IAAlB,2BAA4B2M,EAASgE,EAAM5Q,GAAGC,KAA9C,IAAkDiM,UAAS,EAAKC,WAAU,IACpEyE,EAAM5Q,GAAG8M,SACTC,EADkB,2BACNH,EAASgE,EAAM5Q,GAAGC,KADZ,IACgBkM,WAAU,IAC5Ca,EAFkB,2BAENJ,EAASgE,EAAM5Q,GAAGE,KAFZ,IAEgBiM,WAAU,IAClDS,EAASgE,EAAM5Q,GAAGE,IAAM6M,EACxBH,EAASgE,EAAM5Q,GAAGC,IAAM+M,IAExBJ,EAASgE,EAAM5Q,GAAGC,IAAlB,2BAA4B2M,EAASgE,EAAM5Q,GAAGC,KAA9C,IAAkDkM,WAAU,IAC5DS,EAASgE,EAAM5Q,GAAGE,IAAlB,2BAA4B0M,EAASgE,EAAM5Q,GAAGE,KAA9C,IAAkDiM,WAAU,KAE7DnM,IAAM4Q,EAAMxS,OAAO,IAClB,EAAK8C,SAAS,CAAC4O,YAAW,KACI,IAA1B,EAAKxV,MAAMyV,YACX,EAAK7O,SAAS,CAAC0J,WAAU,KAWjC,EAAK1J,SAAS,CAACqL,MAAMK,IAtCnB,UAuCIrJ,GAAM,EAAKjJ,MAAMuQ,OAvCrB,QAOmB7K,IAPnB,2DArHA,wDAgKZ2Q,aAhKY,uCAgKG,WAAOC,GAAP,qBAAAzF,EAAA,sDACK,EAAK7Q,MAAduQ,MACP,EAAK3J,SAAS,CAAC6O,YAAW,IACpBnD,EAAW,EAAKtS,MAAMgT,OACpBtN,EAAI,EAJD,YAIGA,EAAE4Q,EAAMxS,QAJX,wBAMK,IAAJ4B,IACA4M,EAASgE,EAAM5Q,EAAE,GAAGC,IAApB,2BAA+B2M,EAASgE,EAAM5Q,EAAE,GAAGC,KAAnD,IAAuDkM,WAAU,IACjES,EAASgE,EAAM5Q,EAAE,GAAGE,IAApB,2BAA+B0M,EAASgE,EAAM5Q,EAAE,GAAGE,KAAnD,IAAuDiM,WAAU,KAElEyE,EAAM5Q,GAAGC,KAAK2Q,EAAM5Q,GAAGE,GACtB0M,EAASgE,EAAM5Q,GAAGC,IAAlB,2BAA4B2M,EAASgE,EAAM5Q,GAAGC,KAA9C,IAAkDiM,UAAS,EAAKC,WAAU,IACpEyE,EAAM5Q,GAAG8M,SACTC,EADkB,2BACNH,EAASgE,EAAM5Q,GAAGC,KADZ,IACgBkM,WAAU,IAC5Ca,EAFkB,2BAENJ,EAASgE,EAAM5Q,GAAGE,KAFZ,IAEgBiM,WAAU,IAClDS,EAASgE,EAAM5Q,GAAGE,IAAM6M,EACxBH,EAASgE,EAAM5Q,GAAGC,IAAM+M,IAExBJ,EAASgE,EAAM5Q,GAAGC,IAAlB,2BAA4B2M,EAASgE,EAAM5Q,GAAGC,KAA9C,IAAkDkM,WAAU,IAC5DS,EAASgE,EAAM5Q,GAAGE,IAAlB,2BAA4B0M,EAASgE,EAAM5Q,GAAGE,KAA9C,IAAkDiM,WAAU,KAE5DnM,IAAM4Q,EAAMxS,OAAO,IACnB,EAAK8C,SAAS,CAAC6O,YAAW,KACI,IAA1B,EAAKzV,MAAMwV,YACX,EAAK5O,SAAS,CAAC0J,WAAU,KAWjC,EAAK1J,SAAS,CAACoM,OAAOV,IAnCnB,UAoCGrJ,GAAM,EAAKjJ,MAAMuQ,OApCpB,QAIkB7K,IAJlB,2DAhKH,wD,gEAIV,IAAMiM,EAAOkE,GAAgB5W,KAAKe,MAAMsV,OAClC7B,EAAQ9B,EAAKrK,QACnBrI,KAAK2H,SAAS,CAACqL,MAAMN,EAAKqB,OAAOS,M,+BAInC,OACI,eAAC,IAAMjG,SAAP,WACI,cAAC,GAAD,IACA,cAAC,GAAD,CACIoG,QAAS3U,KAAKe,MAAMsQ,UACpB2E,eAAgBhW,KAAK6W,aACrBV,YAAanW,KAAKgX,WAClBf,YAAajW,KAAK2W,gBAClB5F,UAAW/Q,KAAK0R,cAChBgD,cAAe1U,KAAK8W,kBACpBlU,cAAe5C,KAAK+H,kBACpBmO,cAAelW,KAAK+W,qBAExB,sBAAKzW,UAAU,0BAAf,UAEI,cAAC,GAAD,CACI0S,MAAOhT,KAAKe,MAAMiS,QAEpBhT,KAAKe,MAAMuV,SAAW,oBAAI7S,MAAO,CAACyF,MAAM,SACxClJ,KAAKe,MAAMuV,SACb,cAAC,GAAD,CACItD,MAAOhT,KAAKe,MAAMgT,mB,GA5CnBlT,aAwNnB,SAASmJ,GAAMQ,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIjC,WAAWiC,EAASF,MAEtD,IAAMoM,GAAkB,SAACU,GAErB,IADA,IAAMtE,EAAQ,GACNvM,EAAI,EAAEA,EAAE6Q,EAAI7Q,IAChBuM,EAAMrO,KAAK4S,MAEf,OAAOvE,GAELuE,GAAU,WACd,MAAO,CACHrO,MAAO9C,KAAKC,MAAsB,IAAhBD,KAAKE,UAAgB,GACvCqM,UAAS,EACTC,WAAU,IAGDwD,MCjPA,I,MAAA,IAA0B,mCCqC1BnH,G,4MA1BX1O,aAAe,WACX,OAAG,EAAKT,MAAMqP,KAAKqI,WACR,qBACD,EAAK1X,MAAMqP,KAAKsI,UACf,oBACF,EAAK3X,MAAMqP,KAAKuI,UACd,oBACF,EAAK5X,MAAMqP,KAAKwI,UACd,oBAEA,a,EAGfC,UAAY,WACR,OAAK,EAAK9X,MAAMqP,KAAKtP,IAAI,EAAKC,MAAMqP,KAAKpP,KAAK,IAAM,EACzC,CACHkN,gBAAgB,SAGb,CACHA,gBAAgB,S,uDA1BxB,OACI,qBAAK3M,UAAWN,KAAKO,eAAgBkD,MAAOzD,KAAK4X,YAAjD,SACM5X,KAAKF,MAAMqP,KAAKuI,WAAa,qBAAK5K,IAAKoB,GAAO7E,OAAO,QAAQ5F,MAAO,CAACgI,QAAQ,gB,GAJ5E5K,aCsBJ0O,G,uKApBP,OACI,qBAAKjP,UAAU,aAAf,SACKN,KAAKF,MAAMgG,MAAM7E,KAAK,SAACpB,EAAIqB,GACxB,OACI,8BACKrB,EAAIoB,KAAK,SAACkO,EAAKM,GACZ,OACI,cAAC,GAAD,CAEIN,KAAMA,GADDM,OAJXvO,Y,GANdL,aCsBLoC,G,uKApBP,OACI,sBAAK3C,UAAU,8CAAf,UACI,sBAAMA,UAAU,eAAhB,qBACA,wBAAQA,UAAU,iBAAiB4C,KAAK,SAASC,cAAY,WACrDC,cAAY,0BAA0BC,gBAAc,yBACpDC,gBAAc,QAAQC,aAAW,oBAFzC,SAGI,sBAAMjD,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BD,GAAG,yBAA7C,SACI,cAAC,IAAD,CAAMmD,GAAI,IAAV,SACQ,sBAAMC,MAAO,CAACC,MAAM,SAApB,6B,GAZP7C,aCEfQ,GAAYC,YAAW,CACzBoO,KAAM,CACFxG,MAAO,OAIf,SAASyG,GAAUnN,GACf,MAAM,GAAN,OAAUA,GAIC,SAASoN,GAAe9P,GAAQ,IAAD,EACpCiC,EAAUV,KAQhB,OACI,sBAAKf,UAAWyB,EAAQ2N,KAAK,aAA7B,UAEI,cAACI,GAAA,GAAD,GACIC,aAAcjQ,EAAMkQ,QACpBC,iBAAkBN,GAClBO,kBAAgB,kBAChBC,kBAAkB,OAClBC,kBAfS,SAAC1N,GAClB,GAA+B,KAA3BA,EAAMC,OAAO0N,UAAjB,CAGA,IAAMC,EAAMC,SAAS7N,EAAMC,OAAO0N,UAAU,IAC5CvQ,EAAM4U,cAAcpE,KAWZE,KAAM1Q,EAAM0Q,KAEZE,IAAK5Q,EAAM4Q,IACXnH,IAAKzJ,EAAMyJ,KATf,mCAUsB,MAVtB,0BAWczJ,EAAM6U,SAXpB,IAaA,cAACjH,GAAA,EAAD,CAAYrN,GAAG,kBAAkBwP,cAAY,EAA7C,SACK/P,EAAM+M,W,ICgBRlJ,G,4MAVXkN,YAAc,WACV,OAAI,EAAK/Q,MAAM6U,QACJ,CAAC7D,OAAQ,eAET,I,uDA7CX,OACI,sBAAKxQ,UAAU,iBAAf,UACI,wBACIA,UAAU,wBACVyD,QAAS/D,KAAKF,MAAM+X,QACpB7G,SAAUhR,KAAKF,MAAM6U,QACrBlR,MAAOzD,KAAK6Q,cAJhB,yBASA,cAAC,GAAD,CACIb,QAAS,EACTU,IAAK,EACLnH,IAAK,EACLiH,KAAM,EACN3D,MAAM,YACN6H,cAAe1U,KAAKF,MAAM4U,cAC1BC,QAAS3U,KAAKF,MAAM6U,UAExB,cAAC,GAAD,CACI3E,QAAS,GACTU,IAAK,EACLnH,IAAK,IACLiH,KAAM,EACN3D,MAAM,QACN6H,cAAe1U,KAAKF,MAAMoW,gBAG9B,wBACI5V,UAAU,0BACVyD,QAAS/D,KAAKF,MAAMqW,YACpBnF,SAAUhR,KAAKF,MAAM6U,QACrBlR,MAAOzD,KAAK6Q,cAJhB,8B,GA/BGhQ,aCwGJiX,G,kDAhGX,WAAYhY,GAAQ,IAAD,8BACf,cAAMA,IARViB,MAAM,CACF+E,MAAM,GACNsL,OAAO,EACPE,MAAM,IACND,WAAU,GAGK,EA8BnB0G,WAAY,WACR,EAAKpQ,SAAS,CAAC0J,WAAU,KA/BV,EAkCnB2G,kBAAoB,SAAChQ,GACjB,IAAMsJ,EAAkB,IAAT,IAAItJ,GACnB,EAAKL,SAAS,CAAC2J,WApCA,EAsCnB2G,kBAAoB,SAAC7G,GACjB,EAAKzJ,SAAS,CAACyJ,WACf,IAAMtL,EAAQoS,GAAS,EAAKnX,MAAMqQ,QAClC,EAAKzJ,SAAS,CAAC7B,WAzCA,EA2CnBqS,YAAc,WACV,IAAMrS,EAAQoS,GAAS,EAAKnX,MAAMqQ,QAClC,EAAKzJ,SAAS,CAAC7B,WA7CA,EA+CnBsS,cAAiB,WACb,IAAMhQ,EAAWiQ,GAAc,EAAKtX,MAAM+E,MAAM,EAAK/E,MAAMqQ,QAC3D,EAAKzJ,SAAS,CAAC7B,MAAMsC,KAjDN,EAmDnBkQ,UAnDmB,sBAmDP,8BAAA1G,EAAA,6DACR,EAAKjK,SAAS,CAAC0J,WAAU,IACnBjJ,EAAW,EAAKrH,MAAM+E,MAAMuC,QAF1B,SAGF,EAAKkQ,WAAWnQ,EAAS,GAHvB,OAIFoQ,EAAYH,GAAc,EAAKtX,MAAM+E,MAAM,EAAK/E,MAAMqQ,QAC5D,EAAKzJ,SAAS,CAAC7B,MAAM0S,EAAUnH,WAAU,IALjC,2CAnDO,EA0DnBkH,WA1DmB,uCA0DL,WAAOzS,EAAM/F,GAAb,mBAAA6R,EAAA,2DAEN7R,GAAK,EAAKgB,MAAMqQ,QAFV,0CAGC,GAHD,OAMNhJ,EAAWtC,EAAMuC,QACZ5B,EAAI,EAPH,YAOMA,EAAI,EAAK1F,MAAMqQ,QAPrB,wBAUNhJ,EAAWiQ,GAAcjQ,EAAS,EAAKrH,MAAMqQ,QACvCqH,EAASC,GAAWtQ,EAAS3B,EAAE1G,EAAI,EAAKgB,MAAMqQ,QACpDhJ,EAAWqQ,EAAO,GAElB,EAAK9Q,SAAS,CAAC7B,MAAMsC,IAdf,UAeA4B,GAAM,EAAKjJ,MAAMuQ,OAfjB,YAgBFmH,EAAO,GAhBL,kCAiBgB,EAAKF,WAAWnQ,EAASrI,EAAI,GAjB7C,YAkBU,IAlBV,kDAmBS,GAnBT,eAqBFqI,EAAS3B,GAAG1G,GAAZ,2BAAuBqI,EAAS3B,GAAG1G,IAAnC,IAAwC2X,WAAU,EAAKD,WAAU,IACjE,EAAK9P,SAAS,CAAC7B,MAAMsC,IAtBnB,UAuBI4B,GAAM,EAAKjJ,MAAMuQ,OAvBrB,QAwBFlJ,EAAS3B,GAAG1G,GAAZ,2BAAuBqI,EAAS3B,GAAG1G,IAAnC,IAAwC2X,WAAU,EAAMD,WAAU,IAClE,EAAK9P,SAAS,CAAC7B,MAAMsC,IAzBnB,eA4BNA,EAAS3B,GAAG1G,GAAZ,2BAAuBqI,EAAS3B,GAAG1G,IAAnC,IAAwC2X,WAAU,EAAMD,WAAU,IAClErP,EAAWiQ,GAAcjQ,EAAS,EAAKrH,MAAMqQ,QAC7C,EAAKzJ,SAAS,CAAC7B,MAAMsC,IA9Bf,UA+BA4B,GAAM,EAAKjJ,MAAMuQ,OA/BjB,QAO4B7K,IAP5B,iDAiCH,GAjCG,4CA1DK,0D,gEAIf,IAAMX,EAAQoS,GAASlY,KAAKe,MAAMqQ,QAElCpR,KAAK2H,SAAS,CAAC7B,Y,+BAIf,OACI,gCACI,cAAC,GAAD,IACA,cAAC,GAAD,CACIoQ,cAAelW,KAAKgY,kBACpBtD,cAAe1U,KAAKiY,kBACpB9B,YAAanW,KAAKsY,UAClB3D,QAAS3U,KAAKe,MAAMsQ,UACpBwG,QAAS7X,KAAKmY,YACdQ,OAAQ3Y,KAAK+X,aAEjB,qBAAKtU,MAAO,CAACkG,UAAU,UAAvB,SACI,cAAC,GAAD,CACI7D,MAAO9F,KAAKe,MAAM+E,iB,GA/BtBjF,aAyGpB,SAASmJ,GAAMQ,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIjC,WAAWiC,EAASF,MAEtD,IAAM6N,GAAgB,SAACvS,EAAM8S,GAEzB,IADA,IAAMxQ,EAAWtC,EAAMuC,QACd5B,EAAI,EAAEA,EAAEmS,EAAGnS,IAChB,IAAK,IAAI6B,EAAI,EAAEA,EAAEsQ,EAAEtQ,IACfF,EAAS3B,GAAG6B,GAAZ,2BAAqBF,EAAS3B,GAAG6B,IAAjC,IAAoCqP,WAAU,EAAOH,YAAW,EAAMC,WAAU,IAGxF,OAAOrP,GAGLsQ,GAAa,SAAC5S,EAAMjG,EAAIE,EAAI6Y,GAI9B,IAHA,IAAMxQ,EAAWtC,EAAMuC,QACnB8J,GAAM,EAED1L,EAAI,EAAEA,EAAImS,EAAEnS,IACb2B,EAASvI,GAAK4G,GAAGiR,WACjBtP,EAASvI,GAAK4G,GAAd,2BAAuB2B,EAASvI,GAAK4G,IAArC,IAAwC+Q,YAAW,IACnDrF,GAAM,GAEN/J,EAASvI,GAAK4G,GAAd,2BAAuB2B,EAASvI,GAAK4G,IAArC,IAAwCkR,WAAU,IAI1D,IAAK,IAAIlR,EAAI,EAAEA,EAAImS,EAAEnS,IACb2B,EAAS3B,GAAG1G,GAAK2X,WACjBtP,EAAS3B,GAAG1G,GAAZ,2BAAuBqI,EAAS3B,GAAG1G,IAAnC,IAAwCyX,YAAW,IACnDrF,GAAM,GAEN/J,EAAS3B,GAAG1G,GAAZ,2BAAuBqI,EAAS3B,GAAG1G,IAAnC,IAAwC4X,WAAU,IAG1D,IAAK,IAAIlR,EAAI5G,EAAIyI,EAAIvI,EAAK0G,GAAK,GAAK6B,GAAK,EAAG7B,IAAK6B,IACzCF,EAAS3B,GAAG6B,GAAGoP,WACftP,EAAS3B,GAAG6B,GAAZ,2BAAqBF,EAAS3B,GAAG6B,IAAjC,IAAoCkP,YAAW,IAC/CrF,GAAM,GAEN/J,EAAS3B,GAAG6B,GAAZ,2BAAqBF,EAAS3B,GAAG6B,IAAjC,IAAoCqP,WAAU,IAGtD,IAAK,IAAIlR,EAAI5G,EAAIyI,EAAIvI,EAAK0G,EAAGmS,GAAKtQ,GAAK,EAAG7B,IAAK6B,IACvCF,EAAS3B,GAAG6B,GAAGoP,WACftP,EAAS3B,GAAG6B,GAAZ,2BAAqBF,EAAS3B,GAAG6B,IAAjC,IAAoCkP,YAAW,IAC/CrF,GAAM,GAEN/J,EAAS3B,GAAG6B,GAAZ,2BAAqBF,EAAS3B,GAAG6B,IAAjC,IAAoCqP,WAAU,IAGtD,IAAK,IAAIlR,EAAI5G,EAAIyI,EAAIvI,EAAK0G,EAAGmS,GAAKtQ,EAAIsQ,EAAGnS,IAAK6B,IACtCF,EAAS3B,GAAG6B,GAAGoP,WACftP,EAAS3B,GAAG6B,GAAZ,2BAAqBF,EAAS3B,GAAG6B,IAAjC,IAAoCkP,YAAW,IAC/CrF,GAAM,GAEN/J,EAAS3B,GAAG6B,GAAZ,2BAAqBF,EAAS3B,GAAG6B,IAAjC,IAAoCqP,WAAU,IAGtD,IAAK,IAAIlR,EAAI5G,EAAIyI,EAAIvI,EAAK0G,GAAG,GAAK6B,EAAIsQ,EAAGnS,IAAK6B,IACtCF,EAAS3B,GAAG6B,GAAGoP,WACftP,EAAS3B,GAAG6B,GAAZ,2BAAqBF,EAAS3B,GAAG6B,IAAjC,IAAoCkP,YAAW,IAC/CrF,GAAM,GAEN/J,EAAS3B,GAAG6B,GAAZ,2BAAqBF,EAAS3B,GAAG6B,IAAjC,IAAoCqP,WAAU,IAMtD,OAFAvP,EAASvI,GAAKE,GAAd,2BAAyBqI,EAASvI,GAAKE,IAAvC,IAA4C2X,WAAU,EAAKD,WAAU,IAE9D,CAACrP,EAAS+J,IAEf+F,GAAW,SAACU,GAEd,IADA,IAAMtG,EAAO,GACJ7L,EAAI,EAAEA,EAAEmS,EAAEnS,IAAK,CAEpB,IADA,IAAMoS,EAAO,GACLvQ,EAAG,EAAEA,EAAEsQ,EAAEtQ,IACbuQ,EAAKlU,KAAKmU,GAAQrS,EAAE6B,IAExBgK,EAAK3N,KAAKkU,GAEd,OAAOvG,GAGLwG,GAAU,SAACjZ,EAAIE,GACjB,MAAM,CACFF,MACAE,MACA2X,WAAU,EACVC,WAAU,EACVH,YAAW,EACXC,WAAU,IClKlB,SAASzN,GAAMQ,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIjC,WAAWiC,EAASF,MArChC3J,Y,OCwDtB,SAASkY,GAAGnH,EAAGoH,EAAGC,GACJrH,EAAElL,GAAIsS,EAAErS,GAAGsS,EAAEtS,GAAIqS,EAAEtS,GAAIuS,EAAEtS,GAAGiL,EAAEjL,GAAIsS,EAAEvS,GAAIkL,EAAEjL,GAAGqS,EAAErS,GACzD,OAAIiL,EAAElL,IAAIsS,EAAErS,GAAGsS,EAAEtS,IAAIqS,EAAEtS,IAAIuS,EAAEtS,GAAGiL,EAAEjL,IAAIsS,EAAEvS,IAAIkL,EAAEjL,GAAGqS,EAAErS,IAAM,EAQ7D,SAASuS,GAAItH,EAAGoH,EAAGC,GACf,OAAIrH,EAAElL,IAAMsS,EAAErS,GAAKsS,EAAEtS,IAAMqS,EAAEtS,IAAMuS,EAAEtS,GAAKiL,EAAEjL,IAAMsS,EAAEvS,IAAMkL,EAAEjL,GAAKqS,EAAErS,IAAM,EC6E7E,SAASqD,GAAMQ,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIjC,WAAWiC,EAASF,MAEvC2O,O,kDA3IX,WAAYrZ,GAAQ,IAAD,8BACf,cAAMA,IAPViB,MAAM,CACFqY,KAAK,GACLC,MAAM,GACNC,YAAY,IACZC,aAAa,KAEE,EAyEnBC,YAzEmB,sBAyEL,kCAAA5H,EAAA,sDACHyH,EAAS,EAAKtY,MAAdsY,MACDI,EAAU,EAAKC,cAAcC,SAC7BC,EAAOH,EAAQI,WAAW,OAC3BC,UAAU,EAAG,EAAGL,EAAQvQ,MAAOuQ,EAAQpQ,QAC5CuQ,EAAKG,UAAY,UACjBH,EAAKI,YAAc,UACVvT,EAAI,EAPH,YAOMA,EAAE4S,EAAMxU,QAPd,oBAQD,EAAK/E,MAAMma,QARV,wBASFL,EAAKE,UAAU,EAAG,EAAGL,EAAQvQ,MAAOuQ,EAAQpQ,QAT1C,kCAYNuQ,EAAKM,YACDb,EAAM5S,GAAG0T,KACTP,EAAKM,YACLN,EAAKQ,UAAY,EACjBR,EAAKG,UAAY,QACjBH,EAAKS,OAAOhB,EAAM5S,GAAG6T,KAAK5T,GAAI2S,EAAM5S,GAAG6T,KAAK3T,IAC5CiT,EAAKW,IAAIlB,EAAM5S,GAAG6T,KAAK5T,GAAI2S,EAAM5S,GAAG6T,KAAK3T,GAAI,GAAI,EAAG,EAAEP,KAAKoU,IAC3DZ,EAAKa,OACLb,EAAKc,YAELd,EAAKM,YACLN,EAAKG,UAAY,MACjBH,EAAKS,OAAOhB,EAAM5S,GAAGjD,GAAGkD,GAAI2S,EAAM5S,GAAGjD,GAAGmD,IACxCiT,EAAKW,IAAIlB,EAAM5S,GAAGjD,GAAGkD,GAAI2S,EAAM5S,GAAGjD,GAAGmD,GAAI,GAAI,EAAG,EAAEP,KAAKoU,IACvDZ,EAAKa,OACLb,EAAKc,YAELd,EAAKM,YACLN,EAAKQ,UAAY,EACjBR,EAAKI,YAAc,YAEnBJ,EAAKM,YACLN,EAAKG,UAAY,aACjBH,EAAKS,OAAOhB,EAAM5S,GAAG6T,KAAK5T,GAAI2S,EAAM5S,GAAG6T,KAAK3T,IAC5CiT,EAAKW,IAAIlB,EAAM5S,GAAG6T,KAAK5T,GAAI2S,EAAM5S,GAAG6T,KAAK3T,GAAI,GAAI,EAAG,EAAEP,KAAKoU,IAC3DZ,EAAKa,OACLb,EAAKc,YAELd,EAAKM,YACLN,EAAKG,UAAY,aACjBH,EAAKS,OAAOhB,EAAM5S,GAAGjD,GAAGkD,GAAI2S,EAAM5S,GAAGjD,GAAGmD,IACxCiT,EAAKW,IAAIlB,EAAM5S,GAAGjD,GAAGkD,GAAI2S,EAAM5S,GAAGjD,GAAGmD,GAAI,GAAI,EAAG,EAAEP,KAAKoU,IACvDZ,EAAKa,OACLb,EAAKc,YAELd,EAAKQ,UAAY,EACjBR,EAAKI,YAAc,cAGvBJ,EAAKS,OAAOhB,EAAM5S,GAAG6T,KAAK5T,GAAI2S,EAAM5S,GAAG6T,KAAK3T,IAC5CiT,EAAKe,OAAOtB,EAAM5S,GAAGjD,GAAGkD,GAAI2S,EAAM5S,GAAGjD,GAAGmD,IACxCiT,EAAKgB,SACLhB,EAAKc,YACDjU,IAAM4S,EAAMxU,OAAS,GACrB,EAAK/E,MAAM+a,YAxDT,UA0DA7Q,GAAM,EAAKlK,MAAMwR,OA1DjB,QAOqB7K,IAPrB,2DAvEV,EAAKkB,SAAS,CAAC2R,YAAYnQ,OAAOC,aAClC,EAAKzB,SAAS,CAAC4R,aAAapQ,OAAOG,YAAY,KAC/CE,QAAQC,IAAIN,OAAOC,YACnB,EAAK0R,MAAQ9Y,IAAM+Y,YACnB,EAAKrB,cAAgB1X,IAAM+Y,YANZ,E,gEASf/a,KAAKgb,e,yCAGUC,EAAWC,EAAWC,GAEjCnb,KAAKF,MAAMsZ,OAAO6B,EAAU7B,OAC5BpZ,KAAK2H,SAAS,CAACyR,KAAKpZ,KAAKF,MAAMsZ,OAC/BpZ,KAAKgb,cAELhb,KAAKF,MAAMma,UAAUgB,EAAUhB,UACJ,IAAvBja,KAAKF,MAAMma,SACXja,KAAKwZ,gB,+BAMb,OACI,qBAAK/V,MAAO,CAACkG,UAAU,UAAvB,SACI,sBAAKrJ,UAAU,aAAf,UACI,wBACIA,UAAU,SACVD,GAAG,UACHoD,MAAO,CAACwJ,gBAAgB,cACxBmO,IAAKpb,KAAK0Z,cAAexQ,MAAOC,OAAOC,WAAYC,OAAQF,OAAOG,YAAY,MAClF,wBACIhJ,UAAU,SACVD,GAAG,UAEH+a,IAAKpb,KAAK8a,MAAO5R,MAAOC,OAAOC,WAAYC,OAAQF,OAAOG,YAAY,a,mCAStF,IAAM+R,EAASrb,KAAK8a,MAAMnB,QACpB2B,EAAMD,EAAOxB,WAAW,MAC9ByB,EAAIxB,UAAU,EAAG,EAAGuB,EAAOnS,MAAOmS,EAAOhS,QAEzCiS,EAAIvB,UAAY,YAChBuB,EAAItB,YAAc,QAClB,IAAK,IAAIvT,EAAI,EAAGA,EAAEzG,KAAKF,MAAMsZ,KAAKvU,OAAO4B,IACrC6U,EAAIpB,YAEJoB,EAAIf,IAAIva,KAAKF,MAAMsZ,KAAK3S,GAAGC,GAAI1G,KAAKF,MAAMsZ,KAAK3S,GAAGE,GAAI,GAAI,EAAG,EAAEP,KAAKoU,IACpEc,EAAIb,OACJa,EAAIlB,UAAY,EAChBkB,EAAIV,SACJU,EAAIZ,YAGRY,EAAIZ,YACJ,IAAMa,ED1EP,SAAqBC,GACxB,GAAoB,IAAhBA,EAAOC,KAAX,CAGA,IAAMC,EAAaF,EAAO,GACpBG,EAAWH,EAAQA,EAAO3W,OAAO,GACjC+W,EAAK,GAAIC,EAAO,GAChBhW,EAAQ,GACRwT,EAAM,GACZuC,EAAGjX,KAAM+W,GACTG,EAAKlX,KAAK+W,GACV,IAAK,IAAIjV,EAAI,EAAGA,EAAG+U,EAAO3W,OAAQ4B,IAC9B,GAAKA,IAAO+U,EAAO3W,OAAS,GAAOkU,GAAI2C,EAAWF,EAAO/U,GAAGkV,GAAY,CACpE,KAAOC,EAAG/W,QAAS,IAAMkU,GAAG6C,EAAGA,EAAG/W,OAAO,GAAG+W,EAAGA,EAAG/W,OAAO,GAAG2W,EAAO/U,KAC/D4S,EAAM1U,KAAK,CACP2V,KAAKsB,EAAGA,EAAG/W,OAAO,GAClBrB,GAAGoY,EAAGA,EAAG/W,OAAO,GAChBsV,KAAI,IAERyB,EAAGxU,MAEPwU,EAAGjX,KAAM6W,EAAO/U,IAChB4S,EAAM1U,KAAK,CACP2V,KAAKsB,EAAGA,EAAG/W,OAAO,GAClBrB,GAAGoY,EAAGA,EAAG/W,OAAO,GAChBsV,KAAI,IAKhB,IAAI,IAAI1T,EAAI,EAAGA,EAAG+U,EAAO3W,OAAO4B,IAC5B,GAAKA,IAAO+U,EAAO3W,OAAS,GAAOqU,GAAKwC,EAAWF,EAAO/U,GAAGkV,GAAY,CACrE,KAAOE,EAAKhX,QAAS,IAAMqU,GAAI2C,EAAKA,EAAKhX,OAAO,GAAGgX,EAAKA,EAAKhX,OAAO,GAAG2W,EAAO/U,KAC1E4S,EAAM1U,KAAK,CACP2V,KAAKuB,EAAKA,EAAKhX,OAAO,GACtBrB,GAAGqY,EAAKA,EAAKhX,OAAO,GACpBsV,KAAI,IAER0B,EAAKzU,MAETyU,EAAKlX,KAAM6W,EAAO/U,IAClB4S,EAAM1U,KAAK,CACP2V,KAAKuB,EAAKA,EAAKhX,OAAO,GACtBrB,GAAGqY,EAAKA,EAAKhX,OAAO,GACpBsV,KAAI,IAKhB,IAAK,IAAI1T,EAAI,EAAGA,EAAImV,EAAG/W,OAAQ4B,IAC3BZ,EAAMlB,KAAKiX,EAAGnV,IAElB,IAAK,IAAIA,EAAIoV,EAAKhX,OAAS,EAAG4B,EAAI,EAAGA,IACjCZ,EAAMlB,KAAKkX,EAAKpV,IAEpB,MAAO,CAACZ,EAAMwT,ICmBEyC,CAAY9b,KAAKF,MAAMsZ,MAElBpZ,KAAK0Z,cAAcC,QACdE,WAAW,MAC5BC,UAAU,EAAG,EAAGuB,EAAOnS,MAAOmS,EAAOhS,QAC1CrJ,KAAK2H,SAAS,CAAC0R,MAAMkC,EAAI,S,GA5EZ1a,aCwBNoC,G,uKArBP,OACI,sBAAK3C,UAAU,8CAAf,UACI,sBAAMA,UAAU,eAAhB,yBACA,wBAAQA,UAAU,iBAAiB4C,KAAK,SAASC,cAAY,WACrDC,cAAY,0BAA0BC,gBAAc,yBACpDC,gBAAc,QAAQC,aAAW,oBAFzC,SAGI,sBAAMjD,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BD,GAAG,yBAA7C,SACI,cAAC,IAAD,CAAMmD,GAAI,IAAV,SACI,sBAAMC,MAAO,CAACC,MAAM,SAApB,6B,GAZH7C,aCCfQ,GAAYC,YAAW,CACzBoO,KAAM,CACFxG,MAAO,OAIf,SAASyG,GAAUnN,GACf,MAAM,GAAN,OAAUA,GAIC,SAASoN,GAAe9P,GAAQ,IAAD,EACpCiC,EAAUV,KAQhB,OACI,sBAAKf,UAAWyB,EAAQ2N,KAAK,aAA7B,UACI,cAAChC,GAAA,EAAD,CAAYrN,GAAG,kBAAkBwP,cAAY,EAA7C,SACK/P,EAAM+M,QAEX,cAACiD,GAAA,GAAD,GACIC,aAAcjQ,EAAMkQ,QACpBC,iBAAkBN,GAClBO,kBAAgB,kBAChBC,kBAAkB,OAClBC,kBAjBS,SAAC1N,GAClB,GAA+B,KAA3BA,EAAMC,OAAO0N,UAAjB,CAGA,IAAMC,EAAMC,SAAS7N,EAAMC,OAAO0N,UAAU,IAC5CvQ,EAAM2C,SAAS6N,KAaPE,KAAM1Q,EAAM0Q,KACZC,MAAO3Q,EAAM2Q,MACbC,IAAK5Q,EAAM4Q,IACXnH,IAAKzJ,EAAMyJ,KATf,mCAUsB,MAVtB,0BAWczJ,EAAM6Q,YAXpB,O,ICkBGhN,G,4MATXkN,YAAc,WACV,OAAI,EAAK/Q,MAAM6Q,WACJ,CAACG,OAAQ,eAET,I,uDAvCX,OACI,sBAAKxQ,UAAU,iBAAf,UACI,wBAAQA,UAAU,6BAA6ByD,QAAS/D,KAAKF,MAAMiR,UAAWC,SAAUhR,KAAKF,MAAM6Q,WAAYlN,MAAOzD,KAAK6Q,cAA3H,qBACA,cAAC,GAAD,CACIpO,SAAUzC,KAAKF,MAAMmR,cACrBpE,MAAM,QACN4D,OAAO,EACPT,QAAS,GACTQ,KAAM,EACNE,IAAK,GACLnH,IAAK,GACLoH,YAAY,IAEhB,cAAC,GAAD,CACIlO,SAAUzC,KAAKF,MAAMoR,eACrBrE,MAAM,eACN4D,OAAO,EACPT,QAAS,GACTQ,KAAM,EACNE,IAAK,GACLnH,IAAK,IACLoH,WAAY3Q,KAAKF,MAAM6Q,aAE3B,wBACIrQ,UAAU,6BACVyD,QAAS/D,KAAKF,MAAMmE,YACpB+M,SAAUhR,KAAKF,MAAM6Q,WACrBlN,MAAOzD,KAAK6Q,cAJhB,0C,GAzBGhQ,aC6EnB,SAASkb,GAAW3K,GAEhB,IADA,IAAMgI,EAAM,GACH3S,EAAI,EAAGA,EAAE2K,EAAO3K,IACrB2S,EAAKzU,KAAKqX,MASd,OAPA5C,EAAKjU,MAAM,SAACyM,EAAEoH,GACX,OAAIpH,EAAElL,KAAKsS,EAAEtS,GACFkL,EAAElL,GAAGsS,EAAEtS,GAEPkL,EAAEjL,GAAKqS,EAAErS,MAGhByS,EAEX,SAAS4C,KACL,IAAM9S,EAAQC,OAAOC,WAAW,GAC1BC,EAASF,OAAOG,YAAY,IAC5B2S,EAAS7V,KAAKC,MAAOD,KAAKE,SAAS+C,GAAS,GAElD,MAAO,CACH3C,GAFWN,KAAKC,MAAMD,KAAKE,SAAS4C,GAAO,GAG3CvC,GAAGsV,GAGIC,O,kDAtFX,aAAe,IAAD,8BACV,gBAZJnb,MAAM,CACFqY,KAAK,GACLC,MAAM,GACN8C,YAAW,EACXjT,MAAM,IACNG,OAAO,IACPgI,WAAU,EACVC,MAAM,IACNF,OAAO,IAGG,EA4BdI,mBAAqB,SAAChP,GAClB,EAAKmF,SAAS,CAACyJ,OAAO5O,IACtB,EAAK4Z,qBA9BK,EAgCd7K,YAAc,SAACD,GAEX,EAAK3J,SAAS,CAAC2J,MAAM,IAAU,GAANA,KAlCf,EAoCd+K,uBAAyB,SAACrU,GACtB,EAAKL,SAAS,CAAC2U,WAAWtU,KArChB,EAuCduU,gBAAkB,WACd,EAAK5U,SAAS,CAAC0J,WAAU,KAxCf,EA0Cd+G,cAAgB,WACZ,EAAKzQ,SAAS,CAACsS,SAAQ,KA3Cb,EA6CdmC,kBAAoB,WAChB,EAAKzU,SAAS,CAAC0J,WAAU,IACzB,EAAK1J,SAAS,CAACyR,KAAK2C,GAAW,EAAKhb,MAAMqQ,WA/ChC,EAkDdoL,cAAgB,WACZ,IAEMC,EAAM,CACR5c,IAHQuG,KAAKC,MAAoB,IAAdD,KAAKE,UAAc,GAItCvG,IAHQqG,KAAKC,MAAoB,IAAdD,KAAKE,UAAc,IAKpC8S,EAAO,EAAKrY,MAAMqY,KACxBA,EAAKzU,KAAK8X,GACV,EAAK9U,SAASyR,IAzDd,EAAKzR,SAAS,CAACuB,MAAMC,OAAOC,WAAWC,OAAOF,OAAOG,YAAY,MAFvD,E,gEAKVtJ,KAAK2H,SAAS,CAACuB,MAAMC,OAAOC,WAAWC,OAAOF,OAAOG,YAAY,Q,+BAGjE,OACI,gCACI,cAAC,GAAD,IACA,cAAC,GAAD,CACIyH,UAAW/Q,KAAKoc,kBAChBnY,YAAajE,KAAKuc,gBAClBtL,cAAejR,KAAKuR,YACpBL,eAAgBlR,KAAKwR,qBAEzB,cAAC,GAAD,CACItI,MAAOlJ,KAAKe,MAAMmI,MAClBG,OAAQrJ,KAAKe,MAAMsI,OACnB+P,KAAMpZ,KAAKe,MAAMqY,KACjByB,UAAW7a,KAAKoY,cAChB6B,QAASja,KAAKe,MAAMsQ,UACpBC,MAAOtR,KAAKe,MAAMuQ,e,GAnCbzQ,aCyCV6b,G,4MAzCX3b,MAAM,CACF4b,OAAM,G,EA0BV7O,QAAU,SAACC,GACe,KAAlBA,EAAEpL,OAAOH,OACTgH,QAAQC,IAAIsE,EAAEpL,OAAOH,OACrB,EAAK1C,MAAM8c,SAAS7O,EAAEpL,OAAOH,QAG7B,EAAK1C,MAAM8c,SAAS,M,EAG5BC,gBAAkB,a,uDAhCd,OACI,gCACI,cAACrO,GAAA,EAAD,CACImO,MAAO3c,KAAKe,MAAM4b,MAClBtc,GAAG,6BACHoO,MAAM,eACNvL,KAAK,SACL4Z,QAAQ,WACRra,SAAUzC,KAAK8N,UAPvB,IAQO,uBAAM,uBACT,+DACkC9N,KAAKF,MAAMid,SAE7C,uBACA,wBACIzc,UAAU,yBACVyD,QAAS/D,KAAKF,MAAMkd,UAFxB,mC,GAnBSnc,aCCnBQ,GAAYC,YAAW,CACzBoO,KAAM,CACFxG,MAAO,OAKTkM,GAAUR,aAAW,CACvBlF,KAAM,CAEFrG,OAAQ,EACRH,MAAO,IACPuC,QAAS,UAEbwJ,MAAO,CACH5L,OAAQ,EACRgC,aAAc,GAElBwJ,MAAO,CACH5H,gBAAiB,SAZT2H,CAeb9E,MAEH,SAASH,GAAUnN,GACf,MAAM,GAAN,OAAUA,GAKC,SAAS6S,GAAYvV,GAAQ,IAAD,EACjCiC,EAAUV,KADuB,EAEbW,IAAMC,SAAS,CAACnC,EAAMmd,MAAOnd,EAAMid,QAFtB,mBAEhCva,EAFgC,KAEzB8S,EAFyB,KAcvC,OAHA4H,qBAAU,WACN5H,EAAS,CAACxV,EAAMmd,MAAMnd,EAAMid,UAC9B,CAACjd,EAAMmd,MAAMnd,EAAMid,QAEjB,sBAAKzc,UAAWyB,EAAQ2N,KAAxB,UACI,cAAC,IAAD,GACIsB,UAAQ,EACRxO,MAAOA,EACPC,SAfS,SAACC,EAAO6S,GACzBD,EAASC,IAeDnF,kBAZS,SAAC1N,EAAO6S,GACzB/L,QAAQC,IAAI8L,IAYJpF,kBAAkB,OAClBD,kBAAgB,eAChBD,iBAAkBN,IAPtB,mCAQsB,MARtB,qBASS7P,EAAMyJ,KATf,IAWA,cAACmE,GAAA,EAAD,CAAYrN,GAAG,eAAewP,cAAY,EAA1C,8B,ICfGsN,G,4MANXC,OAAS,WAEL,OADYhX,KAAKC,OAAQ,EAAKvG,MAAMid,MAAM,EAAKjd,MAAMmd,OAAO,I,uDArC5D,OACI,gCAEI,4BAEI,wBAAQ3c,UAAU,2BAA2B4C,KAAK,SAASC,cAAY,WAC/DC,cAAY,mBAAmBE,gBAAc,QAAQD,gBAAc,kBAD3E,4BAKJ,qBAAK/C,UAAU,WAAWD,GAAG,kBAA7B,SACI,qBAAKC,UAAU,iBAAf,SACI,wBAAQmD,MAAO,CAAC4Z,eAAe,UAA/B,SACI,cAAC,GAAD,CACIN,MAAO/c,KAAKF,MAAMid,MAClBE,MAAOjd,KAAKF,MAAMmd,MAClB1T,IAAKvJ,KAAKF,MAAMyJ,YAMjC,6DACiCvJ,KAAKod,SADtC,OArBH,IAuBU,uBACN,wBACI9c,UAAU,6BACVyD,QAAS/D,KAAKF,MAAMwd,UAFxB,iBAIA,wBACIhd,UAAU,4BACVyD,QAAS/D,KAAKF,MAAMyd,SAFxB,gBA5BJ,IA+BiB,8B,GAlCT1c,aCiBL2c,G,uKAhBP,OACI,gCACI,uBAAMld,UAAU,YAAhB,4BACoBN,KAAKF,MAAMyb,OAFnC,IAGY,uBACR,wBACIjb,UAAU,yBACVyD,QAAS/D,KAAKF,MAAM2d,UAFxB,4B,GAPK5c,aC2BN6c,G,uKAvBP,OACI,gCACK1d,KAAKF,MAAMid,QAAU/c,KAAKF,MAAMmd,OACjC,cAAC,GAAD,CACIK,UAAWtd,KAAKF,MAAMwd,UACtBC,SAAUvd,KAAKF,MAAMyd,SACrBR,MAAO/c,KAAKF,MAAMid,MAClBE,MAAOjd,KAAKF,MAAMmd,MAClB1T,IAAKvJ,KAAKF,MAAMyJ,MAGnBvJ,KAAKF,MAAMid,QAAU/c,KAAKF,MAAMmd,OAC9B,cAAC,GAAD,CACI1B,IAAKvb,KAAKF,MAAMid,MAChBU,UAAWzd,KAAKF,MAAM2d,mB,GAhBxB5c,aCsBNoC,G,uKArBP,OACI,sBAAK3C,UAAU,8CAAf,UACI,sBAAMA,UAAU,eAAhB,gCACA,wBAAQA,UAAU,iBAAiB4C,KAAK,SAASC,cAAY,WACrDC,cAAY,0BAA0BC,gBAAc,yBACpDC,gBAAc,QAAQC,aAAW,oBAFzC,SAGI,sBAAMjD,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BD,GAAG,yBAA7C,SACI,cAAC,IAAD,CAAMmD,GAAI,IAAV,SACI,sBAAMC,MAAO,CAACC,MAAM,SAApB,6B,GAZH7C,aC4DN8c,G,4MAzDX5c,MAAM,CACFgc,MAAM,IACNE,MAAM,EACN1T,IAAI,IACJ8H,WAAU,G,EA8BduM,gBAAkB,WACd,EAAKjW,SAAS,CAAC0J,WAAU,K,EAE7BwM,cAAgB,WACZ,EAAKlW,SAAS,CAAC0J,WAAU,EAAM0L,MAAM,IAAIE,MAAM,K,EAEnDa,UAAY,WACR,IAAM3X,EAAMC,KAAKC,OAAQ,EAAKtF,MAAMgc,MAAM,EAAKhc,MAAMkc,OAAO,GAC5D,EAAKtV,SAAS,CAACsV,MAAM9W,EAAI,K,EAE7B4X,SAAW,WACP,IAAM5X,EAAMC,KAAKC,OAAQ,EAAKtF,MAAMgc,MAAM,EAAKhc,MAAMkc,OAAO,GAC5D,EAAKtV,SAAS,CAACoV,MAAM5W,K,EAEzB6X,eAAiB,SAACpC,GACd,IAAI5T,EAAMuI,SAASqL,GACf5T,GAAK,IACLA,EAAM,KAEV,EAAKL,SAAS,CAACoV,MAAM/U,EAAIuB,IAAIvB,K,uDA9C7B,OACI,gCACI,cAAC,GAAD,IACA,uBACA,uBACA,uBACJ,oCACMhI,KAAKe,MAAMsQ,WACb,cAAC,GAAD,CACI2L,UAAWhd,KAAK4d,gBAChBb,MAAO/c,KAAKe,MAAMgc,MAClBH,SAAU5c,KAAKge,iBAElBhe,KAAKe,MAAMsQ,WACZ,cAAC,GAAD,CACIiM,UAAWtd,KAAK8d,UAChBP,SAAUvd,KAAK+d,SACfhB,MAAO/c,KAAKe,MAAMgc,MAClBE,MAAOjd,KAAKe,MAAMkc,MAClB1T,IAAKvJ,KAAKe,MAAMwI,IAChBkU,UAAWzd,KAAK6d,0B,GA5BThd,aCqCZ2R,I,mNAtBXC,WAAa,WACT,OAAI,EAAK3S,MAAM4S,KAAKC,SACT,QACA,EAAK7S,MAAM4S,KAAKE,UAChB,SACA,EAAK9S,MAAM4S,KAAKuL,OAChB,MACD,EAAKne,MAAM4S,KAAKwL,QACf,SAEA,W,EAGfC,YAAc,WACV,OAAI,EAAKre,MAAM4S,KAAK0L,QACT,kBAEA,O,uDAhCX,OACI,qBACI9d,UAAU,OACVmD,MAAO,CAAC4F,OAAOrJ,KAAKF,MAAM4S,KAAKxJ,MAC3B4L,OAAQ9U,KAAKme,cACbtL,WAAW7S,KAAKyS,aAChBhR,OAAOzB,KAAKF,MAAMgT,Y,GATnBjS,cCuBJkS,G,uKApBP,IAAItR,EAAS,EAIb,OAHIzB,KAAKF,MAAMkT,MAAMnO,OAAO,KACxBpD,EAAO,GAGP,qBAAKnB,UAAU,gDAAf,SACKN,KAAKF,MAAMkT,MAAM/R,KAAK,SAACyR,EAAKO,GACzB,OACI,cAAC,GAAD,CACIH,KAAMrR,EAENiR,KAAMA,GADDO,Y,GAZbpS,aCHhBgT,GAAS,GACE,SAASwK,GAAUtK,GAC9B,IAAIf,EAAQe,EAAO1L,QACnBwL,GAAS,GACT,IAAIG,EAAKD,EAAOlP,OAIhB,OADAyZ,GAAOtL,EAAM,EADbgB,GAAQ,GAEDH,GAoCX,SAASyK,GAAOtL,EAAMuL,EAAEC,GAEpB,KAAID,GAAGC,GAAP,CACA,IAAIjS,EAAIgS,GAAIC,EAAED,GAAG,EAGjBD,GAAOtL,EAAMuL,EAFbhS,EAAInG,KAAKC,MAAMkG,IAGf+R,GAAOtL,EAAMzG,EAAE,EAAEiS,GAxCrB,SAAexL,EAAOuL,EAAGhS,EAAGiS,GAUxB,IARA,IAAIC,EAAKlS,EAAEgS,EAAE,EACTG,EAAKF,EAAEjS,EAELoS,EAAI3L,EAAM3K,MAAMkW,EAAGhS,EAAE,GACrBqS,EAAI5L,EAAM3K,MAAMkE,EAAE,EAAEiS,EAAE,GACxB/X,EAAI,EACJ6B,EAAI,EACJuW,EAAIN,EACF9X,EAAEgY,GAAMnW,EAAEoW,GACRC,EAAElY,GAAGyC,OAAS0V,EAAEtW,GAAGY,OACnB8J,EAAM6L,GAAKF,EAAElY,GACbA,MAEAuM,EAAM6L,GAAKD,EAAEtW,GACbA,KAEJuW,IAEJ,KAAOpY,EAAIgY,GACPzL,EAAM6L,GAAKF,EAAElY,GACbA,IACAoY,IAEJ,KAAOvW,EAAIoW,GACP1L,EAAM6L,GAAKD,EAAEtW,GACbA,IACAuW,IAaJC,CAAM9L,EAAMuL,EAAEhS,EAAEiS,GAChB,IACIhc,EAAQ,CACR0R,KAAKqK,EACLpK,MAAMqK,EACNrY,IAAIoG,EACJvE,IALYgL,EAAM3K,MAAMkW,EAAEC,EAAE,IAOhC3K,GAAOlP,KAAKnC,IC5DhB,IAAIqR,GAAS,GACE,SAASkL,GAAShL,GAC7B,IAAIf,EAAQe,EAAO1L,QAKnB,OAJAwL,GAAS,GAkCb,SAAkBb,EAAMI,GACpB,IAAI,IAAI3M,EAAIL,KAAKC,MAAM+M,EAAE,GAAG,EAAE3M,GAAG,EAAEA,IAE/BuY,GAAQhM,EAAMI,EAAE3M,GAEpB,IAAK,IAAIA,EAAI2M,EAAE,EAAI3M,EAAI,EAAGA,IAAK,CAE3B,IAAIwY,EAAOjM,EAAMvM,GACjBuM,EAAMvM,GAAKuM,EAAM,GACjBA,EAAM,GAAKiM,EACX,IAAIzc,EAAQ,CACR0R,KAAKzN,EACL0N,MAAM,EACN+K,QAAO,GAEXrL,GAAOlP,KAAKnC,GAEZwc,GAAQhM,EAAOvM,EAAG,IAhDtB0Y,CAASnM,EAFAe,EAAOlP,QAGTgP,GAEX,SAASmL,GAAQhM,EAAMI,EAAE3M,GACrB,IAAI2Y,EAAU3Y,EACV8X,EAAI,EAAI9X,EAAI,EACZ+X,EAAI,EAAI/X,EAAI,EAWhB,GARI8X,EAAInL,GAAKJ,EAAMuL,GAAGrV,MAAQ8J,EAAMoM,GAASlW,QACzCkW,EAAUb,GAGVC,EAAIpL,GAAKJ,EAAMwL,GAAGtV,MAAQ8J,EAAMoM,GAASlW,QACzCkW,EAAUZ,GAGVY,GAAW3Y,EAAG,CACd,IAAIwY,EAAOjM,EAAMvM,GACjBuM,EAAMvM,GAAKuM,EAAMoM,GACjBpM,EAAMoM,GAAWH,EACjB,IAAIzc,EAAQ,CACR0R,KAAKzN,EACL0N,MAAMiL,EACNF,QAAQ,GAEZrL,GAAOlP,KAAKnC,GAEZwc,GAAQhM,EAAOI,EAAGgM,IClC1B,IAAIvL,GAAS,GAEN,SAASwL,GAAmBtL,GAC/B,IAAIf,EAAQe,EAAO1L,QACnBwL,GAAS,GACT,IAAIG,EAAKD,EAAOlP,OAIhB,OADAoP,GAAMjB,EAAM,EADZgB,GAAQ,GAEDH,GA6CX,SAASI,GAAMjB,EAAMkB,EAAKC,GACtB,KAAID,GAAMC,GAAV,CACA,IAAMC,EA3CV,SAAsBpB,EAAOkB,EAAMC,GAC/BN,GAAOlP,KAAK,CACRuP,OACAC,QACAmL,MAAK,EACLC,cAAa,IAIjB,IAFA,IAAIlL,EAAQrB,EAAMmB,GAAOjL,MACrBoL,EAAKJ,EAAK,EACN5L,EAAE4L,EAAK5L,GAAG6L,EAAM,EAAE7L,IACtB,GAAI0K,EAAM1K,GAAGY,MAAOmL,KAChBC,IACShM,EAAG,CAER,IAAMiM,EAAK,eAAOvB,EAAMsB,IAClBE,EAAK,eAAOxB,EAAM1K,IACxB0K,EAAMsB,GAAME,EACZxB,EAAM1K,GAAKiM,EACXV,GAAOlP,KAAK,CACRuP,KAAKI,EACLH,MAAM7L,EACNgX,MAAK,EACLC,cAAa,IAK7B,GAAIjL,EAAG,IAAIH,EAAO,CACd,IAAMI,EAAK,eAAOvB,EAAMsB,EAAG,IACrBE,EAAK,eAAOxB,EAAMmB,IACxBnB,EAAMsB,EAAG,GAAKE,EACdxB,EAAMmB,GAASI,EACfV,GAAOlP,KAAK,CACRuP,KAAKI,EAAG,EACRH,MAAMA,EACNmL,MAAK,EACLC,cAAa,IAGrB,OAAOjL,EAAG,EAIQG,CAAazB,EAAMkB,EAAKC,GAC1CF,GAAMjB,EAAMkB,EAAKE,EAAU,GAC3BH,GAAMjB,EAAMoB,EAAU,EAAED,I,IChCblR,G,uKArBP,OACI,sBAAK3C,UAAU,8CAAf,UACI,sBAAMA,UAAU,eAAhB,0CACA,wBAAQA,UAAU,iBAAiB4C,KAAK,SAASC,cAAY,WACrDC,cAAY,0BAA0BC,gBAAc,yBACpDC,gBAAc,QAAQC,aAAW,oBAFzC,SAGI,sBAAMjD,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BD,GAAG,yBAA7C,SACI,cAAC,IAAD,CAAMmD,GAAI,IAAV,SACQ,sBAAMC,MAAO,CAACC,MAAM,SAApB,6B,GAZP7C,aCEfQ,GAAYC,YAAW,CACzBoO,KAAM,CACFxG,MAAO,OAIf,SAASyG,GAAUnN,GACf,MAAM,GAAN,OAAUA,GAIC,SAASoN,GAAe9P,GAAQ,IAAD,EACpCiC,EAAUV,KAQhB,OACI,sBAAKf,UAAWyB,EAAQ2N,KAAK,aAA7B,UAEI,cAACI,GAAA,GAAD,GACIC,aAAcjQ,EAAMkQ,QACpBC,iBAAkBN,GAClBO,kBAAgB,kBAChBC,kBAAkB,OAClBC,kBAfS,SAAC1N,GAClB,GAA+B,KAA3BA,EAAMC,OAAO0N,UAAjB,CAGA,IAAMC,EAAMC,SAAS7N,EAAMC,OAAO0N,UAAU,IAC5CvQ,EAAM4U,cAAcpE,KAWZE,KAAM1Q,EAAM0Q,KAEZE,IAAK5Q,EAAM4Q,IACXnH,IAAKzJ,EAAMyJ,KATf,mCAUsB,MAVtB,0BAWczJ,EAAM6U,SAXpB,IAaA,cAACjH,GAAA,EAAD,CAAYrN,GAAG,kBAAkBwP,cAAY,EAA7C,SACK/P,EAAM+M,WClCvB,IAAMxL,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,YAAa,CACTC,OAAQF,EAAMG,QAAQ,GACtBC,SAAU,KAEdC,YAAa,CACTC,UAAWN,EAAMG,QAAQ,QAmClBI,GA/BM,SAAChC,GAClB,IAAMiC,EAAUV,KADY,EAENW,IAAMC,SAAS,KAFT,mBAErBC,EAFqB,KAEhBC,EAFgB,OAGFH,IAAMC,SAAS,CACrCkQ,IAAKrS,EAAMqS,MAJa,mBAGrBpR,EAHqB,UAY5B,OACI,qBAAKT,UAAU,YAAf,SACI,eAAC8B,EAAA,EAAD,CAAa9B,UAAWyB,EAAQP,YAAhC,UACI,cAACa,EAAA,EAAD,CAAYhC,GAAG,2BAAf,uBACA,eAACiC,EAAA,EAAD,CACIC,QAAQ,2BACRlC,GAAG,qBACHmC,MAAON,EACPO,SAdK,SAACC,GAClB8G,QAAQC,IAAI1I,EAAMoR,KAClBhQ,EAAOO,EAAMC,OAAOH,OACpB1C,EAAM8C,cAAc7B,EAAMoR,IAAIzP,EAAMC,OAAOH,QAOnC,UAMI,cAACQ,EAAA,EAAD,CAAUR,MAAO,EAAGiB,MAAO,CAACmN,UAAS,GAArC,wBACA,cAAC5N,EAAA,EAAD,CAAUR,MAAO,EAAGiB,MAAO,CAACmN,UAAS,GAArC,uBACA,cAAC5N,EAAA,EAAD,CAAUR,MAAO,EAAGiB,MAAO,CAACmN,UAAS,GAArC,iCCnCFtP,aAAW,SAACC,GAAD,MAAY,CACrCmO,KAAM,CACFxG,MAAO,IAAyB,EAAnB3H,EAAMG,QAAQ,IAE/BD,OAAQ,CACJ4H,OAAQ9H,EAAMG,QAAQ,QAuBTkT,aAAW,CAC5BlF,KAAM,CACFhM,MAAO,UACP2F,OAAQ,EACRoC,QAAS,UAEboJ,MAAO,CACHxL,OAAQ,GACRH,MAAO,GACP+D,gBAAiB,OACjB6H,OAAQ,yBACRjT,WAAY,GACZgK,YAAa,GACbP,UAAW,oBACX,6BAA8B,CAC1BA,UAAW,sBAEf,SAAU,CAENjC,OAAQ,EACRH,MAAO,EACP+D,gBAAiB,eACjBpB,WAAY,EACZkJ,YAAa,IAGrBC,OAAQ,GACRC,MAAO,CACH5L,OAAQ,GAEZ6L,KAAM,CACFxR,MAAO,UACPyR,QAAS,EACT9L,OAAQ,IAjCKuL,CAmClB9E,MCjEH,IAAMzO,GAAYC,YAAW,CACzBoO,KAAM,CACFxG,MAAO,OAKTkM,GAAUR,aAAW,CACvBlF,KAAM,CAEFrG,OAAQ,EACRoC,QAAS,UAEbwJ,MAAO,CACH5L,OAAQ,EACRgC,aAAc,GAElBwJ,MAAO,CACH5H,gBAAiB,SAXT2H,CAcb9E,MAEH,SAASH,GAAUnN,GACf,MAAM,GAAN,OAAUA,GAKC,SAAS6S,GAAYvV,GAChC,IAAMiC,EAAUV,KADuB,EAEbW,IAAMC,SAAS,CAAC,GAAI,KAFP,mBAEhCO,EAFgC,KAEzB8S,EAFyB,KAYvC,OACI,sBAAKhV,UAAWyB,EAAQ2N,KAAxB,UACI,cAAC,GAAD,cACIsB,SAAUlR,EAAM6U,QAChBnS,MAAOA,EACPC,SAbS,SAACC,EAAO6S,GACzBD,EAASC,IAaDnF,kBAVS,SAAC1N,EAAO6S,GACzB/L,QAAQC,IAAI8L,IAUJpF,kBAAkB,OAClBD,kBAAgB,eAChBD,iBAAkBN,IAPtB,oBAQsB,QAEtB,cAACjC,GAAA,EAAD,CAAYrN,GAAG,eAAewP,cAAY,EAA1C,4B,ICUGlM,G,4MAVXkN,YAAc,WACV,OAAI,EAAK/Q,MAAM6U,QACJ,CAAC7D,OAAQ,eAET,I,uDApDX,OACI,sBAAKxQ,UAAU,iBAAf,UACI,wBACIA,UAAU,wBACVyD,QAAS/D,KAAKF,MAAMmW,YACpBjF,SAAUhR,KAAKF,MAAM6U,QACrBlR,MAAOzD,KAAK6Q,cAJhB,uBASA,cAAC,GAAD,CACI8D,QAAS3U,KAAKF,MAAM6U,UAExB,cAAC,GAAD,CACI3E,QAAS,GACTU,IAAK,GACLnH,IAAK,IACLiH,KAAM,GACN3D,MAAM,UACN6H,cAAe1U,KAAKF,MAAM4U,cAC1BC,QAAS3U,KAAKF,MAAM6U,UAExB,cAAC,GAAD,CACI3E,QAAS,GACTU,IAAK,GACLnH,IAAK,IACLiH,KAAM,EACN3D,MAAM,QACN6H,cAAe1U,KAAKF,MAAMoW,cAC1BvB,SAAS,IAEb,cAAC,GAAD,CACIxC,IAAK,EACLvP,cAAe5C,KAAKF,MAAM8C,gBAE9B,wBACItC,UAAU,0BACVyD,QAAS/D,KAAKF,MAAMqW,YACpBnF,SAAUhR,KAAKF,MAAM6U,QACrBlR,MAAOzD,KAAK6Q,cAJhB,8B,GAtCGhQ,aCCb2e,G,kDASF,aAAe,IAAD,8BACV,gBATJze,MAAQ,CACJsV,MAAO,GACPrD,MAAO,GACP1B,MAAO,GACPD,WAAW,EACXrK,KAAM,GAGI,EAqCd2P,gBAAkB,WACd,IAAMjE,EAAOkE,GAAgB,EAAK7V,MAAMsV,OACxC,EAAK1O,SAAS,CAACqL,MAAON,KAvCZ,EAyCdhB,cAAgB,WAEZ,IADA,IAAMsB,EAAQ,EAAKjS,MAAMiS,MAChBvM,EAAI,EAAGA,EAAIuM,EAAMnO,OAAQ4B,IAAK,CACnC,IAAMiM,EAAI,2BAAOM,EAAMvM,IAAb,IAAiBkM,UAAU,EAAOC,WAAW,IACvDI,EAAMvM,GAAKiM,EAEf,EAAK/K,SAAS,CAACqL,WA/CL,EAiDd8D,kBAAoB,SAAC9O,GACjB,EAAKL,SAAS,CAAC0O,MAAOrO,IACtB,EAAK2O,mBAnDK,EAqDd5O,kBAAoB,SAACoK,EAAKnK,GACV,IAARmK,IACA3I,QAAQC,IAAI,SACZ,EAAK9B,SAAS,CAACX,KAAMgB,MAxDf,EA2Dd+O,mBAAqB,SAAC/O,GAClB,IAAMsJ,EAAS,IAAMtJ,EACrB,EAAKL,SAAS,CAAC2J,WA7DL,EAgEd0F,WAAa,WAGT,IAAIK,EAEJ,OAHA,EAAK1P,SAAS,CAAC0J,WAAW,IAGlB,EAAKtQ,MAAMiG,MAEf,KAAK,EACDqQ,EAAQgH,GAAU,EAAKtd,MAAMiS,OAC7B,EAAKyM,YAAYpI,GACjB,MACJ,KAAK,EAEDA,EAAQ8H,GADC,EAAKpe,MAAMiS,MAAM3K,SAE1B,EAAKqX,WAAWrI,GAChB,MACJ,KAAK,EAEDA,EAAQgI,GADC,EAAKte,MAAMiS,MAAM3K,SAE1B,EAAKsX,YAAYtI,KAnFf,EA2FdsI,YA3Fc,uCA2FA,WAAOtI,GAAP,mDAAAzF,EAAA,sDAGV,IAFA,EAAKjK,SAAS,CAAC0J,WAAW,IACtBgC,EAAW,EAAKtS,MAAMiS,MACjB1K,EAAI,EAAGA,EAAI,EAAKvH,MAAMsV,MAAO/N,IAClC+K,EAAS/K,GAAT,2BAAkB+K,EAAS/K,IAA3B,IAA+B2V,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,EAAME,SAAQ,EAAMzL,UAAU,IAExG,EAAKhL,SAAS,CAACqL,MAAOK,IAClBuM,GAAc,EAEVnZ,EAAE,EATA,YASEA,EAAE4Q,EAAMxS,QATV,oBAUF2L,EAAO6G,EAAM5Q,IACC,IAAdmZ,IACK1L,GADa,EACCX,GAAdW,KAAKC,EADO,EACPA,MACVd,EAASa,GAAT,2BAAqBb,EAASa,IAA9B,IAAqC+J,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,EAAME,SAAQ,IAC1F/K,EAASc,GAAT,2BAAsBd,EAASc,IAA/B,IAAuC8J,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,EAAME,SAAQ,MAE5F5N,EAAK+O,aAhBH,kCAiBIvV,GAAM,EAAKjJ,MAAMuQ,OAjBrB,yBAiBkCtH,GAAM,EAAKjJ,MAAMuQ,OAjBnD,yBAiBgEtH,GAAM,EAAKjJ,MAAMuQ,OAjBjF,yBAiB8FtH,GAAM,EAAKjJ,MAAMuQ,OAjB/G,QAmBF,IADK4C,EAAc1D,EAAd0D,KAAKC,EAAS3D,EAAT2D,MACD7L,EAAI,EAAGA,EAAI,EAAKvH,MAAMsV,MAAO/N,IAClC+K,EAAS/K,GAAT,2BAAkB+K,EAAS/K,IAA3B,IAA+B2V,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,EAAME,SAAQ,IAExF,IAAS9V,EAAI4L,EAAM5L,GAAI6L,EAAO7L,IAC1B+K,EAAS/K,GAAT,2BAAkB+K,EAAS/K,IAA3B,IAA+B2V,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,EAAKE,SAAQ,IAvBrF,OAyBF,EAAKzW,SAAS,CAACqL,MAAOK,IAzBpB,UA0BIrJ,GAAM,EAAKjJ,MAAMuQ,OA1BrB,yBA0BkCtH,GAAM,EAAKjJ,MAAMuQ,OA1BnD,yBA0BgEtH,GAAM,EAAKjJ,MAAMuQ,OA1BjF,yBA0B8FtH,GAAM,EAAKjJ,MAAMuQ,OA1B/G,QA2BF,IAAShJ,EAAI,EAAGA,EAAI,EAAKvH,MAAMsV,MAAO/N,IAClC+K,EAAS/K,GAAT,2BAAkB+K,EAAS/K,IAA3B,IAA+B2V,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,IA5BxE,wBA8BG1N,EAAK8O,OACLpL,EAAc1D,EAAd0D,KAAKC,EAAS3D,EAAT2D,MACVd,EAASa,GAAT,2BAAqBb,EAASa,IAA9B,IAAqC+J,QAAQ,EAAMrL,WAAW,EAAKsL,SAAQ,EAAME,SAAQ,IACzF/K,EAASc,GAAT,2BAAsBd,EAASc,IAA/B,IAAuC8J,QAAQ,EAAKrL,WAAW,EAAMsL,SAAQ,EAAME,SAAQ,IACvFa,EAAO5L,EAASa,GACpBb,EAASa,GAAQb,EAASc,GAC1Bd,EAASc,GAAS8K,EAClBW,EAAa,EACbrM,EAAU/C,GAtCR,eAwCN,EAAK7I,SAAS,CAACqL,MAAOK,IAxChB,UAyCArJ,GAAM,EAAKjJ,MAAMuQ,OAzCjB,WA0CF7K,IAAM4Q,EAAMxS,OAAS,EA1CnB,iBA2CF,IAASyD,EAAI,EAAGA,EAAI,EAAKvH,MAAMsV,MAAO/N,IAClC+K,EAAS/K,GAAT,2BAAkB+K,EAAS/K,IAA3B,IAA+B2V,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,EAAMvL,UAAU,EAAMyL,SAAQ,IAExG,EAAKzW,SAAS,CAACqL,MAAOK,IACb/K,EAAI,EA/CX,aA+CcA,EAAI,EAAKvH,MAAMsV,OA/C7B,wBAgDEhD,EAAS/K,GAAT,2BAAkB+K,EAAS/K,IAA3B,IAA+B2V,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,EAAMvL,UAAU,EAAKyL,SAAQ,IACnG,EAAKzW,SAAS,CAACqL,MAAOK,IAjDxB,UAkDQrJ,GAAM,IAlDd,QA+CoC1B,IA/CpC,wBAoDF,EAAKX,SAAS,CAAC0J,WAAW,EAAM2B,MAAOK,IApDrC,QASiB5M,IATjB,2DA3FA,wDAmJdiZ,WAnJc,uCAmJD,WAAOrI,GAAP,iCAAAzF,EAAA,sDAGT,IAFA,EAAKjK,SAAS,CAAC0J,WAAW,IACtBgC,EAAW,EAAKtS,MAAMiS,MACjB1K,EAAI,EAAGA,EAAI,EAAKvH,MAAMsV,MAAO/N,IAClC+K,EAAS/K,GAAT,2BAAkB+K,EAAS/K,IAA3B,IAA+B2V,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,EAAME,SAAQ,EAAMzL,UAAU,IAExG,EAAKhL,SAAS,CAACqL,MAAOK,IAEd5M,EAAI,EARH,YAQKA,EAAE4Q,EAAMxS,QARb,iBAWL,IAFI2L,EAAO6G,EAAM5Q,GAERA,EAAI,EAAGA,EAAI,EAAK1F,MAAMsV,MAAO5P,IAClC4M,EAAS5M,GAAT,2BAAkB4M,EAAS5M,IAA3B,IAA+BwX,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,IAZrE,OAcAhK,EAAqB1D,EAArB0D,KAAKC,EAAgB3D,EAAhB2D,MAAM+K,EAAU1O,EAAV0O,OAChB7L,EAASa,GAAT,2BAAqBb,EAASa,IAA9B,IAAoC+J,QAAO,IAC3C5K,EAASc,GAAT,2BAAsBd,EAASc,IAA/B,IAAsC+J,SAAQ,IAC9C,EAAKvW,SAAS,CAACqL,MAAOK,IAjBjB,UAkBCrJ,GAAM,EAAKjJ,MAAMuQ,OAlBlB,eAmBD2N,EAAO5L,EAASa,GACpBb,EAASa,GAAQb,EAASc,GAC1Bd,EAASc,GAAS8K,EAClB,EAAKtX,SAAS,CAACqL,MAAOK,IAClB6L,IAAS7L,EAASa,GAAT,2BAAqBb,EAASa,IAA9B,IAAoCvB,UAAU,KAvBtD,UAwBC3I,GAAM,EAAKjJ,MAAMuQ,OAxBlB,yBAwB+BtH,GAAM,EAAKjJ,MAAMuQ,OAxBhD,yBAwB6DtH,GAAM,EAAKjJ,MAAMuQ,OAxB9E,WAyBD7K,IAAM4Q,EAAMxS,OAAS,EAzBpB,iBA2BQ4B,EAAI,EA3BZ,aA2BeA,EAAI,EAAK1F,MAAMsV,OA3B9B,wBA4BGhD,EAAS5M,GAAT,2BAAkB4M,EAAS5M,IAA3B,IAA+BwX,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,EAAMvL,UAAU,IACtF,EAAKhL,SAAS,CAACqL,MAAOK,IA7BzB,UA8BSrJ,GAAM,EAAKjJ,MAAMuQ,OA9B1B,QA2BqC7K,IA3BrC,wBAgCD,EAAKkB,SAAS,CAAC0J,WAAW,EAAM2B,MAAOK,IAhCtC,QAQoB5M,IARpB,2DAnJC,wDAuLdgZ,YAvLc,uCAuLA,WAAOpI,GAAP,+BAAAzF,EAAA,sDAMV,IALA,EAAKjK,SAAS,CAAC4O,YAAY,IAEX,EAAKxV,MAAduQ,MAEH+B,EAAW,EAAKtS,MAAMiS,MACjB1K,EAAI,EAAGA,EAAI,EAAKvH,MAAMsV,MAAO/N,IAClC+K,EAAS/K,GAAT,2BAAkB+K,EAAS/K,IAA3B,IAA+B2V,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,EAAME,SAAQ,EAAMzL,UAAU,IAP9F,OASV,EAAKhL,SAAS,CAACqL,MAAOK,IATZ,SAUJrJ,GAAM,EAAKjJ,MAAMuQ,OAVb,OAYDuO,EAAK,EAZJ,YAYOA,EAAKxI,EAAMxS,QAZlB,iBAcN,IADI2L,EAAO6G,EAAMwI,GACRpZ,EAAI,EAAGA,EAAI,EAAK1F,MAAMsV,MAAO5P,IAClC4M,EAAS5M,GAAT,2BAAkB4M,EAAS5M,IAA3B,IAA+BwX,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,IAG1E,IAASzX,EAAI+J,EAAK0D,KAAMzN,GAAK+J,EAAKrK,IAAKM,IACnC4M,EAAS5M,GAAT,2BAAkB4M,EAAS5M,IAA3B,IAA+BwX,QAAQ,EAAKrL,WAAW,IAE3D,IAASnM,EAAI+J,EAAKrK,IAAM,EAAGM,GAAK+J,EAAK2D,MAAO1N,IACxC4M,EAAS5M,GAAT,2BAAkB4M,EAAS5M,IAA3B,IAA+ByX,SAAS,EAAKD,QAAO,EAAMrL,WAAW,IAtBnE,OAwBN,EAAKjL,SAAS,CAACqL,MAAOK,IAxBhB,UAyBArJ,GAAM,EAAKjJ,MAAMuQ,OAzBjB,yBAyB8BtH,GAAM,EAAKjJ,MAAMuQ,OAzB/C,yBAyB4DtH,GAAM,EAAKjJ,MAAMuQ,OAzB7E,QA2BE7K,EAAG+J,EAAK0D,KA3BV,aA2BezN,GAAG+J,EAAK2D,OA3BvB,wBA4BFd,EAAS5M,GAAT,2BAAkB4M,EAAS5M,IAA3B,IAA8ByC,MAAMsH,EAAKxI,IAAIvB,EAAE+J,EAAK0D,MAAMhL,MAAM0J,WAAW,IAC3E,EAAKjL,SAAS,CAACqL,MAAOK,IA7BpB,UA8BIrJ,GAAM,EAAKjJ,MAAMuQ,OA9BrB,QA2B6B7K,IA3B7B,2BAiCFoZ,IAAOxI,EAAMxS,OAAS,EAjCpB,iBAmCO4B,EAAI,EAnCX,aAmCcA,EAAI,EAAK1F,MAAMsV,OAnC7B,wBAoCEhD,EAAS5M,GAAT,2BAAkB4M,EAAS5M,IAA3B,IAA+BwX,QAAQ,EAAMrL,WAAW,EAAMsL,SAAQ,EAAMvL,UAAU,IACtF,EAAKhL,SAAS,CAACqL,MAAOK,IArCxB,UAsCQrJ,GAAM,EAAKjJ,MAAMuQ,OAtCzB,QAmCoC7K,IAnCpC,wBAwCF,EAAKkB,SAAS,CAAC0J,WAAW,IAxCxB,eA2CN,EAAK1J,SAAS,CAACqL,MAAOK,IA3ChB,UA4CArJ,GAAM,EAAKjJ,MAAMuQ,OA5CjB,QA6CN+B,EAAW,EAAKtS,MAAMiS,MAItB,EAAKrL,SAAS,CAACqL,MAAOK,IAjDhB,QAY0BwM,IAZ1B,2DAvLA,wD,gEAKV,IAAI7M,EAAQ4D,GAAgB5W,KAAKe,MAAMsV,OACvCrW,KAAK2H,SAAS,CAACqL,Y,+BASf,OACI,eAAC,IAAMzE,SAAP,WACI,cAAC,GAAD,IACA,cAAC,GAAD,CACIoG,QAAS3U,KAAKe,MAAMsQ,UACpB8E,YAAanW,KAAKgX,WAClBf,YAAajW,KAAK2W,gBAClB5F,UAAW/Q,KAAK0R,cAChBgD,cAAe1U,KAAK8W,kBACpBlU,cAAe5C,KAAK+H,kBACpBmO,cAAelW,KAAK+W,qBAExB,qBAAKzW,UAAU,0BAAf,SACI,cAAC,GAAD,CACI0S,MAAOhT,KAAKe,MAAMiS,iB,GAtCdnS,aAuP5B,SAASmJ,GAAMQ,GACX,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIjC,WAAWiC,EAASF,MAGtD,IAAMoM,GAAkB,SAACU,GAErB,IADA,IAAMtE,EAAQ,GACLvM,EAAI,EAAGA,EAAI6Q,EAAK7Q,IACrBuM,EAAMrO,KAAK4S,MAEf,OAAOvE,GAELuE,GAAU,WACZ,MAAO,CACHrO,MAAO9C,KAAKC,MAAsB,IAAhBD,KAAKE,UAAkB,GACzCqM,UAAU,EACVC,WAAW,EACXqL,QAAQ,EACRC,SAAS,IAIFsB,MCjPAM,G,kDAzBX,aAAe,wC,gEAIXtW,QAAQC,IAAIN,OAAOG,YAAY,KAAKH,OAAOC,c,+BAI3C,OACI,cAAC,IAAD,CAAQ2W,SAAS,IAAjB,SACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,KAAK,cAAerT,UAAWpF,IACtC,cAAC,IAAD,CAAOyY,KAAK,SAASrT,UAAWwE,KAChC,cAAC,IAAD,CAAO6O,KAAK,QAAQrT,UAAWyJ,KAC/B,cAAC,IAAD,CAAO4J,KAAK,UAAUrT,UAAWmL,KACjC,cAAC,IAAD,CAAOkI,KAAK,cAAcrT,UAAWuP,KACrC,cAAC,IAAD,CAAO8D,KAAK,gBAAgBrT,UAAWgR,KACvC,cAAC,IAAD,CAAOqC,KAAK,iBAAiBrT,UAAW6S,KACxC,cAAC,IAAD,CAAOQ,KAAK,IAAIrT,UAAWqC,c,GAnB7BnO,aCEHof,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,cCCdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFlY,SAASC,eAAe,SAM1BsX,M","file":"static/js/main.4b10c8a4.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport './node.css'\r\nclass Node extends Component {\r\n    static = {\r\n        row: this.props.row,\r\n        col: this.props.col\r\n    }\r\n    render() {\r\n        const { row,col,isVisited, onMouseDown, onMouseEnter,onMouseUp } = this.props;\r\n        return (\r\n            <div\r\n                id = {`node-${this.props.row}-${this.props.col}`}\r\n                className={this.getClassName()}\r\n                onMouseDown={() => onMouseDown(row,col)}\r\n                onMouseEnter={() => onMouseEnter(row,col)}\r\n                onMouseUp={() => onMouseUp(row,col)}\r\n            />\r\n        );\r\n    }\r\n    getClassName(){\r\n        if(this.props.node.isWall === true){\r\n            return \"node node-wall\";\r\n        } else if( this.props.node.isStartNode === true ){\r\n            return \"node  node-start\";\r\n        } else if( this.props.node.isEndNode === true ){\r\n            return \"node  node-end\";\r\n        } else if(this.props.node.ispathNode){\r\n            return 'node node-shortest-path';\r\n        }else if( this.props.node.isVisited === true ){\r\n            return \"node  node-visited\";\r\n        } else{\r\n            return \"node\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Node;","import React, {Component} from 'react';\r\nimport Node from \"./node\";\r\nimport './grid.css';\r\nclass Grid extends Component {\r\n    state = {\r\n        grid: this.props.grid\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Grid\">\r\n                {this.props.grid.map((row, rowidx) => {\r\n                    return (\r\n                        <div key={rowidx}>\r\n                            {row.map((node, nodeidx) => {\r\n                                const {row, col, isWall, visitedNode, } = node;\r\n                                return (\r\n                                    <Node\r\n                                        key={nodeidx}\r\n                                        row={row}\r\n                                        col={col}\r\n                                        node={node}\r\n                                        isWall={isWall}\r\n                                        visitedNode={ visitedNode }\r\n                                        onMouseDown = {this.props.onMouseDown}\r\n                                        onMouseEnter = {this.props.onMouseEnter}\r\n                                        onMouseUp = {this.props.onMouseUp}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('0');\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n        props.onAlgoChanged(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    {props.items.map( (item,itemidx)=>{\r\n                        return(\r\n                            <MenuItem\r\n                                key={itemidx}\r\n                                value={itemidx}>{item}</MenuItem>\r\n                        );\r\n                    } )}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React, {Component} from 'react';\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Pathfinder</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport SimpleSelect from \"./simpleSelect\";\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\" >\r\n                <SimpleSelect\r\n                    onAlgoChanged = {this.props.onAlgoChanged}\r\n                    items={this.props.algorithms}\r\n                />\r\n                <SimpleSelect\r\n                    onAlgoChanged={this.props.onMazeChanged}\r\n                    items={this.props.mazes}\r\n                />\r\n                <button\r\n                    className='btn btn-lg btn-secondary m-2'\r\n                    onClick={this.props.onCreateMaze}>\r\n                    Create Maze\r\n                </button>\r\n                <button\r\n                    onClick={this.props.onVisualize}\r\n                    className=\"btn btn-warning btn-lg\"\r\n                >Visualize</button>\r\n                <button\r\n                    onClick={this.props.onClearPath}\r\n                    className='btn btn-danger btn-lg m-2'>Clear Path</button>\r\n                <button\r\n                    onClick={this.props.onClearBoard}\r\n                    className='btn btn-danger btn-lg m-2'>Clear Board</button>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","// Performs Dijkstra's algorithm; returns *all* nodes in the order\r\n// in which they were visited. Also makes nodes point back to their\r\n// previous node, effectively allowing us to compute the shortest path\r\n// by backtracking from the finish node.\r\nexport function dijkstra(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid);\r\n  while (!!unvisitedNodes.length) {\r\n    sortNodesByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    // If we encounter a wall, we skip it.\r\n    if (closestNode.isWall) continue;\r\n    // If the closest node is at a distance of infinity,\r\n    // we must be trapped and should therefore stop.\r\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n    closestNode.isVisited = true;\r\n    visitedNodesInOrder.push(closestNode);\r\n    if (closestNode === finishNode) return visitedNodesInOrder;\r\n    updateUnvisitedNeighbors(closestNode, grid);\r\n  }\r\n}\r\n\r\nfunction sortNodesByDistance(unvisitedNodes) {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(node, grid) {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const {col, row} = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter(neighbor => !neighbor.isVisited);\r\n}\r\n\r\nfunction getAllNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n}\r\n\r\n// Backtracks from the finishNode to find the shortest path.\r\n// Only works when called *after* the dijkstra method above.\r\nexport function getNodesInShortestPathOrder(finishNode) {\r\n  const nodesInShortestPathOrder = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return nodesInShortestPathOrder;\r\n}\r\n","export function getMaze(board,row,col){\r\n    const pairs = [];\r\n    let newBoard = board.slice();\r\n    for( let i = 0;i <col;i++){\r\n        newBoard[0][i].isWall = true;\r\n        pairs.push({\r\n            xx:0,\r\n            yy:i\r\n        });\r\n    }\r\n    for( let i = 0;i <row;i++){\r\n        newBoard[i][col-1].isWall = true;\r\n        pairs.push({\r\n            xx:i,\r\n            yy:col-1\r\n        });\r\n    }\r\n    for( let i = col-1;i>=0;i-- ){\r\n        newBoard[row-1][i].isWall = true;\r\n        pairs.push({\r\n            xx:row-1,\r\n            yy:i\r\n        });\r\n    }\r\n    for(let i = row-1;i>=0;i--){\r\n        newBoard[i][0].isWall = true;\r\n        pairs.push({\r\n            xx:i,\r\n            yy:0\r\n        });\r\n    }\r\n    decideMaze(pairs,newBoard,1,row-2,1,col-2);\r\n    //console.log(\"here\");\r\n    return pairs;\r\n}\r\nlet val = 0;\r\n\r\nfunction decideMaze(pairs,board,startRow,endRow,startCol,endCol) {\r\n    //console.log(\"count\");\r\n    val++;\r\n\r\n    if( ((endRow-startRow) <=1) && ((endCol - startCol) <=1) ){\r\n        return;\r\n    }\r\n\r\n     if( (endCol - startCol) > (endRow - startRow) ){\r\n        recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol);\r\n    } else{\r\n        recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol);\r\n    }\r\n}\r\nfunction recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol){\r\n    let mid = Math.floor((endCol+startCol)/2);\r\n    let random = Math.floor(Math.random() * (endRow-startRow+1)) + startRow;\r\n    //console.log( \"row \",random,\" \",startRow,\" \",endRow );\r\n    let start = startRow;\r\n    if( !board[startRow-1][mid].isWall ){\r\n        random = start;\r\n        start++;\r\n    }\r\n    let end = endRow;\r\n    if( !board[endRow+1][mid].isWall ){\r\n        random = end;\r\n        end--;\r\n    }\r\n    for(let i = start;i<=end;i++){\r\n        if( i!==random ){\r\n            board[i][mid].isWall = true;\r\n            pairs.push({\r\n                xx:i,\r\n                yy:mid\r\n            });\r\n        }\r\n    }\r\n    decideMaze(pairs,board,startRow,endRow,startCol,mid-1);\r\n    decideMaze(pairs,board,startRow,endRow,mid+1,endCol);\r\n}\r\nfunction recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol){\r\n    let mid = Math.floor((endRow+startRow)/2);\r\n  //  console.log(\"mid: \",mid);\r\n    let random = Math.floor(Math.random() * (endCol-startCol+1)) + startCol;\r\n    let start = startCol;\r\n    if( !board[mid][startCol-1].isWall ){\r\n        random = start;\r\n        start++;\r\n    }\r\n    let end = endCol;\r\n    if( !board[mid][endCol+1].isWall ){\r\n        random = end;\r\n        end--;\r\n    }\r\n    for(let i = start;i<=end;i++){\r\n        if( i!==random ){\r\n            board[mid][i].isWall = true;\r\n            pairs.push({\r\n                xx:mid,\r\n                yy:i\r\n            });\r\n        }\r\n    }\r\n    decideMaze(pairs,board,startRow,mid-1,startCol,endCol);\r\n    decideMaze(pairs,board,mid+1,endRow,startCol,endCol);\r\n\r\n}","export function bfsdfs(grid,startNode,endNode,algo){\r\n    var list = [];\r\n    const nodesInOrder = [];\r\n    nodesInOrder.push(startNode);\r\n    list.push(startNode);\r\n    startNode.isVisited = true;\r\n    while(!!list.length){\r\n        const currentNode = (algo === \"bfs\" ? list.shift():list.pop());\r\n        nodesInOrder.push(currentNode);\r\n        if( currentNode === endNode ) return nodesInOrder;\r\n        if( algo === \"dfs\" ) currentNode.isVisited = true;\r\n        const nodesToPush = getNeighbours(grid,currentNode);\r\n        for( const node of nodesToPush ){\r\n            if(algo === \"bfs\"){\r\n                node.isVisited = true;\r\n            }\r\n            node.previousNode = currentNode;\r\n            list.push(node);\r\n\r\n        }\r\n    }\r\n    return nodesInOrder;\r\n}\r\n\r\nfunction getNeighbours(grid,node){\r\n    const neighbors = [];\r\n    const {col, row} = node;\r\n   // console.log(node);\r\n\r\n    if (col > 0) neighbors.push(grid[row][col - 1]);\r\n    if (row > 0) neighbors.push(grid[row - 1][col]);\r\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n    return neighbors.filter(neighbor => (!neighbor.isVisited && !neighbor.isWall ));\r\n}","import React, {Component, Fragment} from 'react';\r\nimport Grid from \"./grid\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\nimport {dijkstra,getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\r\nimport {getMaze} from \"../algorithms/recursiveMaze\";\r\nimport {bfsdfs} from \"../algorithms/bfs\";\r\nimport {randomMaze} from \"../algorithms/randomMaze\";\r\n\r\nclass Pathfinder extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            grid:[],\r\n            mouseIsPressed:false,\r\n            algorithms:[\r\n                \"Dijsktra\",\"BFS\",\"DFS\"\r\n            ],\r\n            algo:0,\r\n            mazes:[\r\n                \"Recursive division\",\"Random\",\"Recursive Horizontal bias(NA)\",\"Recursive Vertical bias(NA)\"\r\n            ],\r\n            maze:0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        const row = Math.max(Math.floor(height/25)-7,10);\r\n        const col = Math.floor(width/25);\r\n        const startNode = {\r\n            row:4,\r\n            col:4\r\n        };\r\n        const endNode = {\r\n            row: row-5,\r\n            col: col-5\r\n        }\r\n        console.log( endNode.row );\r\n        const grid = getInitialGrid(row,col);\r\n        grid[startNode.row][startNode.col].isStartNode = true;\r\n        grid[row-5][col-5].isEndNode = true;\r\n        this.setState({grid,row,col,startNode,endNode});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Navbar/>\r\n\r\n                <Menu\r\n                    onAlgoChanged = {this.handleAlgoChanged}\r\n                    onVisualize = {this.handleClick}\r\n                    algorithms={this.state.algorithms}\r\n                    mazes={this.state.mazes}\r\n                    onMazeChanged={this.handleMazeChanged}\r\n                    onCreateMaze={this.handleCreateMaze}\r\n                    onClearBoard={this.handleClearBoard}\r\n                    onClearPath={this.handleClearPath}\r\n                />\r\n                <span style={{margin: 2}}/>\r\n                <div style={{textAlign:\"center\"}} >\r\n                    <Grid\r\n                        grid={this.state.grid}\r\n                        onMouseDown={this.handleMouseDown}\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    handleMouseDown = (row, col) => {\r\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\r\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n            this.setState({grid:newGrid});\r\n        }\r\n        this.setState({mouseIsPressed: true});\r\n    }\r\n\r\n    handleMouseEnter = (row, col) => {\r\n        if (this.state.mouseIsPressed === false) return;\r\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\r\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n            this.setState({grid:newGrid});\r\n        }\r\n    }\r\n\r\n    handleMouseUp = (row,col) => {\r\n        this.setState({mouseIsPressed: false});\r\n    }\r\n\r\n    handleAlgoChanged = (val) =>{\r\n        this.setState({algo:val});\r\n    }\r\n\r\n    handleMazeChanged = (val)=>{\r\n        this.setState({maze:val});\r\n    }\r\n\r\n    handleCreateMaze = () =>{\r\n        let pairs;\r\n        switch (this.state.maze){\r\n            case 1:\r\n                pairs= randomMaze(this.state.grid,this.state.row,this.state.col);\r\n                break;\r\n            default:\r\n                pairs= getMaze(this.state.grid,this.state.row,this.state.col);\r\n        }\r\n        const {startNode,endNode} = this.state;\r\n        for( let i = 0;i<pairs.length;i++ ){\r\n            setTimeout(()=>{\r\n                if( i === pairs.length-1 ){\r\n                   // this.setState({grid:this.state.grid});\r\n                    const grid = this.state.grid;\r\n                    grid[ startNode.row ][startNode.col]={...grid[ startNode.row ][startNode.col],isWall: false};\r\n                    grid[endNode.row][endNode.col]={...grid[endNode.row][endNode.col],isWall: false};\r\n                    this.setState({grid});\r\n                }\r\n                if((pairs[i].xx!==startNode.row || pairs[i].yy!==startNode.col) && (pairs[i].xx!==endNode.row || pairs[i].yy!==endNode.col) ){\r\n                    document.getElementById(`node-${pairs[i].xx}-${pairs[i].yy}`).className = \"node node-wall\";\r\n                }\r\n            },i*20);\r\n        }\r\n    }\r\n    handleClearBoard = ()=>{\r\n        const {grid,row,col} = this.state;\r\n        this.setState({grid:clearBoard(grid,row,col)});\r\n    }\r\n    handleClearPath = () =>{\r\n        const {grid,row,col} = this.state;\r\n        this.setState({grid:clearPath(grid,row,col)});\r\n    }\r\n    handleClick = () =>{\r\n      /*  for(let i = 0;i<20;i++){\r\n            for(let j = 0; j<50;j++){\r\n                document.getElementById(`node-${i}-${j}`).className = \"node\";\r\n            }\r\n        }*/\r\n        this.visualizeDijkstra();\r\n        /*for(let i = 0;i<this.state.row;i++){\r\n            for(let j = 0; j<this.state.col;j++){\r\n                setTimeout(()=>{\r\n                    const newGrid = toggleVisit(this.state.grid,i,j);\r\n                    this.setState({grid:newGrid});\r\n                    //document.getElementById(`node-${i}-${j}`).className = \"node node-visited\";\r\n                },100*(i+j)+j);\r\n            }\r\n        }*/\r\n    }\r\n\r\n    visualizeDijkstra() {\r\n        const {grid} = this.state;\r\n        const startNode = grid[this.state.startNode.row][this.state.startNode.col];\r\n        const finishNode = grid[this.state.endNode.row][this.state.endNode.col];\r\n        let visitedNodesInOrder;\r\n        switch (this.state.algo){\r\n            case 0:\r\n                visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\r\n                break;\r\n            case 1:\r\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"bfs\");\r\n                break;\r\n            default:\r\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"dfs\");\r\n        }\r\n        const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n        this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n    }\r\n    async animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n\r\n            if (i === visitedNodesInOrder.length) {\r\n              //  setTimeout(() => {\r\n                    await sleep(100);\r\n                    await this.animateShortestPath(nodesInShortestPathOrder);\r\n\r\n              //  }, 10 * (i+10));\r\n                return;\r\n            }\r\n           // setTimeout(() => {\r\n                const node = visitedNodesInOrder[i];\r\n                const newGrid = toggleVisit(this.state.grid,node.row,node.col);\r\n                //this.setState({grid:newGrid});\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                    'node node-visited';\r\n                await sleep(10);\r\n           // }, 10 * i);\r\n        }\r\n    }\r\n\r\n    async animateShortestPath(nodesInShortestPathOrder) {\r\n        const grid = this.state.grid;\r\n        const newGrid = grid.slice();\r\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n         //   setTimeout(() => {\r\n\r\n                const node = nodesInShortestPathOrder[i];\r\n                const newNode = {...newGrid[node.row][node.col],ispathNode:true};\r\n                newGrid[node.row][node.col] = newNode;\r\n                if( i === nodesInShortestPathOrder.length-1 ){\r\n                    this.setState({grid:newGrid});\r\n                }\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                    'node node-shortest-path';\r\n                await sleep(50);\r\n            //}, 50 * i);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst clearPath = (grid,row,col)=>{\r\n    const newGrid = grid.slice();\r\n    for(let i = 0;i < row ; i++){\r\n        for( let j = 0;j < col; j++){\r\n            const node = newGrid[i][j];\r\n            const newNode = {\r\n                ...node,\r\n                distance:Infinity,\r\n                visitedNode: false,\r\n                isVisited:false,\r\n                ispathNode:false,\r\n                previousNode:null\r\n\r\n            };\r\n            newGrid[i][j] = newNode;\r\n        }\r\n    }\r\n    return newGrid;\r\n}\r\nconst clearBoard = (grid,row,col)=>{\r\n    const newGrid = grid.slice();\r\n    for(let i = 0;i < row ; i++){\r\n        for( let j = 0;j < col; j++){\r\n            const node = newGrid[i][j];\r\n            const newNode = {\r\n                ...node,\r\n                isWall: false,\r\n                distance:Infinity,\r\n                visitedNode: false,\r\n                isVisited:false,\r\n                ispathNode:false,\r\n                previousNode:null\r\n\r\n            };\r\n            newGrid[i][j] = newNode;\r\n        }\r\n    }\r\n    return newGrid;\r\n}\r\n\r\nconst toggleVisit = (grid,row,col) =>{\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        visitedNode: !node.visitedNode\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n}\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        isWall: true//!node.isWall,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n};\r\nconst getInitialGrid = (totRow,totCol) => {\r\n    const grid = [];\r\n    for (let row = 0; row < totRow; row++) {\r\n        const currentRow = [];\r\n        for (let col = 0; col < totCol; col++) {\r\n            currentRow.push(createNode(row,col));\r\n        }\r\n        grid.push(currentRow);\r\n    }\r\n    return grid;\r\n}\r\n\r\nconst createNode = (row,col)=>{\r\n    return {\r\n        row,\r\n        col,\r\n        isWall: false,\r\n        isStartNode:false,\r\n        isEndNode:false,\r\n        distance:Infinity,\r\n        visitedNode: false,\r\n        isVisited:false,\r\n        ispathNode:false,\r\n        previousNode:null\r\n    };\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default Pathfinder;","export function randomMaze(board,row,col){\r\n    let newBoard = board.slice();\r\n    const pairs = [];\r\n    for(let i = 0;i<row;i++){\r\n        for( let j = 0;j <col;j++){\r\n            const random = Math.floor(Math.random()*100)+10;\r\n            if( random%4 === 0 ){\r\n                newBoard[i][j].isWall = true;\r\n                pairs.push({\r\n                    xx:i,\r\n                    yy:j\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return pairs;\r\n}","import React, {Component} from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \">\r\n                <a className=\"navbar-brand\" href=\"#\">Algorithm Visualizer</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"#\">About <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport \"./style.css\"\r\nclass Greet extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"greet\">\r\n                <h1 className=\"display-3\">\r\n                    Algorithm Visualizer\r\n                </h1>\r\n                <hr className=\"dropdown-divider\"/>\r\n                <h1 className=\"display-5\">\r\n                    Visualize algorithms for a better understanding\r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Greet;","import React, {Component} from 'react';\r\nimport Typewriter from \"typewriter-effect\";\r\nimport './style.css'\r\nclass TypeWriterC extends Component {\r\n    state = {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"type display-3\">\r\n                <span className=\"badge badge-dark\">\r\n                <Typewriter\r\n                    options={{\r\n                        strings: ['Graph Algorithms', 'Sorting Algorithms',\"8 Queen\"],\r\n                        autoStart: true,\r\n                        loop: true,\r\n                    }}\r\n                />\r\n            </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TypeWriterC;","export default __webpack_public_path__ + \"static/media/graph.6e6849d5.png\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport \"./style.css\";\r\nimport \"./images/graph.png\";\r\nimport {ExpandMore} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 350,\r\n        maxWidth:350,\r\n        minHeight:250,\r\n        borderRadius: 5,\r\n        '&:hover': {\r\n            boxShadow: `0 6px 12px 0 #000000\r\n                .rotate(-12)\r\n                .darken(0.2)\r\n                .fade(0.5)}`\r\n                ,\r\n        },\r\n    },\r\n    media: {\r\n        height: 140\r\n    },\r\n    actionArea: {\r\n        padding:15,\r\n        transition: '0.2s',\r\n        '&:hover': {\r\n            transform: 'scale(1.1)',\r\n\r\n        },\r\n    },\r\n});\r\n\r\nexport default function ImgMediaCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <CardActionArea className={classes.actionArea} m={20}>\r\n            <Card\r\n                className={classes.card}\r\n                >\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"Contemplative Reptile\"\r\n                    height=\"140\"\r\n                    src={props.card.img}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\"  >\r\n                        {props.card.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {props.card.description}\r\n                    </Typography>\r\n                    <ExpandMore/>\r\n                </CardContent>\r\n            </Card>\r\n        </CardActionArea>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport \"./style.css\";\r\nimport \"./images/graph.png\";\r\nimport {ExpandMore} from \"@material-ui/icons\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        minWidth: 350,\r\n        maxWidth:350,\r\n        minHeight:200,\r\n        borderRadius: 5,\r\n        '&:hover': {\r\n            boxShadow: `0 6px 12px 0 #000000\r\n                .rotate(-12)\r\n                .darken(0.2)\r\n                .fade(0.5)}`\r\n                ,\r\n        },\r\n    },\r\n    media: {\r\n        height: 100\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    actionArea: {\r\n        padding:15,\r\n        transition: '0.2s',\r\n        '&:hover': {\r\n            transform: 'scale(1.1)',\r\n\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ImgMediaCard2(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <CardActionArea className={classes.actionArea} m={20}>\r\n            <Card\r\n                className={classes.card}\r\n                >\r\n               <Link to={props.card.route}>\r\n                   <CardMedia\r\n                       component=\"img\"\r\n                       alt={props.card.title}\r\n                       height=\"150\"\r\n                       src={props.card.img}\r\n                   />\r\n               </Link>\r\n                <CardHeader\r\n                    title={props.card.title}\r\n                    style={{backgroundColor:\"whitesmoke\"}}\r\n                    action={\r\n                        <IconButton\r\n                            className={clsx(classes.expand, {\r\n                                [classes.expandOpen]: expanded,\r\n                            })}\r\n                            onClick={handleExpandClick}\r\n                            aria-expanded={expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent\r\n                        style={{backgroundColor:\"whitesmoke\"}}\r\n                    >\r\n                        <Typography>\r\n                            {props.card.description}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </CardActionArea>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/primes.72a2f33f.jpg\";","export default __webpack_public_path__ + \"static/media/sort.117e08fc.png\";","export default __webpack_public_path__ + \"static/media/queen.b2332ba3.PNG\";","export default __webpack_public_path__ + \"static/media/binaryTree.6d8ce938.png\";","export default __webpack_public_path__ + \"static/media/convexHull.2720e7cd.png\";","export default __webpack_public_path__ + \"static/media/15puzzle.5f6e8f37.PNG\";","export default __webpack_public_path__ + \"static/media/sudoku.58363375.png\";","import React, {Component} from 'react';\r\nimport ImgMediaCard from \"./card\";\r\nimport ImgMediaCard2 from \"./card2\";\r\nimport \"./style.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport graph from \"./images/graph.png\";\r\nimport primes from \"./images/primes.jpg\"\r\nimport sort from \"./sort.png\"\r\nimport queen from './images/queen.PNG'\r\nimport binSearch from './images/binaryTree.png'\r\nimport {getDetails} from \"./cardDetails\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nclass Cards extends Component {\r\n\r\n    state = {\r\n        cards:[],\r\n        filter:\"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({cards:getDetails()});\r\n    }\r\n    getData = (e)=>{\r\n        console.log(e.target.value);\r\n        this.setState({filter:e.target.value});\r\n    }\r\n    render() {\r\n        return (\r\n           <React.Fragment>\r\n               <div className=\"d-flex justify-content-end Cards\">\r\n                   <TextField\r\n                       id=\"standard-basic\" label=\"Search\"\r\n                       color=\"secondary\"\r\n                       onChange={this.getData}\r\n                   />\r\n               </div>\r\n               <div className=\"d-flex flex-wrap justify-content-center Cards p-lg-5\" >\r\n                   {\r\n                       this.state.cards.filter((card) => card.title.toLowerCase().includes(this.state.filter.toLowerCase())||card.description.toLowerCase().includes(this.state.filter.toLowerCase())).map(card=>(\r\n                           <div>\r\n                               <ImgMediaCard2\r\n                                   className=\"d-flex flex-wrap\"\r\n                                   key={card.id}\r\n                                   card={card}/>\r\n                           </div>\r\n                       ))\r\n                   }\r\n\r\n               </div>\r\n           </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cards;\r\n/*\r\n<div>\r\n   <ImgMediaCard2\r\n       className=\"d-flex flex-wrap\"\r\n       key={card.id}\r\n       card={card}/>\r\n</div>\r\n */","import graph from \"./images/graph.png\";\r\nimport primes from \"./images/primes.jpg\";\r\nimport sort from \"./sort.png\";\r\nimport queen from \"./images/queen.PNG\";\r\nimport binSearch from \"./images/binaryTree.png\";\r\nimport convex from './images/convexHull.png';\r\nimport puzzle from './images/15puzzle.PNG';\r\nimport sudoku from './images/sudoku.png';\r\nexport function getDetails(){\r\n   return [\r\n       {\r\n           id:1,\r\n           title:\"Pathfinder\",\r\n           description:\"Visualize graph algorithms like dijkstra, BFS, DFS\",\r\n           route:\"/pathfinder\",\r\n           img:graph\r\n       },\r\n       {\r\n           id:2,\r\n           title:\"Prime Numbers\",\r\n           description:\"Visualize how Seive is better than brute force\",\r\n           route:\"/prime\",\r\n           img:primes\r\n       },\r\n       {\r\n           id:3,\r\n           title:\"Sorting Algorithm\",\r\n           description:\"Compare different sorting algorithms\",\r\n           route:\"/sort\",\r\n           img:sort\r\n       },\r\n       {\r\n           id:9,\r\n           title:\"Recursive Sorting\",\r\n           description:\"Compare different recursive sorting algorithms\",\r\n           route:\"/recursivesort\",\r\n           img:sort\r\n       },\r\n       {\r\n           id:4,\r\n           title:\"N Queen\",\r\n           description:\"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",\r\n           route:\"/nqueen\",\r\n           img:queen\r\n       },\r\n       {\r\n           id:5,\r\n           title:\"Convex Hull\",\r\n           description:\"The convex hull of a set of points is the smallest convex polygon that contains all the points of it\",\r\n           route:\"/convexhull\",\r\n           img:convex\r\n       },\r\n       {\r\n           id:7,\r\n           title:\"Binary Search\",\r\n           description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\r\n           route:\"/binarysearch\",\r\n           img:binSearch\r\n       },\r\n       {\r\n           id:6,\r\n           title:\"Sudoku\",\r\n           description:\"Coming soon...\",\r\n           route:\"/\",\r\n           img:sudoku\r\n       },\r\n\r\n       {\r\n           id:8,\r\n           title:\"15 Puzzle\",\r\n           description:\"Coming soon...\",\r\n           route:\"/\",\r\n           img:puzzle\r\n       }\r\n\r\n   ]\r\n}","import React, {Component} from 'react';\r\nimport GitHubButton from 'react-github-btn'\r\nimport \"./style.css\";\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer class=\"page-footer font-small special-color-dark pt-4 \">\r\n\r\n                <div className='flex-wrap' style={{textAlign:\"center\"}}>\r\n                    <div className='m-2'><GitHubButton href=\"https://github.com/TamimEhsan\" data-show-count=\"true\" aria-label=\"Follow @TamimEhsan on GitHub\">Follow @TamimEhsan</GitHubButton></div>\r\n                    <GitHubButton href=\"https://github.com/TamimEhsan/Pathfinder-2.0\" data-icon=\"octicon-star\" data-show-count=\"true\" aria-label=\"Star TamimEhsan/Pathfinder-2.0 on GitHub\">Star</GitHubButton>\r\n                    &nbsp\r\n                    <GitHubButton href=\"https://github.com/TamimEhsan/Pathfinder-2.0/fork\" data-icon=\"octicon-repo-forked\" data-show-count=\"true\" aria-label=\"Fork TamimEhsan/Pathfinder-2.0 on GitHub\">Fork</GitHubButton>\r\n                    &nbsp\r\n                    <img src=\"https://hitcounter.pythonanywhere.com/count/tag.svg\" alt=\"Hits\"/>\r\n                </div>\r\n\r\n                <div class=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n                    <a href=\"https://github.com/tamimehsan\" style={{color: \"#65b6f0\"}}> Tamim Ehsan</a>\r\n                </div>\r\n\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport Navbar from \"./navbar\";\r\nimport Greet from \"./greet\";\r\nimport TypeWriterC from \"./typewriter\";\r\nimport Cards from \"./cards\";\r\nimport Footer from \"./footer\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar/>\r\n                <Greet/>\r\n                <TypeWriterC/>\r\n                <Cards/>\r\n                <Footer/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport './cell.css';\r\nclass Cell extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.getClass()}>\r\n                <span >\r\n                    {this.props.cell.val}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n    getClass = () =>{\r\n        const { val, isVisiting,isChecking,isPrime} = this.props.cell;\r\n        if(isPrime){\r\n            return \"cell cell-prime m-2\";\r\n        }else if( isVisiting ){\r\n            return \"cell cell-visiting m-2\";\r\n        } else if( isChecking ){\r\n            return \"cell cell-check m-2\";\r\n        } else{\r\n            return \"cell m-2\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Cell;","import React, {Component} from 'react';\r\nimport Cell from \"./cell\";\r\nimport './cells.css'\r\nclass Cells extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Cells\">\r\n                {this.props.cells.map( (cell,cellidx)=>{\r\n                    return (\r\n                        <Cell\r\n                            key={cellidx}\r\n                            cell={cell}\r\n                        />\r\n                    );\r\n                } )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cells;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Sieve</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n                marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.isDisabled}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('1');\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n        //props.onAlgoChanged(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ml-2 mr-2\">\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={1} style={{selected:true}} >Seive</MenuItem>\r\n                    <MenuItem value={2}>Brute Force(NA)</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\r\n                <SimpleSelect/>\r\n                <DiscreteSlider\r\n                    onChange={this.props.onChangeSpeed}\r\n                    title=\"speed\"\r\n                    marks={false}\r\n                    default={10}\r\n                    step={1}\r\n                    min={10}\r\n                    max={50}\r\n                    isDisabled={false}\r\n                />\r\n                <DiscreteSlider\r\n                    onChange={this.props.onChangeValues}\r\n                    title=\"Total Number\"\r\n                    marks={false}\r\n                    default={100}\r\n                    step={1}\r\n                    min={10}\r\n                    max={500}\r\n                    isDisabled={this.props.isDisabled}\r\n                />\r\n                <button className=\"btn btn-warning btn-lg m-2\" onClick={this.props.onVisualize} disabled={this.props.isDisabled} style={this.isClickable()}>Visualize</button>\r\n\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.isDisabled ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Cells from \"./cells\";\r\nimport Navbar from \"./navbar\";\r\nimport DiscreteSlider from \"./slider\";\r\nimport Menu from \"./menu\";\r\n\r\nclass Seive extends Component {\r\n    state = {\r\n        number: 100,\r\n        cells:[],\r\n        isRunning:false,\r\n        speed:500\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        const cells = getCells(this.state.number);\r\n        this.setState({cells});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Menu\r\n                    onChangeSpeed={this.changeSpeed}\r\n                    onChangeValues={this.handleValueIncease}\r\n                    onVisualize = {this.startSeive}\r\n                    onRefresh = {this.handleRefresh}\r\n                    isDisabled = {this.state.isRunning}\r\n                />\r\n                <Cells\r\n                    num={this.state.number}\r\n                    cells={this.state.cells}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    changeSpeed = (speed) => {\r\n        //console.log(typeof speed);\r\n        this.setState({speed:600-speed*10});\r\n    }\r\n    handleValueIncease = (value) => {\r\n        this.setState({number:value});\r\n        this.setState({cells:getCells(value),isRunning:false});\r\n        console.log(value);\r\n    }\r\n    handleRefresh = () => {\r\n        this.setState({cells:getCells(this.state.number),isRunning:false});\r\n    }\r\n    startSeive = async () => {\r\n        const speed = this.state.speed;\r\n        this.setState({isRunning:true});\r\n        const prime = [];\r\n        for(let i = 0;i<=this.state.number;i++){\r\n            prime.push(1);\r\n        }\r\n        prime[0] = prime[1] = 0;\r\n        let changedCells = this.state.cells;\r\n        let prevCheck = -1;\r\n        let counter = 0;\r\n        for( let i = 2; i<=this.state.number;i++){\r\n            if( prime[i] === 1 ){\r\n             //   setTimeout(()=>{\r\n                    changedCells = getNewCellPrimeToggled(changedCells,i-1);\r\n                    this.setState({cells:changedCells});\r\n                //},counter*speed);\r\n                await sleep(this.state.speed);\r\n                counter++;\r\n                for(let j = i*i;j<=this.state.number;j+=i){\r\n                    //setTimeout(()=>{\r\n                        if( prevCheck!=-1 ){\r\n                            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\r\n                        }\r\n                        prevCheck = j-1;\r\n                        changedCells = getNewCellCheckToggled(changedCells,j-1);\r\n                        changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\r\n                        this.setState({cells:changedCells});\r\n                  //  },counter*speed);\r\n                    await sleep(this.state.speed);\r\n                    counter++;\r\n                    prime[j] = 0;\r\n                }\r\n            }\r\n        }\r\n      //  setTimeout(()=>{\r\n            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\r\n            this.setState({cells:changedCells,isRunning:false});\r\n       // },counter*speed);\r\n    }\r\n}\r\n\r\nconst getNewCellPrimeToggled = (cells,pos) =>{\r\n    const newCells = cells.slice();\r\n    const cell = newCells[pos];\r\n    const newCell = {\r\n        ...cell,\r\n        isPrime:true\r\n    }\r\n    newCells[pos] = newCell;\r\n    return newCells;\r\n}\r\n\r\nconst getNewCellVisitingToggled = (cells,pos)=>{\r\n    const newCells = cells.slice();\r\n    const cell = newCells[pos];\r\n    const newCell = {\r\n        ...cell,\r\n        isVisiting:!cell.isVisiting\r\n    }\r\n    newCells[pos] = newCell;\r\n    return newCells;\r\n}\r\n\r\nconst getNewCellCheckToggled = (cells,pos) =>{\r\n    const newCells = cells.slice();\r\n    const cell = newCells[pos];\r\n    const newCell = {\r\n        ...cell,\r\n        isChecking:true\r\n    }\r\n    newCells[pos] = newCell;\r\n    return newCells;\r\n}\r\n\r\nconst getCells = (rows)=>{\r\n    const cells = [];\r\n    for(let cell = 1;cell<=rows;cell++){\r\n        cells.push(createCell(cell))\r\n    }\r\n    return cells;\r\n}\r\nconst createCell = (val)=>{\r\n    return {\r\n        val,\r\n        isChecking:false,\r\n        isVisiting:false,\r\n        isPrime:false\r\n    };\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nexport default Seive;","import React, {Component} from 'react';\r\nimport './style.css';\r\nclass Rect extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='rect'\r\n                style={{height:this.props.rect.width,\r\n                    background:this.checkColor(),\r\n                    margin:this.props.marg\r\n                }}\r\n            >\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    checkColor = () => {\r\n        if( this.props.rect.isSorted ){\r\n            return \"green\";\r\n        } else if( this.props.rect.isSorting ){\r\n            return \"red\";\r\n        } else{\r\n            return \"black\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Rect;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\n\r\nclass Rects extends Component {\r\n    render() {\r\n        let margin = 5;\r\n        if( this.props.rects.length>50 ){\r\n            margin=1;\r\n        }\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-end\">\r\n                {this.props.rects.map( (rect,rectidx)=>{\r\n                    return (\r\n                        <Rect\r\n                            marg={margin}\r\n                            key={rectidx}\r\n                            rect={rect}\r\n                        />\r\n                    );\r\n                } )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rects;","export function bubbleSort2(rects ){\r\n    const pairs = [];\r\n    const num  = rects.length;\r\n    const prevRect = rects.slice();\r\n\r\n    for( let i = 0; i<num; i++ ){\r\n        for( let j = i+1;j<num;j++ ){\r\n            if( prevRect[i].width>prevRect[j].width ){\r\n                const recti = {...prevRect[i]};\r\n                const rectj = {...prevRect[j]};\r\n                prevRect[j] = recti;\r\n                prevRect[i] = rectj;\r\n                pairs.push( {\r\n                    xx:i,\r\n                    yy:j,\r\n                    changed:true\r\n                } );\r\n            } else{\r\n                pairs.push( {\r\n                    xx:i,\r\n                    yy:j,\r\n                    changed:false\r\n                });\r\n            }\r\n            if( j === num-1 ){\r\n                pairs.push( {\r\n                    xx:i,\r\n                    yy:i,\r\n                    changed:false\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return pairs;\r\n}\r\n\r\nexport function selectionSort(arr) {\r\n    const pairs = [];\r\n    let n = arr.length;\r\n    const prevRect = arr.slice();\r\n    // One by one move boundary of unsorted subarray\r\n    for (let i = 0; i < n-1; i++)\r\n    {\r\n        let min_idx = i;\r\n        for (let j = i+1; j < n; j++){\r\n            pairs.push( {\r\n                xx:min_idx,\r\n                yy:j,\r\n                changed:false\r\n            } );\r\n            if (prevRect[j].width < prevRect[min_idx].width){\r\n                min_idx = j;\r\n            }\r\n        }\r\n\r\n        // Swap the found minimum element with the first\r\n        // element\r\n        const recti = {...prevRect[i]};\r\n        const rectj = {...prevRect[min_idx]};\r\n        prevRect[min_idx] = recti;\r\n        prevRect[i] = rectj;\r\n        pairs.push( {\r\n            xx:min_idx,\r\n            yy:i,\r\n            changed:true\r\n        } );\r\n        pairs.push( {\r\n            xx:i,\r\n            yy:i,\r\n            changed:false\r\n        });\r\n    }\r\n    pairs.push({\r\n            xx:n-1,\r\n            yy:n-1,\r\n            changed:false\r\n        }\r\n    )\r\n    return pairs;\r\n}\r\n\r\nexport function bubbleSort(arr){\r\n    const pairs= [];\r\n    let n = arr.length;\r\n    const prevRect = arr.slice();\r\n    for (let i = 0; i < n-1; i++){\r\n        for (let j = 0; j < n-i-1; j++){\r\n            if (prevRect[j].width > prevRect[j+1].width) {\r\n                // swap arr[j+1] and arr[j]\r\n                const recti = {...prevRect[j]};\r\n                const rectj = {...prevRect[j+1]};\r\n                prevRect[j+1] = recti;\r\n                prevRect[j] = rectj;\r\n                pairs.push( {\r\n                    xx:j,\r\n                    yy:j+1,\r\n                    changed:true\r\n                } );\r\n            } else{\r\n                pairs.push( {\r\n                    xx:j,\r\n                    yy:j+1,\r\n                    changed:false\r\n                } );\r\n            }\r\n            if( j === n-i-2 ){\r\n                pairs.push( {\r\n                    xx:n-i-1,\r\n                    yy:n-i-1,\r\n                    changed:false\r\n                } );\r\n            }\r\n        }\r\n    }\r\n    pairs.push({\r\n            xx:0,\r\n            yy:0,\r\n            changed:false\r\n        }\r\n    )\r\n    return pairs;\r\n}\r\n\r\nexport function insertionSort(arr){\r\n    const pairs = [];\r\n    let n = arr.length;\r\n    const prevRect = arr.slice();\r\n    for (let i = 1; i < n; ++i) {\r\n        let key = prevRect[i].width;\r\n        let j = i - 1;\r\n\r\n        while (j >= 0 && prevRect[j].width > key) {\r\n            const recti = {...prevRect[j]};\r\n            const rectj = {...prevRect[j+1]};\r\n            prevRect[j+1] = recti;\r\n            prevRect[j] = rectj;\r\n            pairs.push( {\r\n                xx:j,\r\n                yy:j+1,\r\n                changed:true\r\n            } );\r\n            j = j - 1;\r\n        }\r\n       // arr[j + 1] = arr[i];\r\n    }\r\n    for(let i=0;i<n;i++){\r\n        pairs.push({\r\n            xx:i,\r\n            yy:i,\r\n            changed:true\r\n        })\r\n    }\r\n    return pairs;\r\n}","let values = [];\r\n\r\nexport function quickSort(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n    // console.log( \"fdsfsd\",sz );\r\n    sz = sz-1;\r\n    quick(rects,0,sz);\r\n    for(var i=0;i<=sz;i++){\r\n        values.push({\r\n            xx:i,\r\n            yy:i,\r\n            changed:true\r\n        })\r\n    }\r\n    return values;\r\n}\r\n\r\n\r\nfunction getPartition(rects, left, right){\r\n    let pivot = rects[right].width\r\n    let it = left-1;\r\n    for(var j=left;j<=right-1;j++){\r\n        if( rects[j].width< pivot){\r\n            it++;\r\n            if( it!==j ){\r\n                // swap(rects[it],rects[j];\r\n                const rect1 = {...rects[it]};\r\n                const rect2 = {...rects[j]};\r\n                rects[it] = rect2;\r\n                rects[j] = rect1;\r\n                values.push({\r\n                    xx:it,\r\n                    yy:j,\r\n                    changed:true\r\n                })\r\n            }\r\n        }\r\n    }\r\n    if( it+1!==right ){\r\n        const rect1 = {...rects[it+1]};\r\n        const rect2 = {...rects[right]};\r\n        rects[it+1] = rect2;\r\n        rects[right] = rect1;\r\n        values.push({\r\n            xx:it+1,\r\n            yy:right,\r\n            changed:true\r\n        })\r\n    }\r\n    return it+1;\r\n}\r\nfunction quick(rects,left,right){\r\n    if( left>=right ) return ;\r\n    const partition = getPartition(rects,left,right);\r\n    quick(rects,left,partition-1);\r\n    quick(rects,partition+1,right);\r\n}","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Sorting Visualizer</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                            <span style={{color:\"white\"}}>\r\n                                Home\r\n                            </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onCountChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n               // marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.disable}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('0');\r\n    const [state, setState] = React.useState({\r\n        pos: props.pos,\r\n    });\r\n    const handleChange = (event) => {\r\n        console.log(state.pos);\r\n        setAge(event.target.value);\r\n        props.onAlgoChanged(state.pos,event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ml-2 mr-2\">\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={0} style={{selected:true}} >Bubble Sort</MenuItem>\r\n                    <MenuItem value={1}>Selection Sort</MenuItem>\r\n                    <MenuItem value={2}>Insertion Sort</MenuItem>\r\n                    <MenuItem value={3}>Quick Sort</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 300 + theme.spacing(3) * 2,\r\n    },\r\n    margin: {\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n\r\n    return (\r\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nconst AirbnbSlider = withStyles({\r\n    root: {\r\n        color: '#3a8589',\r\n        height: 3,\r\n        padding: '13px 0',\r\n    },\r\n    thumb: {\r\n        height: 27,\r\n        width: 27,\r\n        backgroundColor: '#fff',\r\n        border: '1px solid currentColor',\r\n        marginTop: -12,\r\n        marginLeft: -13,\r\n        boxShadow: '#ebebeb 0 2px 2px',\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: '#ccc 0 2px 3px 1px',\r\n        },\r\n        '& .bar': {\r\n            // display: inline-block !important;\r\n            height: 9,\r\n            width: 1,\r\n            backgroundColor: 'currentColor',\r\n            marginLeft: 1,\r\n            marginRight: 1,\r\n        },\r\n    },\r\n    active: {},\r\n    track: {\r\n        height: 3,\r\n    },\r\n    rail: {\r\n        color: '#ffffff',\r\n        opacity: 1,\r\n        height: 3,\r\n    },\r\n})(Slider);\r\n\r\nfunction AirbnbThumbComponent(props) {\r\n    return (\r\n        <span {...props}>\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n    </span>\r\n    );\r\n}\r\n\r\nexport default function CustomizedSlider() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography gutterBottom>Airbnb</Typography>\r\n            <AirbnbSlider\r\n                ThumbComponent={AirbnbThumbComponent}\r\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\r\n                defaultValue={[20, 40]}\r\n                valueLabelDisplay=\"on\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\n\r\nconst CSlider = withStyles({\r\n    root: {\r\n       // color: \"#ffffff\",\r\n        height: 3,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"#fff\",\r\n        //color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\n\r\nexport default function RangeSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([20, 37]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    const handleCommit = (event, newValue) => {\r\n        console.log(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CSlider\r\n                disabled={props.disable}\r\n                value={value}\r\n                onChange={handleChange}\r\n                onChangeCommitted={handleCommit}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                valueLabelDisplay=\"off\"\r\n            />\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Value range\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport default function SwitchLabels(props) {\r\n    const [state, setState] = React.useState({\r\n        checkedA: false,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.onDoubleChange(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <FormGroup row>\r\n            <FormControlLabel\r\n                control={<Switch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\r\n                label=\"Duo\"\r\n                disabled={props.disable}\r\n            />\r\n\r\n        </FormGroup>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport CustomizedSlider from \"./airBnbSlider\";\r\nimport RangeSlider from \"./doubleSlider\";\r\nimport SwitchLabels from \"./formControlLabel\";\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-secondary m-2'\r\n                    onClick={this.props.onRandomize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Randomize\r\n                </button>\r\n\r\n                <RangeSlider\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={20}\r\n                    min={10}\r\n                    max={100}\r\n                    step={10}\r\n                    title=\"Numbers\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={50}\r\n                    min={10}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                    disable={false}\r\n                />\r\n                <SimpleSelect\r\n                    pos={0}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                />\r\n                <SwitchLabels\r\n                    disable={this.props.disable}\r\n                    onDoubleChange={this.props.onDoubleChange}\r\n                />\r\n                <SimpleSelect\r\n                    pos={1}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                />\r\n                <button\r\n                    className='btn btn-warning btn-lg '\r\n                    onClick={this.props.onViusalize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\nimport Rect from \"./rect\";\nimport Rects from \"./rects\";\nimport {bubbleSort,selectionSort,insertionSort} from \"../algorithms/sortingAlgorithms\";\nimport {quickSort} from \"../algorithms/quickSort\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass Sort extends Component {\n  state = {\n      count:20,\n      rects: [],\n      rects2: [],\n      doubles:false,\n      speed:50,\n      isRunning:false,\n      isRunning1:false,\n      isRunning2:false,\n      algo1:0,\n      algo2:0\n  }\n  constructor() {\n      super();\n  }\n  componentDidMount() {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n\n    render() {\n    return (\n        <React.Fragment>\n            <Navbar/>\n            <Menu\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n            <div className=' justify-content-center'>\n\n                <Rects\n                    rects={this.state.rects}\n                />\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\n                { this.state.doubles &&\n                <Rects\n                    rects={this.state.rects2}\n                /> }\n            </div>\n        </React.Fragment>\n    );\n  }\n  handleRandomize = () => {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n  handleRefresh = () =>{\n      const rects = this.state.rects;\n      for(let i=0;i<rects.length;i++){\n          const rect = {...rects[i],isSorted:false, isSorting:false}\n          rects[i] = rect;\n      }\n      const rects2 = rects.slice();\n      this.setState({rects,rects2});\n  }\n\n  handleDouble = (val) =>{\n      this.setState({doubles:val});\n  }\n  handleCountChange = (val) => {\n      this.setState({count:val});\n      this.handleRandomize();\n  }\n  handleAlgoChanged = (pos,val) =>{\n      if( pos === 0 ){\n          this.setState({algo1:val});\n      } else{\n          this.setState({algo2:val});\n      }\n  }\n  handleSpeedChanged = (val) =>{\n    const speed = (110-val);\n    this.setState({speed});\n  }\n  handleSort = () =>{\n\n      this.setState({isRunning:true});\n      let steps1;\n      switch (this.state.algo1){\n          case 0:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n          case 1:\n              steps1 = selectionSort(this.state.rects);\n              break;\n          case 2:\n              steps1 = insertionSort(this.state.rects);\n              break;\n          case 3:\n              steps1 = quickSort(this.state.rects2);\n              console.log(steps1)\n              break;\n          default:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n      }\n      let steps2;\n      if( this.state.doubles ){\n\n          switch (this.state.algo2){\n              case 0:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n              case 1:\n                  steps2 = selectionSort(this.state.rects2);\n                  break;\n              case 2:\n                  steps2 = insertionSort(this.state.rects2);\n                  break;\n              case 3:\n                  steps2 = quickSort(this.state.rects2);\n                  break;\n              default:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n          }\n\n      }\n      this.handleFirst(steps1);\n      if( this.state.doubles ) this.handleSecond(steps2);\n  }\n  handleFirst = async (steps) =>{\n     // console.log(\"fsdfsdfsdfasdf\");\n      this.setState({isRunning1:true});\n      const {speed} = this.state;\n     // const steps = bubbleSort(this.state.rects);\n    //  console.log(steps.length);\n      const prevRect = this.state.rects;\n      for(let i = 0;i<steps.length;i++){\n       //   setTimeout(()=>{\n              if( i!==0 ){\n                  prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                  prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n              }\n              if(steps[i].xx===steps[i].yy){\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n              }else if( steps[i].changed ){\n                  const recti = {...prevRect[steps[i].xx],isSorting:true};\n                  const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                  prevRect[steps[i].yy] = recti;\n                  prevRect[steps[i].xx] = rectj;\n              } else{\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n              }\n              if(i === steps.length-1){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n              }\n             /* if( i === (steps.length)-2 ){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n              }*/\n              this.setState({rects:prevRect});\n              await sleep(this.state.speed);\n         // },i*speed);\n      }\n  }\n    handleSecond = async (steps) =>{\n        const {speed} = this.state;\n        this.setState({isRunning2:true});\n        const prevRect = this.state.rects2;\n        for(let i = 0;i<steps.length;i++){\n         //   setTimeout(()=>{\n                if( i!==0 ){\n                    prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                    prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n                }\n                if(steps[i].xx===steps[i].yy){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n                }else if( steps[i].changed ){\n                    const recti = {...prevRect[steps[i].xx],isSorting:true};\n                    const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                    prevRect[steps[i].yy] = recti;\n                    prevRect[steps[i].xx] = rectj;\n                } else{\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n                }\n                if( i === steps.length-1 ){\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }\n               /* if( i === (steps.length)-2 ){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }*/\n                this.setState({rects2:prevRect});\n                await sleep(this.state.speed);\n           // },i*speed);\n        }\n    }\n\n\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for(let i = 0;i<tot;i++){\n        rects.push(getRect());\n    }\n    return rects;\n}\nconst getRect = () => {\n  return {\n      width: Math.floor(Math.random() * 200)+50,\n      isSorted:false,\n      isSorting:false\n  }\n}\nexport default Sort;\n","export default __webpack_public_path__ + \"static/media/queen.a967028b.png\";","import React, {Component} from 'react';\r\nimport './style.css'\r\nimport queen from './queen.png';\r\nclass Cell extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.getClassName()} style={this.getStyled()}>\r\n                { this.props.cell.isPresent && <img src={queen} height='100px' style={{padding:\"25px\"}}/> }\r\n            </div>\r\n        );\r\n    }\r\n    getClassName = ()=>{\r\n        if(this.props.cell.isAttacked){\r\n            return \"boardCell attacked\";\r\n        } else if(this.props.cell.isCurrent){\r\n            return \"boardCell current\";\r\n        }else if(this.props.cell.isPresent){\r\n            return \"boardCell present\";\r\n        }else if(this.props.cell.isChecked){\r\n            return \"boardCell checked\";\r\n        } else{\r\n            return \"boardCell\";\r\n        }\r\n    }\r\n    getStyled = () =>{\r\n        if( (this.props.cell.row+this.props.cell.col)%2 === 0 ){\r\n            return {\r\n                backgroundColor:\"white\"\r\n            }\r\n        }else{\r\n            return {\r\n                backgroundColor:\"grey\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Cell;","import React, {Component} from 'react';\r\nimport Cell from \"./cell\";\r\nimport './style.css';\r\nclass Cells extends Component {\r\n    render() {\r\n        return (\r\n            <div className='booard m-5' >\r\n                {this.props.board.map( (row,rowidx)=>{\r\n                    return(\r\n                        <div key={rowidx}>\r\n                            {row.map( (cell,cellidx)=>{\r\n                                return(\r\n                                    <Cell\r\n                                        key={cellidx}\r\n                                        cell={cell}/>\r\n                                );\r\n                            } )}\r\n                        </div>\r\n                    );\r\n                } )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cells;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">N Queen</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                            <span style={{color:\"white\"}}>\r\n                                Home\r\n                            </span>\r\n                    </Link>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onCountChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n               // marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.disable}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\n\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-secondary m-2'\r\n                    onClick={this.props.onClear}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Clear Board\r\n                </button>\r\n\r\n                <DiscreteSlider\r\n                    default={4}\r\n                    min={1}\r\n                    max={8}\r\n                    step={1}\r\n                    title=\"Grid size\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={50}\r\n                    min={1}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                />\r\n\r\n                <button\r\n                    className='btn btn-warning btn-lg '\r\n                    onClick={this.props.onViusalize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Cells from \"./cells\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\n\r\nclass Queen extends Component {\r\n    state={\r\n        board:[],\r\n        number:4,\r\n        speed:490,\r\n        isRunning:false\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        const board = getBoard(this.state.number);\r\n       // board[3][3].isPresent = true;\r\n        this.setState({board});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Menu\r\n                    onSpeedChange={this.handleSpeedChange}\r\n                    onCountChange={this.handleQueenChange}\r\n                    onViusalize={this.startAlgo}\r\n                    disable={this.state.isRunning}\r\n                    onClear={this.handleClear}\r\n                    onStop={this.handleStop}\r\n                />\r\n                <div style={{textAlign:\"Center\"}}>\r\n                    <Cells\r\n                        board={this.state.board}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleStop =() =>{\r\n        this.setState({isRunning:false});\r\n    }\r\n\r\n    handleSpeedChange = (val)=>{\r\n        const speed = (100-val)*10;\r\n        this.setState({speed});\r\n    }\r\n    handleQueenChange = (number)=>{\r\n        this.setState({number});\r\n        const board = getBoard(this.state.number);\r\n        this.setState({board});\r\n    }\r\n    handleClear = () => {\r\n        const board = getBoard(this.state.number);\r\n        this.setState({board});\r\n    }\r\n    handleTurnOff =  () => {\r\n        const newBoard = turnOffAttack(this.state.board,this.state.number);\r\n        this.setState({board:newBoard});\r\n    }\r\n    startAlgo = async ()=>{\r\n        this.setState({isRunning:true});\r\n        const newBoard = this.state.board.slice();\r\n        await this.queensAlgo(newBoard,0);\r\n        const newBoard2 = turnOffAttack(this.state.board,this.state.number);\r\n        this.setState({board:newBoard2,isRunning:false});\r\n    }\r\n    queensAlgo =  async (board,col) => {\r\n\r\n        if( col>=this.state.number ){\r\n            return true;\r\n        }\r\n\r\n        let newBoard = board.slice();\r\n        for( let i = 0; i < this.state.number;i++ ){\r\n\r\n\r\n            newBoard = turnOffAttack(newBoard,this.state.number);\r\n            const result = getChecked(newBoard,i,col,this.state.number);\r\n            newBoard = result[0];\r\n\r\n            this.setState({board:newBoard});\r\n            await sleep(this.state.speed);\r\n            if( result[1] ){\r\n                const res = await this.queensAlgo(newBoard,col+1)\r\n                if( res === true){\r\n                    return true;\r\n                }\r\n                newBoard[i][col] = {...newBoard[i][col],isPresent:true,isCurrent:true};\r\n                this.setState({board:newBoard});\r\n                await sleep(this.state.speed);\r\n                newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\r\n                this.setState({board:newBoard});\r\n\r\n            }\r\n            newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\r\n            newBoard = turnOffAttack(newBoard,this.state.number);\r\n            this.setState({board:newBoard});\r\n            await sleep(this.state.speed);\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport default Queen;\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nconst turnOffAttack = (board,N) =>{\r\n    const newBoard = board.slice();\r\n    for( let i = 0;i<N; i++ ){\r\n        for( let j = 0;j<N;j++ ){\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:false, isAttacked:false,isCurrent:false};\r\n        }\r\n    }\r\n    return newBoard;\r\n}\r\n\r\nconst getChecked = (board,row,col,N) =>{\r\n    const newBoard = board.slice();\r\n    let pos = true;\r\n    // same col\r\n    for( let i = 0;i < N;i++ ){\r\n        if( newBoard[row][i].isPresent ){\r\n            newBoard[row][i] = {...newBoard[row][i],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[row][i] = {...newBoard[row][i],isChecked:true};\r\n        }\r\n    }\r\n    // same row\r\n    for( let i = 0;i < N;i++ ){\r\n        if( newBoard[i][col].isPresent ){\r\n            newBoard[i][col] = {...newBoard[i][col],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][col] = {...newBoard[i][col],isChecked:true};\r\n        }\r\n    }\r\n    for( let i = row,j = col; i >= 0 && j >= 0; i--, j--){\r\n        if( newBoard[i][j].isPresent ){\r\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\r\n        }\r\n    }\r\n    for( let i = row,j = col; i <N && j >= 0; i++, j--){\r\n        if( newBoard[i][j].isPresent ){\r\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\r\n        }\r\n    }\r\n    for( let i = row,j = col; i <N && j < N; i++, j++){\r\n        if( newBoard[i][j].isPresent ){\r\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\r\n        }\r\n    }\r\n    for( let i = row,j = col; i>=0 && j < N; i--, j++){\r\n        if( newBoard[i][j].isPresent ){\r\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\r\n        }\r\n    }\r\n\r\n    newBoard[row][col] = {...newBoard[row][col],isPresent:true,isCurrent:true};\r\n\r\n    return [newBoard,pos];\r\n}\r\nconst getBoard = (N) =>{\r\n    const rows = [];\r\n    for( let i = 0;i<N;i++ ){\r\n        const cols = [];\r\n        for(let j =0;j<N;j++){\r\n            cols.push(getCell(i,j));\r\n        }\r\n        rows.push(cols);\r\n    }\r\n    return rows;\r\n}\r\n\r\nconst getCell = (row,col)=>{\r\n    return{\r\n        row,\r\n        col,\r\n        isPresent:false,\r\n        isChecked:false,\r\n        isAttacked:false,\r\n        isCurrent:false\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nclass MyTimer extends Component {\r\n    state={\r\n        time:0,\r\n        going:false,\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if( prevProps.onGoing!==this.props.onGoing ){\r\n            this.setState({going:this.props.onGoing});\r\n            if( this.props.onGoing ){\r\n                this.startCount();\r\n            }\r\n        }\r\n    }\r\n    startCount = async () => {\r\n        while (this.props.onGoing){\r\n            this.setState({time:this.state.time+1});\r\n            if( this.state.time>10){\r\n                this.setState({time:0});\r\n                this.props.onStop();\r\n            }\r\n            await sleep(100);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>\r\n                    <span className='badge badge-danger'>\r\n                    {this.state.time}\r\n                </span>\r\n                </h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default MyTimer;","export function convex_hull(points){\r\n    if( points.size === 1 ){\r\n        return;\r\n    }\r\n    const pointStart = points[0];\r\n    const pointEnd = points[ points.length-1 ];\r\n    const up = [], down = [];\r\n    const pairs = [];\r\n    const lines=[];\r\n    up.push( pointStart);\r\n    down.push(pointStart);\r\n    for( let i = 1; i< points.length ;i++ ){\r\n        if( (i === (points.length - 1)) || cw( pointStart,points[i],pointEnd ) ){\r\n            while( up.length >=2 && !cw(up[up.length-2],up[up.length-1],points[i] ) ){\r\n                lines.push({\r\n                    from:up[up.length-2],\r\n                    to:up[up.length-1],\r\n                    add:false\r\n                });\r\n                up.pop();\r\n            }\r\n            up.push( points[i] );\r\n            lines.push({\r\n                from:up[up.length-2],\r\n                to:up[up.length-1],\r\n                add:true\r\n            })\r\n        }\r\n\r\n    }\r\n    for(let i = 0; i< points.length;i++){\r\n        if( (i === (points.length - 1)) || ccw( pointStart,points[i],pointEnd ) ){\r\n            while( down.length >=2 && !ccw(down[down.length-2],down[down.length-1],points[i] ) ){\r\n                lines.push({\r\n                    from:down[down.length-2],\r\n                    to:down[down.length-1],\r\n                    add:false\r\n                });\r\n                down.pop();\r\n            }\r\n            down.push( points[i] );\r\n            lines.push({\r\n                from:down[down.length-2],\r\n                to:down[down.length-1],\r\n                add:true\r\n            })\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < up.length; i++){\r\n        pairs.push(up[i]);\r\n    }\r\n    for (let i = down.length - 2; i > 0; i--) {\r\n        pairs.push(down[i]);\r\n    }\r\n    return [pairs,lines];\r\n}\r\n\r\nfunction cw(a, b, c) {\r\n    const f = a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy);\r\n    if( a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy) < 0 ){\r\n        return true;\r\n    } else{\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nfunction ccw(a, b, c){\r\n    if( a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) > 0 ){\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n}","import React, {Component} from 'react';\r\nimport './style.css';\r\nimport {convex_hull} from \"../algorithms/grahamScan\";\r\nclass Canvas extends Component {\r\n    state={\r\n        dots:[],\r\n        lines:[],\r\n        canvasWidth:300,\r\n        canvasHeight:100\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.setState({canvasWidth:window.innerWidth});\r\n        this.setState({canvasHeight:window.innerHeight-10});\r\n        console.log(window.innerWidth);\r\n        this.myRef = React.createRef();\r\n        this.canvasLineRef = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        this.redrawDots();\r\n       // console.log(this.state.canvasWidth);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if( this.props.dots!==prevProps.dots ){\r\n            this.setState({dots:this.props.dots});\r\n            this.redrawDots();\r\n        }\r\n        if( this.props.onGoing!==prevProps.onGoing ){\r\n            if( this.props.onGoing === true ){\r\n                this.animateLine();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{textAlign:\"center\"}}>\r\n                <div className=\"containerz\">\r\n                    <canvas\r\n                        className='canvas'\r\n                        id='canvas1'\r\n                        style={{backgroundColor:\"whitesmoke\"}}\r\n                        ref={this.canvasLineRef} width={window.innerWidth} height={window.innerHeight-200} />\r\n                    <canvas\r\n                        className='canvas'\r\n                        id='canvas2'\r\n                        // style={{backgroundColor:\"grey\"}}\r\n                        ref={this.myRef} width={window.innerWidth} height={window.innerHeight-200}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    redrawDots(){\r\n        const canvas = this.myRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.fillStyle = 'lightgrey';\r\n        ctx.strokeStyle = 'black';\r\n        for( let i = 0; i<this.props.dots.length;i++ ){\r\n            ctx.beginPath();\r\n           // ctx.moveTo(this.props.dots[i].xx, this.props.dots[i].yy)\r\n            ctx.arc(this.props.dots[i].xx, this.props.dots[i].yy, 10, 0, 2*Math.PI);\r\n            ctx.fill();\r\n            ctx.lineWidth = 2;\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n        }\r\n        ctx.closePath();\r\n        const res = convex_hull(this.props.dots);\r\n\r\n        const cansvas2 = this.canvasLineRef.current;\r\n        const ctx2 = cansvas2.getContext('2d');\r\n        ctx2.clearRect(0, 0, canvas.width, canvas.height);\r\n        this.setState({lines:res[1]});\r\n\r\n    }\r\n\r\n    animateLine = async () => {\r\n        const {lines} = this.state;\r\n        const canvas2 = this.canvasLineRef.current;\r\n        const ctx2 = canvas2.getContext('2d');\r\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n        ctx2.fillStyle = '#ffffff';\r\n        ctx2.strokeStyle = '#ffffff';\r\n        for( let i = 0; i<lines.length;i++ ){\r\n            if( !this.props.onGoing ){\r\n                ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n                return;\r\n            }\r\n            ctx2.beginPath();\r\n            if( lines[i].add ){\r\n                ctx2.beginPath();\r\n                ctx2.lineWidth = 2;\r\n                ctx2.fillStyle = 'black';\r\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\r\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 14, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.beginPath();\r\n                ctx2.fillStyle = 'red';\r\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\r\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 14, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.beginPath();\r\n                ctx2.lineWidth = 2;\r\n                ctx2.strokeStyle = '#000000';\r\n            } else{\r\n                ctx2.beginPath();\r\n                ctx2.fillStyle = 'whitesmoke';\r\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\r\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 15, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.beginPath();\r\n                ctx2.fillStyle = 'whitesmoke';\r\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\r\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 15, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.lineWidth = 4;\r\n                ctx2.strokeStyle = 'whitesmoke';\r\n            }\r\n\r\n            ctx2.moveTo(lines[i].from.xx, lines[i].from.yy);\r\n            ctx2.lineTo(lines[i].to.xx, lines[i].to.yy);\r\n            ctx2.stroke();\r\n            ctx2.closePath();\r\n            if( i === lines.length - 1 ){\r\n                this.props.onTurnOff();\r\n            }\r\n            await sleep(this.props.speed);\r\n        }\r\n    }\r\n\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nexport default Canvas;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Convex Hull</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n                marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.isDisabled}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\r\n                <DiscreteSlider\r\n                    onChange={this.props.onChangeSpeed}\r\n                    title=\"speed\"\r\n                    marks={false}\r\n                    default={10}\r\n                    step={1}\r\n                    min={10}\r\n                    max={50}\r\n                    isDisabled={false}\r\n                />\r\n                <DiscreteSlider\r\n                    onChange={this.props.onChangeValues}\r\n                    title=\"Total Number\"\r\n                    marks={false}\r\n                    default={50}\r\n                    step={1}\r\n                    min={10}\r\n                    max={200}\r\n                    isDisabled={this.props.isDisabled}\r\n                />\r\n                <button\r\n                    className=\"btn btn-warning btn-lg m-2\"\r\n                    onClick={this.props.onVisualize}\r\n                    disabled={this.props.isDisabled}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize Graham Scan\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.isDisabled ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport MyTimer from \"./timer\";\r\nimport Canvas from \"./canvas\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\nclass ConvexHull extends Component {\r\n    state={\r\n        dots:[],\r\n        lines:[],\r\n        isALgoLive:false,\r\n        width:100,\r\n        height:100,\r\n        isRunning:false,\r\n        speed:100,\r\n        number:50\r\n\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.setState({width:window.innerWidth,height:window.innerHeight-200});\r\n    }\r\n    componentDidMount() {\r\n        this.setState({width:window.innerWidth,height:window.innerHeight-100});\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Menu\r\n                    onRefresh={this.handleRefreshDots}\r\n                    onVisualize={this.handleVisualize}\r\n                    onChangeSpeed={this.changeSpeed}\r\n                    onChangeValues={this.handleValueIncease}\r\n                />\r\n                <Canvas\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    dots={this.state.dots}\r\n                    onTurnOff={this.handleTurnOff}\r\n                    onGoing={this.state.isRunning}\r\n                    speed={this.state.speed}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    handleValueIncease = (value) => {\r\n        this.setState({number:value});\r\n        this.handleRefreshDots();\r\n    }\r\n    changeSpeed = (speed) => {\r\n        //console.log(typeof speed);\r\n        this.setState({speed:600-speed*10});\r\n    }\r\n    handleAlgoStateChanged = (val) => {\r\n        this.setState({isAlgoLive:val});\r\n    }\r\n    handleVisualize = () =>{\r\n        this.setState({isRunning:true});\r\n    }\r\n    handleTurnOff = () =>{\r\n        this.setState({onGoing:false});\r\n    }\r\n    handleRefreshDots = () =>{\r\n        this.setState({isRunning:false});\r\n        this.setState({dots:getNewDots(this.state.number)});\r\n    }\r\n\r\n    handleMoreDot = () =>{\r\n        const row = Math.floor(Math.random()*400)+10;\r\n        const col = Math.floor(Math.random()*400)+10;\r\n        const dot = {\r\n            row:row,\r\n            col:col\r\n        }\r\n        const dots = this.state.dots;\r\n        dots.push(dot);\r\n        this.setState(dots);\r\n    }\r\n}\r\nfunction getNewDots(number){\r\n    const dots= [];\r\n    for(let  i = 0; i<number;i++){\r\n        dots.push(getDot());\r\n    }\r\n    dots.sort( (a,b) => {\r\n       if( a.xx!==b.xx ){\r\n           return a.xx-b.xx;\r\n       } else{\r\n           return a.yy - b.yy;\r\n       }\r\n    } );\r\n    return dots;\r\n}\r\nfunction getDot(){\r\n    const width = window.innerWidth-50;\r\n    const height = window.innerHeight-250;\r\n    const rowpos = Math.floor( Math.random()*height )+25;\r\n    const colpos = Math.floor(Math.random()*width)+25;\r\n    return {\r\n        xx:colpos,\r\n        yy:rowpos,\r\n    }\r\n}\r\nexport default ConvexHull;","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nclass EntryPoint extends Component {\r\n    state={\r\n        error:false\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    error={this.state.error}\r\n                    id=\"standard-error-helper-text\"\r\n                    label=\"Upper Number\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    onChange={this.getData}\r\n                /> <br /><br />\r\n                <h1>\r\n                    Guess a number between 0 and {this.props.upper}\r\n                </h1>\r\n                <br />\r\n                <button\r\n                    className='btn btn-warning btn-lg'\r\n                    onClick={this.props.startGame}\r\n                >\r\n                    Start the game\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n    getData = (e)=>{\r\n        if( e.target.value!== \"\" ){\r\n            console.log(e.target.value);\r\n            this.props.setUpper(e.target.value);\r\n        }\r\n        else{\r\n            this.props.setUpper(100)\r\n        }\r\n    }\r\n    validateNumbers = () =>{\r\n\r\n    }\r\n}\r\n\r\nexport default EntryPoint;","import React, {useEffect} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 400,\r\n    },\r\n});\r\n\r\n\r\nconst CSlider = withStyles({\r\n    root: {\r\n       // color: \"#ffffff\",\r\n        height: 3,\r\n        width: 400,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"#fff\",\r\n        //color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\n\r\nexport default function RangeSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([props.lower, props.upper]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    const handleCommit = (event, newValue) => {\r\n        console.log(newValue);\r\n    };\r\n    useEffect(()=>{\r\n        setValue([props.lower,props.upper]);\r\n    },[props.lower,props.upper])\r\n    return (\r\n        <div className={classes.root}>\r\n            <CSlider\r\n                disabled\r\n                value={value}\r\n                onChange={handleChange}\r\n                onChangeCommitted={handleCommit}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                valueLabelDisplay=\"on\"\r\n                max={props.max}\r\n            />\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Binary Search\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport RangeSlider from \"./doubleSlider\";\r\n\r\nclass Guess extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n\r\n                <p>\r\n\r\n                    <button className=\"btn btn-secondary btn-lg\" type=\"button\" data-toggle=\"collapse\"\r\n                            data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                        Toggle Range\r\n                    </button>\r\n                </p>\r\n                <div className=\"collapse\" id=\"collapseExample\">\r\n                    <div className=\"card card-body\">\r\n                        <center style={{justifyContent:\"center\"}}>\r\n                            <RangeSlider\r\n                                upper={this.props.upper}\r\n                                lower={this.props.lower}\r\n                                max={this.props.max}\r\n                            />\r\n                        </center>\r\n                    </div>\r\n                </div>\r\n\r\n               <h1>\r\n                    Is you number greater than {this.getMid()}?\r\n                </h1> <br />\r\n                <button\r\n                    className='btn btn-lg btn-success m-2'\r\n                    onClick={this.props.yesButton}\r\n                >Yes</button>\r\n                <button\r\n                    className='btn btn-lg btn-danger m-2'\r\n                    onClick={this.props.noButton}\r\n                >No</button> <br/>\r\n            </div>\r\n        );\r\n    }\r\n    getMid = () => {\r\n        const mid = Math.floor( (this.props.upper+this.props.lower)/2);\r\n        return mid;\r\n    }\r\n}\r\n\r\nexport default Guess;","import React, {Component} from 'react';\r\n\r\nclass Result extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className='display-3'>\r\n                    Your number is {this.props.res}\r\n                </span> <br />\r\n                <button\r\n                    className='btn btn-warning btn-lg'\r\n                    onClick={this.props.onRestart}\r\n                >\r\n                    Restart\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Result;","import React, {Component} from 'react';\r\nimport Guess from \"./guess\";\r\nimport Result from \"./result\";\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.upper !== this.props.lower &&\r\n                <Guess\r\n                    yesButton={this.props.yesButton}\r\n                    noButton={this.props.noButton}\r\n                    upper={this.props.upper}\r\n                    lower={this.props.lower}\r\n                    max={this.props.max}\r\n                />\r\n                }\r\n                {this.props.upper === this.props.lower &&\r\n                   <Result\r\n                       res={this.props.upper}\r\n                       onRestart={this.props.onRestart}\r\n                   />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Search;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Binary Search Game</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport EntryPoint from \"./entryPoint\";\r\nimport Search from \"./search\";\r\nimport Navbar from \"./navbar\";\r\n\r\nclass BinarySearch extends Component {\r\n    state={\r\n        upper:100,\r\n        lower:0,\r\n        max:100,\r\n        isRunning:false\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <br />\r\n                <br />\r\n                <br />\r\n            <center>\r\n                {!this.state.isRunning &&\r\n                <EntryPoint\r\n                    startGame={this.handleStartGame}\r\n                    upper={this.state.upper}\r\n                    setUpper={this.handleSetUpper}\r\n                /> }\r\n                {this.state.isRunning &&\r\n                <Search\r\n                    yesButton={this.handleYes}\r\n                    noButton={this.handleNo}\r\n                    upper={this.state.upper}\r\n                    lower={this.state.lower}\r\n                    max={this.state.max}\r\n                    onRestart={this.handleRestart}\r\n                />\r\n                }\r\n            </center>\r\n            </div>\r\n        );\r\n    }\r\n    handleStartGame = () =>{\r\n        this.setState({isRunning:true});\r\n    }\r\n    handleRestart = () =>{\r\n        this.setState({isRunning:false,upper:100,lower:0});\r\n    }\r\n    handleYes = () =>{\r\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\r\n        this.setState({lower:mid+1});\r\n    }\r\n    handleNo = () =>{\r\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\r\n        this.setState({upper:mid});\r\n    }\r\n    handleSetUpper = (up) =>{\r\n        let val = parseInt(up);\r\n        if( val<=0 ){\r\n            val = 100;\r\n        }\r\n        this.setState({upper:val,max:val});\r\n    }\r\n}\r\n\r\nexport default BinarySearch;","import React, {Component} from 'react';\r\nimport './style.css';\r\nclass Rect extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='rect'\r\n                style={{height:this.props.rect.width,\r\n                    border: this.checkBorder(),\r\n                    background:this.checkColor(),\r\n                    margin:this.props.marg\r\n\r\n\r\n                }}\r\n            >\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    checkColor = () => {\r\n        if( this.props.rect.isSorted ){\r\n            return \"green\";\r\n        } else if( this.props.rect.isSorting ){\r\n            return \"orange\";\r\n        } else if( this.props.rect.isLeft ){\r\n            return \"red\";\r\n        } else if(this.props.rect.isRight){\r\n            return \"purple\";\r\n        }else{\r\n            return \"#ADD8E6\";\r\n        }\r\n    }\r\n    checkBorder = () =>{\r\n        if( this.props.rect.isRange ){\r\n            return \"0px solid black\";\r\n        } else{\r\n            return \"0px\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Rect;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\n\r\nclass Rects extends Component {\r\n    render() {\r\n        let margin = 5;\r\n        if( this.props.rects.length>50 ){\r\n            margin=1;\r\n        }\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-end\">\r\n                {this.props.rects.map( (rect,rectidx)=>{\r\n                    return (\r\n                        <Rect\r\n                            marg={margin}\r\n                            key={rectidx}\r\n                            rect={rect}\r\n                        />\r\n                    );\r\n                } )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rects;","let values = [];\r\nexport default function mergeSort(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n   // console.log( \"fdsfsd\",sz );\r\n    sz = sz-1;\r\n    mergeS(rects,0,sz);\r\n    return values;\r\n}\r\n\r\nfunction merge(rects, l, m, r){\r\n  //  console.log(l,\" \",r);\r\n    let n1 = m-l+1;\r\n    let n2 = r-m;\r\n\r\n    const L = rects.slice(l, m+1);\r\n    const R = rects.slice(m+1,r+1);\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = l;\r\n    while(i<n1 && j<n2){\r\n        if( L[i].width <= R[j].width ){\r\n            rects[k] = L[i];\r\n            i++;\r\n        } else{\r\n            rects[k] = R[j];\r\n            j++;\r\n        }\r\n        k++;\r\n    }\r\n    while (i < n1) {\r\n        rects[k] = L[i];\r\n        i++;\r\n        k++;\r\n    }\r\n    while (j < n2) {\r\n        rects[k] = R[j];\r\n        j++;\r\n        k++;\r\n    }\r\n\r\n}\r\n\r\nfunction mergeS(rects,l,r){\r\n\r\n    if( l>=r ) return;\r\n    let m = l+ (r-l)/2;\r\n    m = Math.floor(m);\r\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\r\n    mergeS(rects,l,m);\r\n    mergeS(rects,m+1,r);\r\n    merge(rects,l,m,r);\r\n    let rectsCopy = rects.slice(l,r+1);\r\n    let value = {\r\n        left:l,\r\n        right:r,\r\n        mid:m,\r\n        val:rectsCopy\r\n    }\r\n    values.push(value);\r\n}","let values = [];\r\nexport default function HeapSort(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n   // sz = sz-1;\r\n    heapSort(rects,sz);\r\n    return values;\r\n}\r\nfunction heapify(rects,n,i){\r\n    let largest = i; // Initialize largest as root\r\n    let l = 2 * i + 1; // left = 2*i + 1\r\n    let r = 2 * i + 2; // right = 2*i + 2\r\n\r\n    // If left child is larger than root\r\n    if (l < n && rects[l].width > rects[largest].width)\r\n        largest = l;\r\n\r\n    // If right child is larger than largest so far\r\n    if (r < n && rects[r].width > rects[largest].width)\r\n        largest = r;\r\n\r\n    // If largest is not root\r\n    if (largest != i) {\r\n        let temp = rects[i];\r\n        rects[i] = rects[largest];\r\n        rects[largest] = temp;\r\n        let value = {\r\n            left:i,\r\n            right:largest,\r\n            sorted: false\r\n        }\r\n        values.push(value);\r\n        // Recursively heapify the affected sub-tree\r\n        heapify(rects, n, largest);\r\n    }\r\n}\r\nfunction heapSort(rects,n){\r\n    for(let i = Math.floor(n/2)-1;i>=0;i--){\r\n      //  console.log(\"heap \",n,\" \",i);\r\n        heapify(rects,n,i);\r\n    }\r\n    for (let i = n-1 ; i > 0; i--) {\r\n        // Move current root to end\r\n        let temp = rects[i];\r\n        rects[i] = rects[0];\r\n        rects[0] = temp;\r\n        let value = {\r\n            left:i,\r\n            right:0,\r\n            sorted:true\r\n        }\r\n        values.push(value);\r\n        // call max heapify on the reduced heap\r\n        heapify(rects, i, 0);\r\n    }\r\n}\r\n","let values = [];\r\n\r\nexport function quickSortRecursive(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n    // console.log( \"fdsfsd\",sz );\r\n    sz = sz-1;\r\n    quick(rects,0,sz);\r\n    return values;\r\n}\r\n\r\n\r\nfunction getPartition(rects, left, right){\r\n    values.push({\r\n        left,\r\n        right,\r\n        swap:false,\r\n        changedRange:true,\r\n    })\r\n    let pivot = rects[right].width\r\n    let it = left-1;\r\n    for(var j=left;j<=right-1;j++){\r\n        if( rects[j].width< pivot){\r\n            it++;\r\n            if( it!==j ){\r\n                // swap(rects[it],rects[j];\r\n                const rect1 = {...rects[it]};\r\n                const rect2 = {...rects[j]};\r\n                rects[it] = rect2;\r\n                rects[j] = rect1;\r\n                values.push({\r\n                    left:it,\r\n                    right:j,\r\n                    swap:true,\r\n                    changedRange:false,\r\n                })\r\n            }\r\n        }\r\n    }\r\n    if( it+1!==right ){\r\n        const rect1 = {...rects[it+1]};\r\n        const rect2 = {...rects[right]};\r\n        rects[it+1] = rect2;\r\n        rects[right] = rect1;\r\n        values.push({\r\n            left:it+1,\r\n            right:right,\r\n            swap:true,\r\n            changedRange:false,\r\n        })\r\n    }\r\n    return it+1;\r\n}\r\nfunction quick(rects,left,right){\r\n    if( left>=right ) return ;\r\n    const partition = getPartition(rects,left,right);\r\n    quick(rects,left,partition-1);\r\n    quick(rects,partition+1,right);\r\n}","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Recursive Sorting Visualizer</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                            <span style={{color:\"white\"}}>\r\n                                Home\r\n                            </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onCountChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n               // marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.disable}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('0');\r\n    const [state, setState] = React.useState({\r\n        pos: props.pos,\r\n    });\r\n    const handleChange = (event) => {\r\n        console.log(state.pos);\r\n        setAge(event.target.value);\r\n        props.onAlgoChanged(state.pos,event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ml-2 mr-2\">\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={0} style={{selected:true}} >Merge Sort</MenuItem>\r\n                    <MenuItem value={1} style={{selected:true}} >Heap Sort</MenuItem>\r\n                    <MenuItem value={2} style={{selected:true}} >Quick Sort</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 300 + theme.spacing(3) * 2,\r\n    },\r\n    margin: {\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n\r\n    return (\r\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nconst AirbnbSlider = withStyles({\r\n    root: {\r\n        color: '#3a8589',\r\n        height: 3,\r\n        padding: '13px 0',\r\n    },\r\n    thumb: {\r\n        height: 27,\r\n        width: 27,\r\n        backgroundColor: '#fff',\r\n        border: '1px solid currentColor',\r\n        marginTop: -12,\r\n        marginLeft: -13,\r\n        boxShadow: '#ebebeb 0 2px 2px',\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: '#ccc 0 2px 3px 1px',\r\n        },\r\n        '& .bar': {\r\n            // display: inline-block !important;\r\n            height: 9,\r\n            width: 1,\r\n            backgroundColor: 'currentColor',\r\n            marginLeft: 1,\r\n            marginRight: 1,\r\n        },\r\n    },\r\n    active: {},\r\n    track: {\r\n        height: 3,\r\n    },\r\n    rail: {\r\n        color: '#ffffff',\r\n        opacity: 1,\r\n        height: 3,\r\n    },\r\n})(Slider);\r\n\r\nfunction AirbnbThumbComponent(props) {\r\n    return (\r\n        <span {...props}>\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n    </span>\r\n    );\r\n}\r\n\r\nexport default function CustomizedSlider() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography gutterBottom>Airbnb</Typography>\r\n            <AirbnbSlider\r\n                ThumbComponent={AirbnbThumbComponent}\r\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\r\n                defaultValue={[20, 40]}\r\n                valueLabelDisplay=\"on\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\n\r\nconst CSlider = withStyles({\r\n    root: {\r\n       // color: \"#ffffff\",\r\n        height: 3,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"#fff\",\r\n        //color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\n\r\nexport default function RangeSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([20, 37]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    const handleCommit = (event, newValue) => {\r\n        console.log(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CSlider\r\n                disabled={props.disable}\r\n                value={value}\r\n                onChange={handleChange}\r\n                onChangeCommitted={handleCommit}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                valueLabelDisplay=\"off\"\r\n            />\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Value range\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport CustomizedSlider from \"./airBnbSlider\";\r\nimport RangeSlider from \"./doubleSlider\";\r\nimport SwitchLabels from \"./formControlLabel\";\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-secondary m-2'\r\n                    onClick={this.props.onRandomize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Randomize\r\n                </button>\r\n\r\n                <RangeSlider\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={20}\r\n                    min={10}\r\n                    max={100}\r\n                    step={10}\r\n                    title=\"Numbers\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={50}\r\n                    min={10}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                    disable={false}\r\n                />\r\n                <SimpleSelect\r\n                    pos={0}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                />\r\n                <button\r\n                    className='btn btn-warning btn-lg '\r\n                    onClick={this.props.onViusalize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\nimport Rects from \"./rects\";\r\nimport mergeSort from '../algorithms/mergeSort';\r\nimport heapSort from \"../algorithms/heapSort\";\r\nimport {quickSortRecursive} from \"../algorithms/quickSortRecursive\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\n\r\nclass RecursiveSort extends Component {\r\n    state = {\r\n        count: 20,\r\n        rects: [],\r\n        speed: 50,\r\n        isRunning: false,\r\n        algo: 0\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    componentDidMount() {\r\n        var rects = getInitialRects(this.state.count);\r\n        this.setState({rects});\r\n        /* var rects2 = rects.slice();\r\n         console.log(rects2);\r\n         rects = mergeSort(rects);\r\n         console.log(rects);*/\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar/>\r\n                <Menu\r\n                    disable={this.state.isRunning}\r\n                    onViusalize={this.handleSort}\r\n                    onRandomize={this.handleRandomize}\r\n                    onRefresh={this.handleRefresh}\r\n                    onCountChange={this.handleCountChange}\r\n                    onAlgoChanged={this.handleAlgoChanged}\r\n                    onSpeedChange={this.handleSpeedChanged}\r\n                />\r\n                <div className=' justify-content-center'>\r\n                    <Rects\r\n                        rects={this.state.rects}\r\n                    />\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    handleRandomize = () => {\r\n        const rect = getInitialRects(this.state.count);\r\n        this.setState({rects: rect});\r\n    }\r\n    handleRefresh = () => {\r\n        const rects = this.state.rects;\r\n        for (let i = 0; i < rects.length; i++) {\r\n            const rect = {...rects[i], isSorted: false, isSorting: false}\r\n            rects[i] = rect;\r\n        }\r\n        this.setState({rects});\r\n    }\r\n    handleCountChange = (val) => {\r\n        this.setState({count: val});\r\n        this.handleRandomize();\r\n    }\r\n    handleAlgoChanged = (pos, val) => {\r\n        if (pos === 0) {\r\n            console.log(\"sup 0\");\r\n            this.setState({algo: val});\r\n        }\r\n    }\r\n    handleSpeedChanged = (val) => {\r\n        const speed = (110 - val);\r\n        this.setState({speed});\r\n    }\r\n\r\n    handleSort = () => {\r\n\r\n        this.setState({isRunning: true});\r\n        let steps;\r\n        let rects2;\r\n        switch (this.state.algo) {\r\n\r\n            case 0:\r\n                steps = mergeSort(this.state.rects);\r\n                this.handleMerge(steps);\r\n                break;\r\n            case 1:\r\n                rects2 = this.state.rects.slice();\r\n                steps = heapSort(rects2);\r\n                this.handleHeap(steps);\r\n                break;\r\n            case 2:\r\n                rects2 = this.state.rects.slice();\r\n                steps = quickSortRecursive(rects2);\r\n                this.handleQuick(steps);\r\n                break;\r\n            default:\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleQuick = async (steps) =>{\r\n        this.setState({isRunning: true});\r\n        let prevRect = this.state.rects;\r\n        for (let j = 0; j < this.state.count; j++) {\r\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\r\n        }\r\n        this.setState({rects: prevRect});\r\n        let hasChanged = -1;\r\n        let changed;\r\n        for(let i=0;i<steps.length;i++){\r\n            let step = steps[i];\r\n            if( hasChanged!==-1 ){\r\n                let {left,right} = changed;\r\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: false,isRight:false,isRange:false};\r\n                prevRect[right] = {...prevRect[right], isLeft: false,isSorting: false,isRight:false,isRange:false};\r\n            }\r\n            if( step.changedRange ){\r\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n                let {left,right} = step;\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false};\r\n                }\r\n                for (let j = left; j <=right; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:true,isRange:true};\r\n                }\r\n                this.setState({rects: prevRect});\r\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false};\r\n                }\r\n            }else if(step.swap){\r\n                let {left,right} = step;\r\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: true,isRight:false,isRange:false};\r\n                prevRect[right] = {...prevRect[right], isLeft: true,isSorting: false,isRight:false,isRange:false};\r\n                let temp = prevRect[left];\r\n                prevRect[left] = prevRect[right];\r\n                prevRect[right] = temp;\r\n                hasChanged = 1;\r\n                changed = step;\r\n            }\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);\r\n            if (i === steps.length - 1) {\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: false,isRange:false};\r\n                }\r\n                this.setState({rects: prevRect});\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: true,isRange:false};\r\n                    this.setState({rects: prevRect});\r\n                    await sleep(10);\r\n                }\r\n                this.setState({isRunning: false,rects: prevRect});\r\n            }\r\n        }\r\n    }\r\n    handleHeap = async (steps) =>{\r\n        this.setState({isRunning: true});\r\n        let prevRect = this.state.rects;\r\n        for (let j = 0; j < this.state.count; j++) {\r\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\r\n        }\r\n        this.setState({rects: prevRect});\r\n\r\n        for(let i = 0;i<steps.length;i++){\r\n            let step = steps[i];\r\n            //   console.log(step);\r\n            for (let i = 0; i < this.state.count; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\r\n            }\r\n            let {left,right,sorted} = step;\r\n            prevRect[left] = {...prevRect[left],isLeft:true};\r\n            prevRect[right] = {...prevRect[right],isRight:true};\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);\r\n            let temp = prevRect[left];\r\n            prevRect[left] = prevRect[right];\r\n            prevRect[right] = temp;\r\n            this.setState({rects: prevRect});\r\n            if( sorted ) prevRect[left] = {...prevRect[left],isSorted: true};\r\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n            if (i === steps.length - 1) {\r\n\r\n                for (let i = 0; i < this.state.count; i++) {\r\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\r\n                    this.setState({rects: prevRect});\r\n                    await sleep(this.state.speed);\r\n                }\r\n                this.setState({isRunning: false,rects: prevRect});\r\n            }\r\n        }\r\n    }\r\n    handleMerge = async (steps) => {\r\n        this.setState({isRunning1: true});\r\n\r\n        const {speed} = this.state;\r\n\r\n        let prevRect = this.state.rects;\r\n        for (let j = 0; j < this.state.count; j++) {\r\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\r\n        }\r\n        this.setState({rects: prevRect});\r\n        await sleep(this.state.speed);\r\n      //  console.log(\"steps \", steps.length);\r\n        for (let ii = 0; ii < steps.length; ii++) {\r\n            let step = steps[ii];\r\n            for (let i = 0; i < this.state.count; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\r\n            }\r\n           // console.log(step.left,\" \",step.mid,\" \",step.right);\r\n            for (let i = step.left; i <= step.mid; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: true,isSorting: false};\r\n            }\r\n            for (let i = step.mid + 1; i <= step.right; i++) {\r\n                prevRect[i] = {...prevRect[i], isRight: true,isLeft:false,isSorting: false};\r\n            }\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n          //  console.log(step);\r\n            for(let i= step.left;i<=step.right;i++){\r\n                prevRect[i] = {...prevRect[i],width:step.val[i-step.left].width,isSorting: true };\r\n                this.setState({rects: prevRect});\r\n                await sleep(this.state.speed);\r\n            }\r\n\r\n            if (ii === steps.length - 1) {\r\n\r\n                for (let i = 0; i < this.state.count; i++) {\r\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\r\n                    this.setState({rects: prevRect});\r\n                    await sleep(this.state.speed);\r\n                }\r\n                this.setState({isRunning: false});\r\n            }\r\n\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);\r\n            prevRect = this.state.rects;\r\n          /*  for (let i = 0; i < this.state.count; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: false};\r\n            }*/\r\n            this.setState({rects: prevRect});\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst getInitialRects = (tot) => {\r\n    const rects = [];\r\n    for (let i = 0; i < tot; i++) {\r\n        rects.push(getRect());\r\n    }\r\n    return rects;\r\n}\r\nconst getRect = () => {\r\n    return {\r\n        width: Math.floor(Math.random() * 200) + 50,\r\n        isSorted: false,\r\n        isSorting: false,\r\n        isLeft: false,\r\n        isRight: false\r\n    }\r\n}\r\n\r\nexport default RecursiveSort;","import React, {Component} from 'react';\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport Pathfinder from \"./pathfinderComponents/pathfinder\";\nimport Home from \"./homeComponents/home\";\nimport Seive from \"./primeComponents/seive\";\nimport Sort from \"./sortComponents/sort\";\nimport Queen from \"./queenComponents/queen\";\nimport ConvexHull from \"./convexHullComponents/convexHull\";\nimport BinarySearch from \"./binarySearchComponent/binarySearch\";\nimport RecursiveSort from \"./recursiveSortComponents/recursiveSort\";\nclass App extends Component {\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        console.log(window.innerHeight,\"  \",window.innerWidth);\n    }\n\n    render() {\n        return (\n            <Router basename='/'>\n                <Switch>\n                    <Route path='/pathfinder'  component={Pathfinder}/>\n                    <Route path='/prime' component={Seive}/>\n                    <Route path='/sort' component={Sort}/>\n                    <Route path='/nqueen' component={Queen}/>\n                    <Route path='/convexhull' component={ConvexHull}/>\n                    <Route path='/binarysearch' component={BinarySearch}/>\n                    <Route path='/recursivesort' component={RecursiveSort}/>\n                    <Route path='/' component={Home}/>\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
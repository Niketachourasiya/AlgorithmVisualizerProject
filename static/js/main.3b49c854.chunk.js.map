{"version":3,"sources":["helpers/array_helpers.js","TrialPathFinder/firebaseConfig.js","pathfinderComponents/node.jsx","pathfinderComponents/grid.jsx","pathfinderComponents/simpleSelect.jsx","pathfinderComponents/navbar.jsx","pathfinderComponents/menu.jsx","algorithms/dijkstra.js","algorithms/recursiveMaze.js","algorithms/bfs.jsx","algorithms/randomMaze.js","pathfinderComponents/pathfinder.jsx","homeComponents/navbar.jsx","homeComponents/greet.jsx","homeComponents/typewriter.jsx","homeComponents/images/graph.png","homeComponents/card.jsx","homeComponents/card2.jsx","homeComponents/images/primes.jpg","homeComponents/sort.png","homeComponents/images/queen.PNG","homeComponents/images/binaryTree.png","homeComponents/images/convexHull.png","homeComponents/images/15puzzle.PNG","homeComponents/images/sudoku.png","homeComponents/cards.jsx","homeComponents/cardDetails.js","homeComponents/footer.jsx","homeComponents/home.jsx","primeComponents/cell.jsx","primeComponents/cells.jsx","primeComponents/navbar.jsx","primeComponents/slider.jsx","primeComponents/simpleSelect.jsx","primeComponents/menu.jsx","primeComponents/seive.jsx","sortComponents/rect.jsx","sortComponents/rects.jsx","algorithms/sortingAlgorithms.js","algorithms/quickSort.js","sortComponents/navbar.jsx","sortComponents/slider.jsx","sortComponents/simpleSelect.jsx","sortComponents/airBnbSlider.jsx","sortComponents/doubleSlider.jsx","sortComponents/formControlLabel.jsx","sortComponents/menu.jsx","sortComponents/sort.js","queenComponents/queen.png","queenComponents/cell.jsx","queenComponents/cells.jsx","queenComponents/navbar.jsx","queenComponents/slider.jsx","queenComponents/menu.jsx","queenComponents/queen.jsx","convexHullComponents/timer.jsx","algorithms/grahamScan.js","convexHullComponents/canvas.jsx","convexHullComponents/navbar.jsx","convexHullComponents/slider.jsx","convexHullComponents/menu.jsx","convexHullComponents/convexHull.jsx","binarySearchComponent/entryPoint.jsx","binarySearchComponent/doubleSlider.jsx","binarySearchComponent/guess.jsx","binarySearchComponent/result.jsx","binarySearchComponent/search.jsx","binarySearchComponent/navbar.jsx","binarySearchComponent/binarySearch.jsx","recursiveSortComponents/rect.jsx","recursiveSortComponents/rects.jsx","algorithms/mergeSort.js","algorithms/heapSort.js","algorithms/quickSortRecursive.js","recursiveSortComponents/navbar.jsx","recursiveSortComponents/slider.jsx","recursiveSortComponents/simpleSelect.jsx","recursiveSortComponents/airBnbSlider.jsx","recursiveSortComponents/doubleSlider.jsx","recursiveSortComponents/menu.jsx","recursiveSortComponents/recursiveSort.js","15puzzleComponents/navbar.jsx","15puzzleComponents/puzzle.jsx","TrialPathFinder/node.jsx","TrialPathFinder/grid.jsx","TrialPathFinder/simpleSelect.jsx","TrialPathFinder/navbar.jsx","TrialPathFinder/menu.jsx","TrialPathFinder/pathfinder.jsx","App.js","reportWebVitals.js","index.js"],"names":["Array","prototype","swap","a","b","this","length","temp","range","n","from","x","i","matrix","y","rows","columns","map","row","slice","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","Node","static","props","col","onMouseDown","isVisited","onMouseEnter","onMouseUp","id","className","getClassName","node","isWall","isStartNode","isEndNode","ispathNode","Component","Grid","state","grid","rowidx","nodeidx","visitedNode","useStyles","makeStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","SimpleSelect","classes","React","useState","age","setAge","FormControl","InputLabel","Select","labelId","value","onChange","event","target","onAlgoChanged","items","item","itemidx","MenuItem","Navbar","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","to","style","color","Menu","algorithms","onMazeChanged","mazes","onClick","onCreateMaze","onVisualize","onClearPath","onClearBoard","dijkstra","startNode","finishNode","visitedNodesInOrder","distance","unvisitedNodes","nodes","push","getAllNodes","sortNodesByDistance","closestNode","shift","Infinity","updateUnvisitedNeighbors","sort","nodeA","nodeB","unvisitedNeighbors","neighbors","filter","neighbor","getUnvisitedNeighbors","previousNode","getNodesInShortestPathOrder","nodesInShortestPathOrder","currentNode","unshift","getMaze","board","pairs","newBoard","xx","yy","decideMaze","startRow","endRow","startCol","endCol","mid","Math","floor","random","start","end","recursiveMazeVertical","recursiveMazeHorizontal","bfsdfs","endNode","algo","list","nodesInOrder","pop","nodesToPush","getNeighbours","randomMaze","j","Pathfinder","handleMouseDown","newGrid","getNewGridWithWallToggled","setState","mouseIsPressed","handleMouseEnter","handleMouseUp","handleAlgoChanged","val","handleMazeChanged","maze","handleCreateMaze","setTimeout","document","getElementById","handleClearBoard","clearBoard","handleClearPath","clearPath","handleClick","visualizeDijkstra","width","window","innerWidth","height","innerHeight","max","console","log","getInitialGrid","textAlign","animateDijkstra","sleep","animateShortestPath","toggleVisit","newNode","totRow","totCol","currentRow","createNode","ms","Promise","resolve","href","Greet","TypeWriterC","options","strings","autoStart","loop","card","maxWidth","minHeight","borderRadius","boxShadow","media","actionArea","padding","transition","transform","expand","marginLeft","transitions","create","duration","shortest","expandOpen","ImgMediaCard2","expanded","setExpanded","CardActionArea","m","Card","route","CardMedia","component","alt","title","src","img","CardHeader","backgroundColor","action","IconButton","clsx","Collapse","in","timeout","unmountOnExit","CardContent","Typography","description","Cards","cards","getData","e","graph","primes","queen","convex","binSearch","sudoku","puzzle","Fragment","TextField","label","toLowerCase","includes","Footer","class","data-show-count","data-icon","Home","Cell","getClass","cell","isVisiting","isChecking","isPrime","Cells","cells","cellidx","root","valuetext","DiscreteSlider","gutterBottom","Slider","defaultValue","default","getAriaValueText","aria-labelledby","valueLabelDisplay","onChangeCommitted","innerText","num","parseInt","step","marks","min","isDisabled","selected","isClickable","cursor","onRefresh","disabled","onChangeSpeed","onChangeValues","Seive","number","isRunning","speed","changeSpeed","handleValueIncease","getCells","handleRefresh","startSeive","prime","changedCells","prevCheck","getNewCellPrimeToggled","getNewCellVisitingToggled","getNewCellCheckToggled","pos","newCells","newCell","createCell","Rect","checkColor","rect","isSorted","isSorting","background","marg","Rects","rects","rectidx","kk","selectionSort","arr","prevRect","min_idx","changed","recti","rectj","bubbleSort","insertionSort","key","values","quickSort","rects2","sz","quick","left","right","partition","pivot","it","rect1","rect2","getPartition","onCountChange","disable","withStyles","thumb","border","marginRight","active","track","rail","opacity","CSlider","RangeSlider","setValue","newValue","SwitchLabels","checkedA","FormGroup","FormControlLabel","control","Switch","checked","name","onDoubleChange","onRandomize","onSpeedChange","onViusalize","Sort","count","doubles","isRunning1","isRunning2","algo1","algo2","handleRandomize","getInitialRects","handleDouble","handleCountChange","handleSpeedChanged","handleSort","steps1","steps2","handleFirst","handleSecond","steps","tot","getRect","isAttacked","isCurrent","isPresent","isChecked","getStyled","onClear","Queen","handleStop","handleSpeedChange","handleQueenChange","getBoard","handleClear","handleTurnOff","turnOffAttack","startAlgo","queensAlgo","newBoard2","result","getChecked","onStop","N","cols","getCell","cw","c","ccw","Canvas","dots","lines","canvasWidth","canvasHeight","animateLine","canvas2","canvasLineRef","current","ctx2","getContext","clearRect","fillStyle","strokeStyle","onGoing","beginPath","add","lineWidth","moveTo","arc","PI","fill","closePath","lineTo","stroke","onTurnOff","myRef","createRef","redrawDots","prevProps","prevState","snapshot","ref","canvas","ctx","res","points","size","pointStart","pointEnd","up","down","convex_hull","getNewDots","getDot","rowpos","ConvexHull","isALgoLive","handleRefreshDots","handleAlgoStateChanged","isAlgoLive","handleVisualize","handleMoreDot","dot","EntryPoint","error","setUpper","validateNumbers","variant","upper","startGame","lower","useEffect","Guess","getMid","justifyContent","yesButton","noButton","Result","onRestart","Search","BinarySearch","handleStartGame","handleRestart","handleYes","handleNo","handleSetUpper","isLeft","isRight","checkBorder","isRange","mergeSort","mergeS","l","r","n1","n2","L","R","k","merge","HeapSort","heapify","sorted","heapSort","largest","quickSortRecursive","changedRange","RecursiveSort","handleMerge","handleHeap","handleQuick","hasChanged","ii","Puzzle","balsal","squares","times","easing","stt","db","getFirestore","TrialPath","docRef","doc","getDoc","docSnap","exists","data","handleQueryString","queryString","parse","location","search","startx","starty","updateDoc","collection","code","balance","earning","linkClicks","conversions2","tmstmp","Date","now","demo","App","basename","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.3b49c854.chunk.js","sourcesContent":["/**\r\n * A set of monkey-patched Array helpers.\r\n * Probably a bad idea to use these in a real production environment.\r\n * Monkey-patching is confusing to anyone seeing the project for the first\r\n * time (or coming back to it after a few weeks).\r\n * That said, this is a simple demo project, so what the hell, let's break\r\n * some rules =D\r\n */\r\n\r\n\r\n/**\r\n * Array.prototype.swap\r\n * Rearrange an array to swap the positions of two elements.\r\n * @param {Number} a - the index of the first element to swap.\r\n * @param {Number} b - the index of the second element to swap.\r\n * @returns {Array}\r\n * @example\r\n * // returns [ 'a', 'c', 'b' ]\r\n * [ 'a', 'b', 'c' ].swap(1, 2)\r\n */\r\nArray.prototype.swap = function (a, b) {\r\n    if ( b >= this.length || b < 0 ) return this;\r\n\r\n    // Temporary variable to hold data while we juggle\r\n    let temp = this[a];\r\n    this[a] = this[b];\r\n    this[b] = temp;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Array.range\r\n * Create a new array of length n, where the elements are numbers\r\n * from 0 to n - 1.\r\n * @param {Number} n - the desired length of the range.\r\n * @returns {Array}\r\n * @example\r\n * // returns [ 0, 1, 2, 3 ]\r\n * Array.range(4);\r\n */\r\nArray.range = n => Array.from(new Array(n), (x,i) => i);\r\n\r\n/**\r\n * Array.matrix\r\n * Create a new two-dimensional array, where each element is its own index.\r\n * @param {Number} x - the desired number of columns (possible x values)\r\n * @param {Number} y - the desired number of rows (possible y values)\r\n * @returns {Array}\r\n * @example\r\n * // returns [\r\n * //   [ 0, 1, 2 ],\r\n * //   [ 0, 1, 2 ]\r\n * // ]\r\n * Array.matrix(3, 2);\r\n */\r\nArray.matrix = (x, y) => {\r\n    const rows = Array.range(y);\r\n    const columns = Array.range(x);\r\n    return rows.map( (row, i) => columns.slice() );\r\n}\r\n","\r\nimport { initializeApp } from \"firebase/app\";\r\nimport { getAnalytics } from \"firebase/analytics\";\r\n\r\n\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\n// const firebaseConfig = {\r\n//     apiKey: \"AIzaSyCU_NVdKLmbJI2MBbGgMb-B8F6HB05viTY\",\r\n//     authDomain: \"projectdomkol.firebaseapp.com\",\r\n//     projectId: \"projectdomkol\",\r\n//     storageBucket: \"projectdomkol.appspot.com\",\r\n//     messagingSenderId: \"15045507180\",\r\n//     appId: \"1:15045507180:web:32300a51941e6f1adfc049\",\r\n//     measurementId: \"G-4Y56BQN85M\"\r\n// };\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyCI8zmsk2MsvvuwM7-Z9vsz8Q4CuWR8jPY\",\r\n    authDomain: \"fir-firebase-be3f8.firebaseapp.com\",\r\n    projectId: \"fir-firebase-be3f8\",\r\n    storageBucket: \"fir-firebase-be3f8.appspot.com\",\r\n    messagingSenderId: \"394720547590\",\r\n    appId: \"1:394720547590:web:72a6c75256c55feb82c487\",\r\n    measurementId: \"G-S371X8XMYD\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\n\r\n\r\n\r\n","import React, {Component} from 'react';\r\nimport './node.css'\r\nclass Node extends Component {\r\n    static = {\r\n        row: this.props.row,\r\n        col: this.props.col\r\n    }\r\n    render() {\r\n        const { row,col,isVisited, onMouseDown, onMouseEnter,onMouseUp } = this.props;\r\n        return (\r\n            <div\r\n                id = {`node-${this.props.row}-${this.props.col}`}\r\n                className={this.getClassName()}\r\n                onMouseDown={() => onMouseDown(row,col)}\r\n                onMouseEnter={() => onMouseEnter(row,col)}\r\n                onMouseUp={() => onMouseUp(row,col)}\r\n            />\r\n        );\r\n    }\r\n    getClassName(){\r\n        if(this.props.node.isWall === true){\r\n            return \"node node-wall\";\r\n        } else if( this.props.node.isStartNode === true ){\r\n            return \"node  node-start\";\r\n        } else if( this.props.node.isEndNode === true ){\r\n            return \"node  node-end\";\r\n        } else if(this.props.node.ispathNode){\r\n            return 'node node-shortest-path';\r\n        }else if( this.props.node.isVisited === true ){\r\n            return \"node  node-visited\";\r\n        } else{\r\n            return \"node\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Node;","import React, {Component} from 'react';\r\nimport Node from \"./node\";\r\nimport './grid.css';\r\nclass Grid extends Component {\r\n    state = {\r\n        grid: this.props.grid\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Grid\">\r\n                {this.props.grid.map((row, rowidx) => {\r\n                    return (\r\n                        <div key={rowidx}>\r\n                            {row.map((node, nodeidx) => {\r\n                                const {row, col, isWall, visitedNode, } = node;\r\n                                return (\r\n                                    <Node\r\n                                        key={nodeidx}\r\n                                        row={row}\r\n                                        col={col}\r\n                                        node={node}\r\n                                        isWall={isWall}\r\n                                        visitedNode={ visitedNode }\r\n                                        onMouseDown = {this.props.onMouseDown}\r\n                                        onMouseEnter = {this.props.onMouseEnter}\r\n                                        onMouseUp = {this.props.onMouseUp}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('0');\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n        props.onAlgoChanged(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    {props.items.map( (item,itemidx)=>{\r\n                        return(\r\n                            <MenuItem\r\n                                key={itemidx}\r\n                                value={itemidx}>{item}</MenuItem>\r\n                        );\r\n                    } )}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React, {Component} from 'react';\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Pathfinder</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport SimpleSelect from \"./simpleSelect\";\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\" >\r\n                <SimpleSelect\r\n                    onAlgoChanged = {this.props.onAlgoChanged}\r\n                    items={this.props.algorithms}\r\n                />\r\n                <SimpleSelect\r\n                    onAlgoChanged={this.props.onMazeChanged}\r\n                    items={this.props.mazes}\r\n                />\r\n                <button\r\n                    className='btn btn-lg btn-secondary m-2'\r\n                    onClick={this.props.onCreateMaze}>\r\n                    Create Maze\r\n                </button>\r\n                <button\r\n                    onClick={this.props.onVisualize}\r\n                    className=\"btn btn-warning btn-lg\"\r\n                >Visualize</button>\r\n                <button\r\n                    onClick={this.props.onClearPath}\r\n                    className='btn btn-danger btn-lg m-2'>Clear Path</button>\r\n                <button\r\n                    onClick={this.props.onClearBoard}\r\n                    className='btn btn-danger btn-lg m-2'>Clear Board</button>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","// Performs Dijkstra's algorithm; returns *all* nodes in the order\r\n// in which they were visited. Also makes nodes point back to their\r\n// previous node, effectively allowing us to compute the shortest path\r\n// by backtracking from the finish node.\r\nexport function dijkstra(grid, startNode, finishNode) {\r\n  const visitedNodesInOrder = [];\r\n  startNode.distance = 0;\r\n  const unvisitedNodes = getAllNodes(grid);\r\n  while (!!unvisitedNodes.length) {\r\n    sortNodesByDistance(unvisitedNodes);\r\n    const closestNode = unvisitedNodes.shift();\r\n    // If we encounter a wall, we skip it.\r\n    if (closestNode.isWall) continue;\r\n    // If the closest node is at a distance of infinity,\r\n    // we must be trapped and should therefore stop.\r\n    if (closestNode.distance === Infinity) return visitedNodesInOrder;\r\n    closestNode.isVisited = true;\r\n    visitedNodesInOrder.push(closestNode);\r\n    if (closestNode === finishNode) return visitedNodesInOrder;\r\n    updateUnvisitedNeighbors(closestNode, grid);\r\n  }\r\n}\r\n\r\nfunction sortNodesByDistance(unvisitedNodes) {\r\n  unvisitedNodes.sort((nodeA, nodeB) => nodeA.distance - nodeB.distance);\r\n}\r\n\r\nfunction updateUnvisitedNeighbors(node, grid) {\r\n  const unvisitedNeighbors = getUnvisitedNeighbors(node, grid);\r\n  for (const neighbor of unvisitedNeighbors) {\r\n    neighbor.distance = node.distance + 1;\r\n    neighbor.previousNode = node;\r\n  }\r\n}\r\n\r\nfunction getUnvisitedNeighbors(node, grid) {\r\n  const neighbors = [];\r\n  const {col, row} = node;\r\n  if (row > 0) neighbors.push(grid[row - 1][col]);\r\n  if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n  if (col > 0) neighbors.push(grid[row][col - 1]);\r\n  if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n  return neighbors.filter(neighbor => !neighbor.isVisited);\r\n}\r\n\r\nfunction getAllNodes(grid) {\r\n  const nodes = [];\r\n  for (const row of grid) {\r\n    for (const node of row) {\r\n      nodes.push(node);\r\n    }\r\n  }\r\n  return nodes;\r\n}\r\n\r\n// Backtracks from the finishNode to find the shortest path.\r\n// Only works when called *after* the dijkstra method above.\r\nexport function getNodesInShortestPathOrder(finishNode) {\r\n  const nodesInShortestPathOrder = [];\r\n  let currentNode = finishNode;\r\n  while (currentNode !== null) {\r\n    nodesInShortestPathOrder.unshift(currentNode);\r\n    currentNode = currentNode.previousNode;\r\n  }\r\n  return nodesInShortestPathOrder;\r\n}\r\n","export function getMaze(board,row,col){\r\n    const pairs = [];\r\n    let newBoard = board.slice();\r\n    for( let i = 0;i <col;i++){\r\n        newBoard[0][i].isWall = true;\r\n        pairs.push({\r\n            xx:0,\r\n            yy:i\r\n        });\r\n    }\r\n    for( let i = 0;i <row;i++){\r\n        newBoard[i][col-1].isWall = true;\r\n        pairs.push({\r\n            xx:i,\r\n            yy:col-1\r\n        });\r\n    }\r\n    for( let i = col-1;i>=0;i-- ){\r\n        newBoard[row-1][i].isWall = true;\r\n        pairs.push({\r\n            xx:row-1,\r\n            yy:i\r\n        });\r\n    }\r\n    for(let i = row-1;i>=0;i--){\r\n        newBoard[i][0].isWall = true;\r\n        pairs.push({\r\n            xx:i,\r\n            yy:0\r\n        });\r\n    }\r\n    decideMaze(pairs,newBoard,1,row-2,1,col-2);\r\n    //console.log(\"here\");\r\n    return pairs;\r\n}\r\nlet val = 0;\r\n\r\nfunction decideMaze(pairs,board,startRow,endRow,startCol,endCol) {\r\n    //console.log(\"count\");\r\n    val++;\r\n\r\n    if( ((endRow-startRow) <=1) && ((endCol - startCol) <=1) ){\r\n        return;\r\n    }\r\n\r\n     if( (endCol - startCol) > (endRow - startRow) ){\r\n        recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol);\r\n    } else{\r\n        recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol);\r\n    }\r\n}\r\nfunction recursiveMazeVertical(pairs,board,startRow,endRow,startCol,endCol){\r\n    let mid = Math.floor((endCol+startCol)/2);\r\n    let random = Math.floor(Math.random() * (endRow-startRow+1)) + startRow;\r\n    //console.log( \"row \",random,\" \",startRow,\" \",endRow );\r\n    let start = startRow;\r\n    if( !board[startRow-1][mid].isWall ){\r\n        random = start;\r\n        start++;\r\n    }\r\n    let end = endRow;\r\n    if( !board[endRow+1][mid].isWall ){\r\n        random = end;\r\n        end--;\r\n    }\r\n    for(let i = start;i<=end;i++){\r\n        if( i!==random ){\r\n            board[i][mid].isWall = true;\r\n            pairs.push({\r\n                xx:i,\r\n                yy:mid\r\n            });\r\n        }\r\n    }\r\n    decideMaze(pairs,board,startRow,endRow,startCol,mid-1);\r\n    decideMaze(pairs,board,startRow,endRow,mid+1,endCol);\r\n}\r\nfunction recursiveMazeHorizontal(pairs,board,startRow,endRow,startCol,endCol){\r\n    let mid = Math.floor((endRow+startRow)/2);\r\n  //  console.log(\"mid: \",mid);\r\n    let random = Math.floor(Math.random() * (endCol-startCol+1)) + startCol;\r\n    let start = startCol;\r\n    if( !board[mid][startCol-1].isWall ){\r\n        random = start;\r\n        start++;\r\n    }\r\n    let end = endCol;\r\n    if( !board[mid][endCol+1].isWall ){\r\n        random = end;\r\n        end--;\r\n    }\r\n    for(let i = start;i<=end;i++){\r\n        if( i!==random ){\r\n            board[mid][i].isWall = true;\r\n            pairs.push({\r\n                xx:mid,\r\n                yy:i\r\n            });\r\n        }\r\n    }\r\n    decideMaze(pairs,board,startRow,mid-1,startCol,endCol);\r\n    decideMaze(pairs,board,mid+1,endRow,startCol,endCol);\r\n\r\n}","export function bfsdfs(grid,startNode,endNode,algo){\r\n    var list = [];\r\n    const nodesInOrder = [];\r\n    nodesInOrder.push(startNode);\r\n    list.push(startNode);\r\n    startNode.isVisited = true;\r\n    while(!!list.length){\r\n        const currentNode = (algo === \"bfs\" ? list.shift():list.pop());\r\n        nodesInOrder.push(currentNode);\r\n        if( currentNode === endNode ) return nodesInOrder;\r\n        if( algo === \"dfs\" ) currentNode.isVisited = true;\r\n        const nodesToPush = getNeighbours(grid,currentNode);\r\n        for( const node of nodesToPush ){\r\n            if(algo === \"bfs\"){\r\n                node.isVisited = true;\r\n            }\r\n            node.previousNode = currentNode;\r\n            list.push(node);\r\n\r\n        }\r\n    }\r\n    return nodesInOrder;\r\n}\r\n\r\nfunction getNeighbours(grid,node){\r\n    const neighbors = [];\r\n    const {col, row} = node;\r\n   // console.log(node);\r\n\r\n    if (col > 0) neighbors.push(grid[row][col - 1]);\r\n    if (row > 0) neighbors.push(grid[row - 1][col]);\r\n    if (row < grid.length - 1) neighbors.push(grid[row + 1][col]);\r\n    if (col < grid[0].length - 1) neighbors.push(grid[row][col + 1]);\r\n    return neighbors.filter(neighbor => (!neighbor.isVisited && !neighbor.isWall ));\r\n}","export function randomMaze(board,row,col){\r\n    let newBoard = board.slice();\r\n    const pairs = [];\r\n    for(let i = 0;i<row;i++){\r\n        for( let j = 0;j <col;j++){\r\n            const random = Math.floor(Math.random()*100)+10;\r\n            if( random%4 === 0 ){\r\n                newBoard[i][j].isWall = true;\r\n                pairs.push({\r\n                    xx:i,\r\n                    yy:j\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return pairs;\r\n}","import React, {Component, Fragment} from 'react';\r\nimport Grid from \"./grid\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\nimport {dijkstra,getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\r\nimport {getMaze} from \"../algorithms/recursiveMaze\";\r\nimport {bfsdfs} from \"../algorithms/bfs\";\r\nimport {randomMaze} from \"../algorithms/randomMaze\";\r\n\r\nclass Pathfinder extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            grid:[],\r\n            mouseIsPressed:false,\r\n            algorithms:[\r\n                \"Dijsktra\",\"BFS\",\"DFS\"\r\n            ],\r\n            algo:0,\r\n            mazes:[\r\n                \"Recursive division\",\"Random\",\"Recursive Horizontal bias(NA)\",\"Recursive Vertical bias(NA)\"\r\n            ],\r\n            maze:0\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        const row = Math.max(Math.floor(height/25)-7,10);\r\n        const col = Math.floor(width/25);\r\n        const startNode = {\r\n            row:4,\r\n            col:4\r\n        };\r\n        const endNode = {\r\n            row: row-5,\r\n            col: col-5\r\n        }\r\n        console.log( endNode.row );\r\n        const grid = getInitialGrid(row,col);\r\n        grid[startNode.row][startNode.col].isStartNode = true;\r\n        grid[row-5][col-5].isEndNode = true;\r\n        this.setState({grid,row,col,startNode,endNode});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Navbar/>\r\n\r\n                <Menu\r\n                    onAlgoChanged = {this.handleAlgoChanged}\r\n                    onVisualize = {this.handleClick}\r\n                    algorithms={this.state.algorithms}\r\n                    mazes={this.state.mazes}\r\n                    onMazeChanged={this.handleMazeChanged}\r\n                    onCreateMaze={this.handleCreateMaze}\r\n                    onClearBoard={this.handleClearBoard}\r\n                    onClearPath={this.handleClearPath}\r\n                />\r\n                <span style={{margin: 2}}/>\r\n                <div style={{textAlign:\"center\"}} >\r\n                    <Grid\r\n                        grid={this.state.grid}\r\n                        onMouseDown={this.handleMouseDown}\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    handleMouseDown = (row, col) => {\r\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\r\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n            this.setState({grid:newGrid});\r\n        }\r\n        this.setState({mouseIsPressed: true});\r\n    }\r\n\r\n    handleMouseEnter = (row, col) => {\r\n        if (this.state.mouseIsPressed === false) return;\r\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\r\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n            this.setState({grid:newGrid});\r\n        }\r\n    }\r\n\r\n    handleMouseUp = (row,col) => {\r\n        this.setState({mouseIsPressed: false});\r\n    }\r\n\r\n    handleAlgoChanged = (val) =>{\r\n        this.setState({algo:val});\r\n    }\r\n\r\n    handleMazeChanged = (val)=>{\r\n        this.setState({maze:val});\r\n    }\r\n\r\n    handleCreateMaze = () =>{\r\n        let pairs;\r\n        switch (this.state.maze){\r\n            case 1:\r\n                pairs= randomMaze(this.state.grid,this.state.row,this.state.col);\r\n                break;\r\n            default:\r\n                pairs= getMaze(this.state.grid,this.state.row,this.state.col);\r\n        }\r\n        const {startNode,endNode} = this.state;\r\n        for( let i = 0;i<pairs.length;i++ ){\r\n            setTimeout(()=>{\r\n                if( i === pairs.length-1 ){\r\n                   // this.setState({grid:this.state.grid});\r\n                    const grid = this.state.grid;\r\n                    grid[ startNode.row ][startNode.col]={...grid[ startNode.row ][startNode.col],isWall: false};\r\n                    grid[endNode.row][endNode.col]={...grid[endNode.row][endNode.col],isWall: false};\r\n                    this.setState({grid});\r\n                }\r\n                if((pairs[i].xx!==startNode.row || pairs[i].yy!==startNode.col) && (pairs[i].xx!==endNode.row || pairs[i].yy!==endNode.col) ){\r\n                    document.getElementById(`node-${pairs[i].xx}-${pairs[i].yy}`).className = \"node node-wall\";\r\n                }\r\n            },i*20);\r\n        }\r\n    }\r\n    handleClearBoard = ()=>{\r\n        const {grid,row,col} = this.state;\r\n        this.setState({grid:clearBoard(grid,row,col)});\r\n    }\r\n    handleClearPath = () =>{\r\n        const {grid,row,col} = this.state;\r\n        this.setState({grid:clearPath(grid,row,col)});\r\n    }\r\n    handleClick = () =>{\r\n      /*  for(let i = 0;i<20;i++){\r\n            for(let j = 0; j<50;j++){\r\n                document.getElementById(`node-${i}-${j}`).className = \"node\";\r\n            }\r\n        }*/\r\n        this.visualizeDijkstra();\r\n        /*for(let i = 0;i<this.state.row;i++){\r\n            for(let j = 0; j<this.state.col;j++){\r\n                setTimeout(()=>{\r\n                    const newGrid = toggleVisit(this.state.grid,i,j);\r\n                    this.setState({grid:newGrid});\r\n                    //document.getElementById(`node-${i}-${j}`).className = \"node node-visited\";\r\n                },100*(i+j)+j);\r\n            }\r\n        }*/\r\n    }\r\n\r\n    visualizeDijkstra() {\r\n        const {grid} = this.state;\r\n        const startNode = grid[this.state.startNode.row][this.state.startNode.col];\r\n        const finishNode = grid[this.state.endNode.row][this.state.endNode.col];\r\n        let visitedNodesInOrder;\r\n        switch (this.state.algo){\r\n            case 0:\r\n                visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\r\n                break;\r\n            case 1:\r\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"bfs\");\r\n                break;\r\n            default:\r\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"dfs\");\r\n        }\r\n        const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n        this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n    }\r\n    async animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n\r\n            if (i === visitedNodesInOrder.length) {\r\n              //  setTimeout(() => {\r\n                    await sleep(100);\r\n                    await this.animateShortestPath(nodesInShortestPathOrder);\r\n\r\n              //  }, 10 * (i+10));\r\n                return;\r\n            }\r\n           // setTimeout(() => {\r\n                const node = visitedNodesInOrder[i];\r\n                const newGrid = toggleVisit(this.state.grid,node.row,node.col);\r\n                //this.setState({grid:newGrid});\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                    'node node-visited';\r\n                await sleep(10);\r\n           // }, 10 * i);\r\n        }\r\n    }\r\n\r\n    async animateShortestPath(nodesInShortestPathOrder) {\r\n        const grid = this.state.grid;\r\n        const newGrid = grid.slice();\r\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n         //   setTimeout(() => {\r\n\r\n                const node = nodesInShortestPathOrder[i];\r\n                const newNode = {...newGrid[node.row][node.col],ispathNode:true};\r\n                newGrid[node.row][node.col] = newNode;\r\n                if( i === nodesInShortestPathOrder.length-1 ){\r\n                    this.setState({grid:newGrid});\r\n                }\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                    'node node-shortest-path';\r\n                await sleep(50);\r\n            //}, 50 * i);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst clearPath = (grid,row,col)=>{\r\n    const newGrid = grid.slice();\r\n    for(let i = 0;i < row ; i++){\r\n        for( let j = 0;j < col; j++){\r\n            const node = newGrid[i][j];\r\n            const newNode = {\r\n                ...node,\r\n                distance:Infinity,\r\n                visitedNode: false,\r\n                isVisited:false,\r\n                ispathNode:false,\r\n                previousNode:null\r\n\r\n            };\r\n            newGrid[i][j] = newNode;\r\n        }\r\n    }\r\n    return newGrid;\r\n}\r\nconst clearBoard = (grid,row,col)=>{\r\n    const newGrid = grid.slice();\r\n    for(let i = 0;i < row ; i++){\r\n        for( let j = 0;j < col; j++){\r\n            const node = newGrid[i][j];\r\n            const newNode = {\r\n                ...node,\r\n                isWall: false,\r\n                distance:Infinity,\r\n                visitedNode: false,\r\n                isVisited:false,\r\n                ispathNode:false,\r\n                previousNode:null\r\n\r\n            };\r\n            newGrid[i][j] = newNode;\r\n        }\r\n    }\r\n    return newGrid;\r\n}\r\n\r\nconst toggleVisit = (grid,row,col) =>{\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        visitedNode: !node.visitedNode\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n}\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        isWall: true//!node.isWall,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n};\r\nconst getInitialGrid = (totRow,totCol) => {\r\n    const grid = [];\r\n    for (let row = 0; row < totRow; row++) {\r\n        const currentRow = [];\r\n        for (let col = 0; col < totCol; col++) {\r\n            currentRow.push(createNode(row,col));\r\n        }\r\n        grid.push(currentRow);\r\n    }\r\n    return grid;\r\n}\r\n\r\nconst createNode = (row,col)=>{\r\n    return {\r\n        row,\r\n        col,\r\n        isWall: false,\r\n        isStartNode:false,\r\n        isEndNode:false,\r\n        distance:Infinity,\r\n        visitedNode: false,\r\n        isVisited:false,\r\n        ispathNode:false,\r\n        previousNode:null\r\n    };\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default Pathfinder;","import React, {Component} from 'react';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark \">\r\n                <a className=\"navbar-brand\" href=\"#\">Algorithm Visualizer</a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav mr-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"nav-link\" href=\"#\">About <span className=\"sr-only\">(current)</span></a>\r\n                        </li>\r\n\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport \"./style.css\"\r\nclass Greet extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"greet\">\r\n                <h1 className=\"display-3\">\r\n                    Algorithm Visualizer\r\n                </h1>\r\n                <hr className=\"dropdown-divider\"/>\r\n                <h1 className=\"display-5\">\r\n                    Visualize algorithms for a better understanding\r\n                </h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Greet;","import React, {Component} from 'react';\r\nimport Typewriter from \"typewriter-effect\";\r\nimport './style.css'\r\nclass TypeWriterC extends Component {\r\n    state = {\r\n\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"type display-3\">\r\n                <span className=\"badge badge-dark\">\r\n                <Typewriter\r\n                    options={{\r\n                        strings: ['Graph Algorithms', 'Sorting Algorithms',\"8 Queen\"],\r\n                        autoStart: true,\r\n                        loop: true,\r\n                    }}\r\n                />\r\n            </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TypeWriterC;","export default __webpack_public_path__ + \"static/media/graph.6e6849d5.png\";","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport \"./style.css\";\r\nimport \"./images/graph.png\";\r\nimport {ExpandMore} from \"@material-ui/icons\";\r\n\r\nconst useStyles = makeStyles({\r\n    card: {\r\n        minWidth: 350,\r\n        maxWidth:350,\r\n        minHeight:250,\r\n        borderRadius: 5,\r\n        '&:hover': {\r\n            boxShadow: `0 6px 12px 0 #000000\r\n                .rotate(-12)\r\n                .darken(0.2)\r\n                .fade(0.5)}`\r\n                ,\r\n        },\r\n    },\r\n    media: {\r\n        height: 140\r\n    },\r\n    actionArea: {\r\n        padding:15,\r\n        transition: '0.2s',\r\n        '&:hover': {\r\n            transform: 'scale(1.1)',\r\n\r\n        },\r\n    },\r\n});\r\n\r\nexport default function ImgMediaCard(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <CardActionArea className={classes.actionArea} m={20}>\r\n            <Card\r\n                className={classes.card}\r\n                >\r\n                <CardMedia\r\n                    component=\"img\"\r\n                    alt=\"Contemplative Reptile\"\r\n                    height=\"140\"\r\n                    src={props.card.img}\r\n                />\r\n                <CardContent>\r\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\"  >\r\n                        {props.card.title}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        {props.card.description}\r\n                    </Typography>\r\n                    <ExpandMore/>\r\n                </CardContent>\r\n            </Card>\r\n        </CardActionArea>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport clsx from 'clsx';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport \"./style.css\";\r\nimport \"./images/graph.png\";\r\nimport {ExpandMore} from \"@material-ui/icons\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    card: {\r\n        minWidth: 350,\r\n        maxWidth:350,\r\n        minHeight:200,\r\n        borderRadius: 5,\r\n        '&:hover': {\r\n            boxShadow: `0 6px 12px 0 #000000\r\n                .rotate(-12)\r\n                .darken(0.2)\r\n                .fade(0.5)}`\r\n                ,\r\n        },\r\n    },\r\n    media: {\r\n        height: 100\r\n    },\r\n    expand: {\r\n        transform: 'rotate(0deg)',\r\n        marginLeft: 'auto',\r\n        transition: theme.transitions.create('transform', {\r\n            duration: theme.transitions.duration.shortest,\r\n        }),\r\n    },\r\n    expandOpen: {\r\n        transform: 'rotate(180deg)',\r\n    },\r\n    actionArea: {\r\n        padding:15,\r\n        transition: '0.2s',\r\n        '&:hover': {\r\n            transform: 'scale(1.1)',\r\n\r\n        },\r\n    },\r\n}));\r\n\r\nexport default function ImgMediaCard2(props) {\r\n    const classes = useStyles();\r\n    const [expanded, setExpanded] = React.useState(false);\r\n\r\n    const handleExpandClick = () => {\r\n        setExpanded(!expanded);\r\n    };\r\n\r\n    return (\r\n        <CardActionArea className={classes.actionArea} m={20}>\r\n            <Card\r\n                className={classes.card}\r\n                >\r\n               <Link to={props.card.route}>\r\n                   <CardMedia\r\n                       component=\"img\"\r\n                       alt={props.card.title}\r\n                       height=\"150\"\r\n                       src={props.card.img}\r\n                   />\r\n               </Link>\r\n                <CardHeader\r\n                    title={props.card.title}\r\n                    style={{backgroundColor:\"whitesmoke\"}}\r\n                    action={\r\n                        <IconButton\r\n                            className={clsx(classes.expand, {\r\n                                [classes.expandOpen]: expanded,\r\n                            })}\r\n                            onClick={handleExpandClick}\r\n                            aria-expanded={expanded}\r\n                            aria-label=\"show more\"\r\n                        >\r\n                            <ExpandMoreIcon />\r\n                        </IconButton>\r\n                    }\r\n                />\r\n                <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\r\n                    <CardContent\r\n                        style={{backgroundColor:\"whitesmoke\"}}\r\n                    >\r\n                        <Typography>\r\n                            {props.card.description}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Collapse>\r\n            </Card>\r\n        </CardActionArea>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/primes.72a2f33f.jpg\";","export default __webpack_public_path__ + \"static/media/sort.117e08fc.png\";","export default __webpack_public_path__ + \"static/media/queen.b2332ba3.PNG\";","export default __webpack_public_path__ + \"static/media/binaryTree.6d8ce938.png\";","export default __webpack_public_path__ + \"static/media/convexHull.2720e7cd.png\";","export default __webpack_public_path__ + \"static/media/15puzzle.5f6e8f37.PNG\";","export default __webpack_public_path__ + \"static/media/sudoku.58363375.png\";","import React, {Component} from 'react';\r\nimport ImgMediaCard from \"./card\";\r\nimport ImgMediaCard2 from \"./card2\";\r\nimport \"./style.css\";\r\nimport {Link} from \"react-router-dom\";\r\nimport graph from \"./images/graph.png\";\r\nimport primes from \"./images/primes.jpg\"\r\nimport sort from \"./sort.png\"\r\nimport queen from './images/queen.PNG'\r\nimport binSearch from './images/binaryTree.png'\r\nimport {getDetails} from \"./cardDetails\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nclass Cards extends Component {\r\n\r\n    state = {\r\n        cards:[],\r\n        filter:\"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({cards:getDetails()});\r\n    }\r\n    getData = (e)=>{\r\n        console.log(e.target.value);\r\n        this.setState({filter:e.target.value});\r\n    }\r\n    render() {\r\n        return (\r\n           <React.Fragment>\r\n               <div className=\"d-flex justify-content-end Cards\">\r\n                   <TextField\r\n                       id=\"standard-basic\" label=\"Search\"\r\n                       color=\"secondary\"\r\n                       onChange={this.getData}\r\n                   />\r\n               </div>\r\n               <div className=\"d-flex flex-wrap justify-content-center Cards p-lg-5\" >\r\n                   {\r\n                       this.state.cards.filter((card) => card.title.toLowerCase().includes(this.state.filter.toLowerCase())||card.description.toLowerCase().includes(this.state.filter.toLowerCase())).map(card=>(\r\n                           <div>\r\n                               <ImgMediaCard2\r\n                                   className=\"d-flex flex-wrap\"\r\n                                   key={card.id}\r\n                                   card={card}/>\r\n                           </div>\r\n                       ))\r\n                   }\r\n\r\n               </div>\r\n           </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cards;\r\n/*\r\n<div>\r\n   <ImgMediaCard2\r\n       className=\"d-flex flex-wrap\"\r\n       key={card.id}\r\n       card={card}/>\r\n</div>\r\n */","import graph from \"./images/graph.png\";\r\nimport primes from \"./images/primes.jpg\";\r\nimport sort from \"./sort.png\";\r\nimport queen from \"./images/queen.PNG\";\r\nimport binSearch from \"./images/binaryTree.png\";\r\nimport convex from './images/convexHull.png';\r\nimport puzzle from './images/15puzzle.PNG';\r\nimport sudoku from './images/sudoku.png';\r\nexport function getDetails(){\r\n   return [\r\n       {\r\n           id:1,\r\n           title:\"Pathfinder\",\r\n           description:\"Visualize graph algorithms like dijkstra, BFS, DFS\",\r\n           route:\"/pathfinder\",\r\n           img:graph\r\n       },\r\n       {\r\n           id:2,\r\n           title:\"Prime Numbers\",\r\n           description:\"Visualize how Seive is better than brute force\",\r\n           route:\"/prime\",\r\n           img:primes\r\n       },\r\n       {\r\n           id:3,\r\n           title:\"Sorting Algorithm\",\r\n           description:\"Compare different sorting algorithms\",\r\n           route:\"/sort\",\r\n           img:sort\r\n       },\r\n       {\r\n           id:9,\r\n           title:\"Recursive Sorting\",\r\n           description:\"Compare different recursive sorting algorithms\",\r\n           route:\"/recursivesort\",\r\n           img:sort\r\n       },\r\n       {\r\n           id:4,\r\n           title:\"N Queen\",\r\n           description:\"The N queens puzzle is the problem of placing N chess queens on an N*N chessboard so that no two queens threaten each other\",\r\n           route:\"/nqueen\",\r\n           img:queen\r\n       },\r\n       {\r\n           id:5,\r\n           title:\"Convex Hull\",\r\n           description:\"The convex hull of a set of points is the smallest convex polygon that contains all the points of it\",\r\n           route:\"/convexhull\",\r\n           img:convex\r\n       },\r\n       {\r\n           id:7,\r\n           title:\"Binary Search\",\r\n           description:\"Binary search is an efficient algorithm for finding an item from a sorted list of item\",\r\n           route:\"/binarysearch\",\r\n           img:binSearch\r\n       },\r\n       {\r\n           id:6,\r\n           title:\"Sudoku\",\r\n           description:\"Coming soon...\",\r\n           route:\"/\",\r\n           img:sudoku\r\n       },\r\n\r\n       {\r\n           id:8,\r\n           title:\"15 Puzzle\",\r\n           description:\"The 15 puzzle is a sliding puzzle having 15 square tiles numbered 1–15 in a frame that is 4 tiles high and 4 tiles wide, leaving one unoccupied tile position\",\r\n           route:\"/15puzzle\",\r\n           img:puzzle\r\n       }\r\n\r\n   ]\r\n}","import React, {Component} from 'react';\r\nimport GitHubButton from 'react-github-btn'\r\nimport \"./style.css\";\r\nclass Footer extends Component {\r\n    render() {\r\n        return (\r\n            <footer class=\"page-footer font-small special-color-dark pt-4 \">\r\n\r\n                <div className='flex-wrap' style={{textAlign:\"center\"}}>\r\n                    <div className='m-2'><GitHubButton href=\"https://github.com/TamimEhsan\" data-show-count=\"true\" aria-label=\"Follow @TamimEhsan on GitHub\">Follow @TamimEhsan</GitHubButton></div>\r\n                    <GitHubButton href=\"https://github.com/TamimEhsan/Pathfinder-2.0\" data-icon=\"octicon-star\" data-show-count=\"true\" aria-label=\"Star TamimEhsan/Pathfinder-2.0 on GitHub\">Star</GitHubButton>\r\n                    &nbsp\r\n                    <GitHubButton href=\"https://github.com/TamimEhsan/Pathfinder-2.0/fork\" data-icon=\"octicon-repo-forked\" data-show-count=\"true\" aria-label=\"Fork TamimEhsan/Pathfinder-2.0 on GitHub\">Fork</GitHubButton>\r\n                    &nbsp\r\n                    <img src=\"https://visitor-badge.laobi.icu/badge?page_id=TamimEhsan.AlgorithmVisualizer\" alt=\"Hits\"/>\r\n                </div>\r\n\r\n                <div class=\"footer-copyright text-center py-3\">© 2020 Copyright:\r\n                    <a href=\"https://github.com/tamimehsan\" style={{color: \"#65b6f0\"}}> Tamim Ehsan</a>\r\n                </div>\r\n\r\n            </footer>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Footer;","import React, {Component} from 'react';\r\nimport Navbar from \"./navbar\";\r\nimport Greet from \"./greet\";\r\nimport TypeWriterC from \"./typewriter\";\r\nimport Cards from \"./cards\";\r\nimport Footer from \"./footer\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar/>\r\n                <Greet/>\r\n                <TypeWriterC/>\r\n                <Cards/>\r\n                <Footer/>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, {Component} from 'react';\r\nimport './cell.css';\r\nclass Cell extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.getClass()}>\r\n                <span >\r\n                    {this.props.cell.val}\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n    getClass = () =>{\r\n        const { val, isVisiting,isChecking,isPrime} = this.props.cell;\r\n        if(isPrime){\r\n            return \"cell cell-prime m-2\";\r\n        }else if( isVisiting ){\r\n            return \"cell cell-visiting m-2\";\r\n        } else if( isChecking ){\r\n            return \"cell cell-check m-2\";\r\n        } else{\r\n            return \"cell m-2\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Cell;","import React, {Component} from 'react';\r\nimport Cell from \"./cell\";\r\nimport './cells.css'\r\nclass Cells extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Cells\">\r\n                {this.props.cells.map( (cell,cellidx)=>{\r\n                    return (\r\n                        <Cell\r\n                            key={cellidx}\r\n                            cell={cell}\r\n                        />\r\n                    );\r\n                } )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cells;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Sieve</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n                marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.isDisabled}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('1');\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n        //props.onAlgoChanged(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ml-2 mr-2\">\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={1} style={{selected:true}} >Seive</MenuItem>\r\n                    <MenuItem value={2}>Brute Force(NA)</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\r\n                <SimpleSelect/>\r\n                <DiscreteSlider\r\n                    onChange={this.props.onChangeSpeed}\r\n                    title=\"speed\"\r\n                    marks={false}\r\n                    default={10}\r\n                    step={1}\r\n                    min={10}\r\n                    max={50}\r\n                    isDisabled={false}\r\n                />\r\n                <DiscreteSlider\r\n                    onChange={this.props.onChangeValues}\r\n                    title=\"Total Number\"\r\n                    marks={false}\r\n                    default={100}\r\n                    step={1}\r\n                    min={10}\r\n                    max={500}\r\n                    isDisabled={this.props.isDisabled}\r\n                />\r\n                <button className=\"btn btn-warning btn-lg m-2\" onClick={this.props.onVisualize} disabled={this.props.isDisabled} style={this.isClickable()}>Visualize</button>\r\n\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.isDisabled ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Cells from \"./cells\";\r\nimport Navbar from \"./navbar\";\r\nimport DiscreteSlider from \"./slider\";\r\nimport Menu from \"./menu\";\r\n\r\nclass Seive extends Component {\r\n    state = {\r\n        number: 100,\r\n        cells:[],\r\n        isRunning:false,\r\n        speed:500\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        const cells = getCells(this.state.number);\r\n        this.setState({cells});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Menu\r\n                    onChangeSpeed={this.changeSpeed}\r\n                    onChangeValues={this.handleValueIncease}\r\n                    onVisualize = {this.startSeive}\r\n                    onRefresh = {this.handleRefresh}\r\n                    isDisabled = {this.state.isRunning}\r\n                />\r\n                <Cells\r\n                    num={this.state.number}\r\n                    cells={this.state.cells}\r\n                />\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    changeSpeed = (speed) => {\r\n        //console.log(typeof speed);\r\n        this.setState({speed:600-speed*10});\r\n    }\r\n    handleValueIncease = (value) => {\r\n        this.setState({number:value});\r\n        this.setState({cells:getCells(value),isRunning:false});\r\n        console.log(value);\r\n    }\r\n    handleRefresh = () => {\r\n        this.setState({cells:getCells(this.state.number),isRunning:false});\r\n    }\r\n    startSeive = async () => {\r\n        const speed = this.state.speed;\r\n        this.setState({isRunning:true});\r\n        const prime = [];\r\n        for(let i = 0;i<=this.state.number;i++){\r\n            prime.push(1);\r\n        }\r\n        prime[0] = prime[1] = 0;\r\n        let changedCells = this.state.cells;\r\n        let prevCheck = -1;\r\n        let counter = 0;\r\n        for( let i = 2; i<=this.state.number;i++){\r\n            if( prime[i] === 1 ){\r\n             //   setTimeout(()=>{\r\n                    changedCells = getNewCellPrimeToggled(changedCells,i-1);\r\n                    this.setState({cells:changedCells});\r\n                //},counter*speed);\r\n                await sleep(this.state.speed);\r\n                counter++;\r\n                for(let j = i*i;j<=this.state.number;j+=i){\r\n                    //setTimeout(()=>{\r\n                        if( prevCheck!=-1 ){\r\n                            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\r\n                        }\r\n                        prevCheck = j-1;\r\n                        changedCells = getNewCellCheckToggled(changedCells,j-1);\r\n                        changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\r\n                        this.setState({cells:changedCells});\r\n                  //  },counter*speed);\r\n                    await sleep(this.state.speed);\r\n                    counter++;\r\n                    prime[j] = 0;\r\n                }\r\n            }\r\n        }\r\n      //  setTimeout(()=>{\r\n            changedCells = getNewCellVisitingToggled(changedCells,prevCheck);\r\n            this.setState({cells:changedCells,isRunning:false});\r\n       // },counter*speed);\r\n    }\r\n}\r\n\r\nconst getNewCellPrimeToggled = (cells,pos) =>{\r\n    const newCells = cells.slice();\r\n    const cell = newCells[pos];\r\n    const newCell = {\r\n        ...cell,\r\n        isPrime:true\r\n    }\r\n    newCells[pos] = newCell;\r\n    return newCells;\r\n}\r\n\r\nconst getNewCellVisitingToggled = (cells,pos)=>{\r\n    const newCells = cells.slice();\r\n    const cell = newCells[pos];\r\n    const newCell = {\r\n        ...cell,\r\n        isVisiting:!cell.isVisiting\r\n    }\r\n    newCells[pos] = newCell;\r\n    return newCells;\r\n}\r\n\r\nconst getNewCellCheckToggled = (cells,pos) =>{\r\n    const newCells = cells.slice();\r\n    const cell = newCells[pos];\r\n    const newCell = {\r\n        ...cell,\r\n        isChecking:true\r\n    }\r\n    newCells[pos] = newCell;\r\n    return newCells;\r\n}\r\n\r\nconst getCells = (rows)=>{\r\n    const cells = [];\r\n    for(let cell = 1;cell<=rows;cell++){\r\n        cells.push(createCell(cell))\r\n    }\r\n    return cells;\r\n}\r\nconst createCell = (val)=>{\r\n    return {\r\n        val,\r\n        isChecking:false,\r\n        isVisiting:false,\r\n        isPrime:false\r\n    };\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nexport default Seive;","import React, {Component} from 'react';\r\nimport './style.css';\r\nclass Rect extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='rect'\r\n                style={{height:this.props.rect.width,\r\n                    background:this.checkColor(),\r\n                    margin:this.props.marg,\r\n                    // float:'left',\r\n                    'vertical-align': 'middle'\r\n                }}\r\n            >\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    checkColor = () => {\r\n        if( this.props.rect.isSorted ){\r\n            return \"green\";\r\n        } else if( this.props.rect.isSorting ){\r\n            return \"red\";\r\n        } else{\r\n            return \"black\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Rect;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\nimport FlipMove from 'react-flip-move';\r\n\r\nclass Rects extends Component {\r\n    render() {\r\n        let margin = 5;\r\n        if( this.props.rects.length>50 ){\r\n            margin=1;\r\n        }\r\n        return (\r\n            <div>\r\n                <FlipMove\r\n                    className=\"d-flex justify-content-center align-items-end\"\r\n                    duration={this.props.speed}\r\n                    // easing=\"cubic-bezier(.12,.36,.14,1.2)\"\r\n                >\r\n                {this.props.rects.map( (rect,rectidx)=>{\r\n                    return (\r\n                        <Rect\r\n                            marg={margin}\r\n                            key={rect.kk}\r\n                            rect={rect}\r\n                        />\r\n                    );\r\n                } )}\r\n                </FlipMove>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rects;","export function bubbleSort2(rects ){\r\n    const pairs = [];\r\n    const num  = rects.length;\r\n    const prevRect = rects.slice();\r\n\r\n    for( let i = 0; i<num; i++ ){\r\n        for( let j = i+1;j<num;j++ ){\r\n            if( prevRect[i].width>prevRect[j].width ){\r\n                const recti = {...prevRect[i]};\r\n                const rectj = {...prevRect[j]};\r\n                prevRect[j] = recti;\r\n                prevRect[i] = rectj;\r\n                pairs.push( {\r\n                    xx:i,\r\n                    yy:j,\r\n                    changed:true\r\n                } );\r\n            } else{\r\n                pairs.push( {\r\n                    xx:i,\r\n                    yy:j,\r\n                    changed:false\r\n                });\r\n            }\r\n            if( j === num-1 ){\r\n                pairs.push( {\r\n                    xx:i,\r\n                    yy:i,\r\n                    changed:false\r\n                });\r\n            }\r\n        }\r\n    }\r\n    return pairs;\r\n}\r\n\r\nexport function selectionSort(arr) {\r\n    const pairs = [];\r\n    let n = arr.length;\r\n    const prevRect = arr.slice();\r\n    // One by one move boundary of unsorted subarray\r\n    for (let i = 0; i < n-1; i++)\r\n    {\r\n        let min_idx = i;\r\n        for (let j = i+1; j < n; j++){\r\n            pairs.push( {\r\n                xx:min_idx,\r\n                yy:j,\r\n                changed:false\r\n            } );\r\n            if (prevRect[j].width < prevRect[min_idx].width){\r\n                min_idx = j;\r\n            }\r\n        }\r\n\r\n        // Swap the found minimum element with the first\r\n        // element\r\n        const recti = {...prevRect[i]};\r\n        const rectj = {...prevRect[min_idx]};\r\n        prevRect[min_idx] = recti;\r\n        prevRect[i] = rectj;\r\n        pairs.push( {\r\n            xx:min_idx,\r\n            yy:i,\r\n            changed:true\r\n        } );\r\n        pairs.push( {\r\n            xx:i,\r\n            yy:i,\r\n            changed:false\r\n        });\r\n    }\r\n    pairs.push({\r\n            xx:n-1,\r\n            yy:n-1,\r\n            changed:false\r\n        }\r\n    )\r\n    return pairs;\r\n}\r\n\r\nexport function bubbleSort(arr){\r\n    const pairs= [];\r\n    let n = arr.length;\r\n    const prevRect = arr.slice();\r\n    for (let i = 0; i < n-1; i++){\r\n        for (let j = 0; j < n-i-1; j++){\r\n            if (prevRect[j].width > prevRect[j+1].width) {\r\n                // swap arr[j+1] and arr[j]\r\n                const recti = {...prevRect[j]};\r\n                const rectj = {...prevRect[j+1]};\r\n                prevRect[j+1] = recti;\r\n                prevRect[j] = rectj;\r\n                pairs.push( {\r\n                    xx:j,\r\n                    yy:j+1,\r\n                    changed:true\r\n                } );\r\n            } else{\r\n                pairs.push( {\r\n                    xx:j,\r\n                    yy:j+1,\r\n                    changed:false\r\n                } );\r\n            }\r\n            if( j === n-i-2 ){\r\n                pairs.push( {\r\n                    xx:n-i-1,\r\n                    yy:n-i-1,\r\n                    changed:false\r\n                } );\r\n            }\r\n        }\r\n    }\r\n    pairs.push({\r\n            xx:0,\r\n            yy:0,\r\n            changed:false\r\n        }\r\n    )\r\n    return pairs;\r\n}\r\n\r\nexport function insertionSort(arr){\r\n    const pairs = [];\r\n    let n = arr.length;\r\n    const prevRect = arr.slice();\r\n    for (let i = 1; i < n; ++i) {\r\n        let key = prevRect[i].width;\r\n        let j = i - 1;\r\n\r\n        while (j >= 0 && prevRect[j].width > key) {\r\n            const recti = {...prevRect[j]};\r\n            const rectj = {...prevRect[j+1]};\r\n            prevRect[j+1] = recti;\r\n            prevRect[j] = rectj;\r\n            pairs.push( {\r\n                xx:j,\r\n                yy:j+1,\r\n                changed:true\r\n            } );\r\n            j = j - 1;\r\n        }\r\n       // arr[j + 1] = arr[i];\r\n    }\r\n    for(let i=0;i<n;i++){\r\n        pairs.push({\r\n            xx:i,\r\n            yy:i,\r\n            changed:true\r\n        })\r\n    }\r\n    return pairs;\r\n}","let values = [];\r\n\r\nexport function quickSort(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n    // console.log( \"fdsfsd\",sz );\r\n    sz = sz-1;\r\n    quick(rects,0,sz);\r\n    for(var i=0;i<=sz;i++){\r\n        values.push({\r\n            xx:i,\r\n            yy:i,\r\n            changed:true\r\n        })\r\n    }\r\n    return values;\r\n}\r\n\r\n\r\nfunction getPartition(rects, left, right){\r\n    let pivot = rects[right].width\r\n    let it = left-1;\r\n    for(var j=left;j<=right-1;j++){\r\n        if( rects[j].width< pivot){\r\n            it++;\r\n            if( it!==j ){\r\n                // swap(rects[it],rects[j];\r\n                const rect1 = {...rects[it]};\r\n                const rect2 = {...rects[j]};\r\n                rects[it] = rect2;\r\n                rects[j] = rect1;\r\n                values.push({\r\n                    xx:it,\r\n                    yy:j,\r\n                    changed:true\r\n                })\r\n            }\r\n        }\r\n    }\r\n    if( it+1!==right ){\r\n        const rect1 = {...rects[it+1]};\r\n        const rect2 = {...rects[right]};\r\n        rects[it+1] = rect2;\r\n        rects[right] = rect1;\r\n        values.push({\r\n            xx:it+1,\r\n            yy:right,\r\n            changed:true\r\n        })\r\n    }\r\n    return it+1;\r\n}\r\nfunction quick(rects,left,right){\r\n    if( left>=right ) return ;\r\n    const partition = getPartition(rects,left,right);\r\n    quick(rects,left,partition-1);\r\n    quick(rects,partition+1,right);\r\n}","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Sorting Visualizer</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                            <span style={{color:\"white\"}}>\r\n                                Home\r\n                            </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onCountChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n               // marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.disable}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('0');\r\n    const [state, setState] = React.useState({\r\n        pos: props.pos,\r\n    });\r\n    const handleChange = (event) => {\r\n        console.log(state.pos);\r\n        setAge(event.target.value);\r\n        props.onAlgoChanged(state.pos,event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ml-2 mr-2\">\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={0} style={{selected:true}} >Bubble Sort</MenuItem>\r\n                    <MenuItem value={1}>Selection Sort</MenuItem>\r\n                    <MenuItem value={2}>Insertion Sort</MenuItem>\r\n                    <MenuItem value={3}>Quick Sort</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 300 + theme.spacing(3) * 2,\r\n    },\r\n    margin: {\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n\r\n    return (\r\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nconst AirbnbSlider = withStyles({\r\n    root: {\r\n        color: '#3a8589',\r\n        height: 3,\r\n        padding: '13px 0',\r\n    },\r\n    thumb: {\r\n        height: 27,\r\n        width: 27,\r\n        backgroundColor: '#fff',\r\n        border: '1px solid currentColor',\r\n        marginTop: -12,\r\n        marginLeft: -13,\r\n        boxShadow: '#ebebeb 0 2px 2px',\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: '#ccc 0 2px 3px 1px',\r\n        },\r\n        '& .bar': {\r\n            // display: inline-block !important;\r\n            height: 9,\r\n            width: 1,\r\n            backgroundColor: 'currentColor',\r\n            marginLeft: 1,\r\n            marginRight: 1,\r\n        },\r\n    },\r\n    active: {},\r\n    track: {\r\n        height: 3,\r\n    },\r\n    rail: {\r\n        color: '#ffffff',\r\n        opacity: 1,\r\n        height: 3,\r\n    },\r\n})(Slider);\r\n\r\nfunction AirbnbThumbComponent(props) {\r\n    return (\r\n        <span {...props}>\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n    </span>\r\n    );\r\n}\r\n\r\nexport default function CustomizedSlider() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography gutterBottom>Airbnb</Typography>\r\n            <AirbnbSlider\r\n                ThumbComponent={AirbnbThumbComponent}\r\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\r\n                defaultValue={[20, 40]}\r\n                valueLabelDisplay=\"on\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\n\r\nconst CSlider = withStyles({\r\n    root: {\r\n       // color: \"#ffffff\",\r\n        height: 3,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"#fff\",\r\n        //color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\n\r\nexport default function RangeSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([20, 37]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    const handleCommit = (event, newValue) => {\r\n        console.log(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CSlider\r\n                disabled={props.disable}\r\n                value={value}\r\n                onChange={handleChange}\r\n                onChangeCommitted={handleCommit}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                valueLabelDisplay=\"off\"\r\n            />\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Value range\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nexport default function SwitchLabels(props) {\r\n    const [state, setState] = React.useState({\r\n        checkedA: false,\r\n    });\r\n\r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n        props.onDoubleChange(event.target.checked);\r\n    };\r\n\r\n    return (\r\n        <FormGroup row>\r\n            <FormControlLabel\r\n                control={<Switch checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\r\n                label=\"Duo\"\r\n                disabled={props.disable}\r\n            />\r\n\r\n        </FormGroup>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport CustomizedSlider from \"./airBnbSlider\";\r\nimport RangeSlider from \"./doubleSlider\";\r\nimport SwitchLabels from \"./formControlLabel\";\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-secondary m-2'\r\n                    onClick={this.props.onRandomize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Randomize\r\n                </button>\r\n\r\n                <RangeSlider\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={20}\r\n                    min={10}\r\n                    max={100}\r\n                    step={10}\r\n                    title=\"Numbers\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={50}\r\n                    min={10}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                    disable={false}\r\n                />\r\n                <SimpleSelect\r\n                    pos={0}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                />\r\n                <SwitchLabels\r\n                    disable={this.props.disable}\r\n                    onDoubleChange={this.props.onDoubleChange}\r\n                />\r\n                <SimpleSelect\r\n                    pos={1}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                />\r\n                <button\r\n                    className='btn btn-warning btn-lg '\r\n                    onClick={this.props.onViusalize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\n\nimport Rects from \"./rects\";\nimport {bubbleSort,selectionSort,insertionSort} from \"../algorithms/sortingAlgorithms\";\nimport {quickSort} from \"../algorithms/quickSort\";\nimport Navbar from \"./navbar\";\nimport Menu from \"./menu\";\n\nclass Sort extends Component {\n  state = {\n      count:20,\n      rects: [],\n      rects2: [],\n      doubles:false,\n      speed:50,\n      isRunning:false,\n      isRunning1:false,\n      isRunning2:false,\n      algo1:0,\n      algo2:0\n  }\n\n  componentDidMount() {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n\n    render() {\n    return (\n        <React.Fragment>\n            <Navbar/>\n            <Menu\n                disable={this.state.isRunning}\n                onDoubleChange={this.handleDouble}\n                onViusalize={this.handleSort}\n                onRandomize={this.handleRandomize}\n                onRefresh={this.handleRefresh}\n                onCountChange={this.handleCountChange}\n                onAlgoChanged={this.handleAlgoChanged}\n                onSpeedChange={this.handleSpeedChanged}\n            />\n            <div className=' justify-content-center'>\n\n                <Rects\n                    speed={this.state.speed}\n                    rects={this.state.rects}\n                />\n                { this.state.doubles && <hr style={{width:\"90%\"}}/>}\n                { this.state.doubles &&\n                <Rects\n                    rects={this.state.rects2}\n                /> }\n            </div>\n        </React.Fragment>\n    );\n  }\n  handleRandomize = () => {\n      const rect = getInitialRects(this.state.count);\n      const rect2 = rect.slice();\n      this.setState({rects:rect,rects2:rect2});\n  }\n  handleRefresh = () =>{\n      const rects = this.state.rects;\n      for(let i=0;i<rects.length;i++){\n          const rect = {...rects[i],isSorted:false, isSorting:false}\n          rects[i] = rect;\n      }\n      const rects2 = rects.slice();\n      this.setState({rects,rects2});\n  }\n\n  handleDouble = (val) =>{\n      this.setState({doubles:val});\n  }\n  handleCountChange = (val) => {\n      this.setState({count:val});\n      this.handleRandomize();\n  }\n  handleAlgoChanged = (pos,val) =>{\n      if( pos === 0 ){\n          this.setState({algo1:val});\n      } else{\n          this.setState({algo2:val});\n      }\n  }\n  handleSpeedChanged = (val) =>{\n    const speed = (760-val*7.5);\n    this.setState({speed});\n  }\n  handleSort = () =>{\n\n      this.setState({isRunning:true});\n      let steps1;\n      switch (this.state.algo1){\n          case 0:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n          case 1:\n              steps1 = selectionSort(this.state.rects);\n              break;\n          case 2:\n              steps1 = insertionSort(this.state.rects);\n              break;\n          case 3:\n              steps1 = quickSort(this.state.rects2);\n              console.log(steps1)\n              break;\n          default:\n              steps1 = bubbleSort(this.state.rects);\n              break;\n      }\n      let steps2;\n      if( this.state.doubles ){\n\n          switch (this.state.algo2){\n              case 0:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n              case 1:\n                  steps2 = selectionSort(this.state.rects2);\n                  break;\n              case 2:\n                  steps2 = insertionSort(this.state.rects2);\n                  break;\n              case 3:\n                  steps2 = quickSort(this.state.rects2);\n                  break;\n              default:\n                  steps2 = bubbleSort(this.state.rects2);\n                  break;\n          }\n\n      }\n      this.handleFirst(steps1);\n      if( this.state.doubles ) this.handleSecond(steps2);\n  }\n  handleFirst = async (steps) =>{\n     // console.log(\"fsdfsdfsdfasdf\");\n      this.setState({isRunning1:true});\n\n     // const steps = bubbleSort(this.state.rects);\n    //  console.log(steps.length);\n      const prevRect = this.state.rects;\n      for(let i = 0;i<steps.length;i++){\n       //   setTimeout(()=>{\n              if( i!==0 ){\n                  prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                  prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n              }\n              if(steps[i].xx===steps[i].yy){\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n              }else if( steps[i].changed ){\n                  const recti = {...prevRect[steps[i].xx],isSorting:true};\n                  const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                  prevRect[steps[i].yy] = recti;\n                  prevRect[steps[i].xx] = rectj;\n              } else{\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n              }\n              if(i === steps.length-1){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n              }\n             /* if( i === (steps.length)-2 ){\n                  this.setState({isRunning1:false});\n                  if( this.state.isRunning2 === false ){\n                      this.setState({isRunning:false});\n                  }\n                  prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                  prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n              }*/\n              this.setState({rects:prevRect});\n              await sleep(this.state.speed);\n         // },i*speed);\n      }\n  }\n    handleSecond = async (steps) =>{\n        this.setState({isRunning2:true});\n        const prevRect = this.state.rects2;\n        for(let i = 0;i<steps.length;i++){\n         //   setTimeout(()=>{\n                if( i!==0 ){\n                    prevRect[steps[i-1].xx] = { ...prevRect[steps[i-1].xx],isSorting:false };\n                    prevRect[steps[i-1].yy] = { ...prevRect[steps[i-1].yy],isSorting:false };\n                }\n                if(steps[i].xx===steps[i].yy){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorted:true,isSorting:false};\n                }else if( steps[i].changed ){\n                    const recti = {...prevRect[steps[i].xx],isSorting:true};\n                    const rectj = {...prevRect[steps[i].yy],isSorting:true};\n                    prevRect[steps[i].yy] = recti;\n                    prevRect[steps[i].xx] = rectj;\n                } else{\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:true};\n                }\n                if( i === steps.length-1 ){\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }\n               /* if( i === (steps.length)-2 ){\n                    prevRect[steps[i].xx] = {...prevRect[steps[i].xx],isSorting:false,isSorted:true};\n                    prevRect[steps[i].yy] = {...prevRect[steps[i].yy],isSorting:false,isSorted:true};\n                    this.setState({isRunning2:false});\n                    if( this.state.isRunning1 === false ){\n                        this.setState({isRunning:false});\n                    }\n                }*/\n                this.setState({rects2:prevRect});\n                await sleep(this.state.speed);\n           // },i*speed);\n        }\n    }\n\n\n}\nfunction sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}\nconst getInitialRects = (tot) => {\n    const rects = [];\n    for(let i = 0;i<tot;i++){\n        rects.push(getRect(i));\n    }\n    return rects;\n}\nconst getRect = (kk) => {\n  return {\n      width: Math.floor(Math.random() * 200)+50,\n      isSorted:false,\n      isSorting:false,\n      kk:kk\n  }\n}\nexport default Sort;\n","export default __webpack_public_path__ + \"static/media/queen.a967028b.png\";","import React, {Component} from 'react';\r\nimport './style.css'\r\nimport queen from './queen.png';\r\nclass Cell extends Component {\r\n    render() {\r\n        return (\r\n            <div className={this.getClassName()} style={this.getStyled()}>\r\n                { this.props.cell.isPresent && <img src={queen} height='100px' style={{padding:\"25px\"}}/> }\r\n            </div>\r\n        );\r\n    }\r\n    getClassName = ()=>{\r\n        if(this.props.cell.isAttacked){\r\n            return \"boardCell attacked\";\r\n        } else if(this.props.cell.isCurrent){\r\n            return \"boardCell current\";\r\n        }else if(this.props.cell.isPresent){\r\n            return \"boardCell present\";\r\n        }else if(this.props.cell.isChecked){\r\n            return \"boardCell checked\";\r\n        } else{\r\n            return \"boardCell\";\r\n        }\r\n    }\r\n    getStyled = () =>{\r\n        if( (this.props.cell.row+this.props.cell.col)%2 === 0 ){\r\n            return {\r\n                backgroundColor:\"white\"\r\n            }\r\n        }else{\r\n            return {\r\n                backgroundColor:\"grey\"\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default Cell;","import React, {Component} from 'react';\r\nimport Cell from \"./cell\";\r\nimport './style.css';\r\nclass Cells extends Component {\r\n    render() {\r\n        return (\r\n            <div className='booard m-5' >\r\n                {this.props.board.map( (row,rowidx)=>{\r\n                    return(\r\n                        <div key={rowidx}>\r\n                            {row.map( (cell,cellidx)=>{\r\n                                return(\r\n                                    <Cell\r\n                                        key={cellidx}\r\n                                        cell={cell}/>\r\n                                );\r\n                            } )}\r\n                        </div>\r\n                    );\r\n                } )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cells;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">N Queen</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                            <span style={{color:\"white\"}}>\r\n                                Home\r\n                            </span>\r\n                    </Link>\r\n                </div>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onCountChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n               // marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.disable}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\n\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-secondary m-2'\r\n                    onClick={this.props.onClear}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Clear Board\r\n                </button>\r\n\r\n                <DiscreteSlider\r\n                    default={4}\r\n                    min={1}\r\n                    max={8}\r\n                    step={1}\r\n                    title=\"Grid size\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={50}\r\n                    min={1}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                />\r\n\r\n                <button\r\n                    className='btn btn-warning btn-lg '\r\n                    onClick={this.props.onViusalize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Cells from \"./cells\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\n\r\nclass Queen extends Component {\r\n    state={\r\n        board:[],\r\n        number:4,\r\n        speed:490,\r\n        isRunning:false\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    componentDidMount() {\r\n        const board = getBoard(this.state.number);\r\n       // board[3][3].isPresent = true;\r\n        this.setState({board});\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Menu\r\n                    onSpeedChange={this.handleSpeedChange}\r\n                    onCountChange={this.handleQueenChange}\r\n                    onViusalize={this.startAlgo}\r\n                    disable={this.state.isRunning}\r\n                    onClear={this.handleClear}\r\n                    onStop={this.handleStop}\r\n                />\r\n                <div style={{textAlign:\"Center\"}}>\r\n                    <Cells\r\n                        board={this.state.board}\r\n                    />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    handleStop =() =>{\r\n        this.setState({isRunning:false});\r\n    }\r\n\r\n    handleSpeedChange = (val)=>{\r\n        const speed = (100-val)*10;\r\n        this.setState({speed});\r\n    }\r\n    handleQueenChange = (number)=>{\r\n        this.setState({number});\r\n        const board = getBoard(this.state.number);\r\n        this.setState({board});\r\n    }\r\n    handleClear = () => {\r\n        const board = getBoard(this.state.number);\r\n        this.setState({board});\r\n    }\r\n    handleTurnOff =  () => {\r\n        const newBoard = turnOffAttack(this.state.board,this.state.number);\r\n        this.setState({board:newBoard});\r\n    }\r\n    startAlgo = async ()=>{\r\n        this.setState({isRunning:true});\r\n        const newBoard = this.state.board.slice();\r\n        await this.queensAlgo(newBoard,0);\r\n        const newBoard2 = turnOffAttack(this.state.board,this.state.number);\r\n        this.setState({board:newBoard2,isRunning:false});\r\n    }\r\n    queensAlgo =  async (board,col) => {\r\n\r\n        if( col>=this.state.number ){\r\n            return true;\r\n        }\r\n\r\n        let newBoard = board.slice();\r\n        for( let i = 0; i < this.state.number;i++ ){\r\n\r\n\r\n            newBoard = turnOffAttack(newBoard,this.state.number);\r\n            const result = getChecked(newBoard,i,col,this.state.number);\r\n            newBoard = result[0];\r\n\r\n            this.setState({board:newBoard});\r\n            await sleep(this.state.speed);\r\n            if( result[1] ){\r\n                const res = await this.queensAlgo(newBoard,col+1)\r\n                if( res === true){\r\n                    return true;\r\n                }\r\n                newBoard[i][col] = {...newBoard[i][col],isPresent:true,isCurrent:true};\r\n                this.setState({board:newBoard});\r\n                await sleep(this.state.speed);\r\n                newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\r\n                this.setState({board:newBoard});\r\n\r\n            }\r\n            newBoard[i][col] = {...newBoard[i][col],isPresent:false,isCurrent:false};\r\n            newBoard = turnOffAttack(newBoard,this.state.number);\r\n            this.setState({board:newBoard});\r\n            await sleep(this.state.speed);\r\n        }\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nexport default Queen;\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nconst turnOffAttack = (board,N) =>{\r\n    const newBoard = board.slice();\r\n    for( let i = 0;i<N; i++ ){\r\n        for( let j = 0;j<N;j++ ){\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:false, isAttacked:false,isCurrent:false};\r\n        }\r\n    }\r\n    return newBoard;\r\n}\r\n\r\nconst getChecked = (board,row,col,N) =>{\r\n    const newBoard = board.slice();\r\n    let pos = true;\r\n    // same col\r\n    for( let i = 0;i < N;i++ ){\r\n        if( newBoard[row][i].isPresent ){\r\n            newBoard[row][i] = {...newBoard[row][i],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[row][i] = {...newBoard[row][i],isChecked:true};\r\n        }\r\n    }\r\n    // same row\r\n    for( let i = 0;i < N;i++ ){\r\n        if( newBoard[i][col].isPresent ){\r\n            newBoard[i][col] = {...newBoard[i][col],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][col] = {...newBoard[i][col],isChecked:true};\r\n        }\r\n    }\r\n    for( let i = row,j = col; i >= 0 && j >= 0; i--, j--){\r\n        if( newBoard[i][j].isPresent ){\r\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\r\n        }\r\n    }\r\n    for( let i = row,j = col; i <N && j >= 0; i++, j--){\r\n        if( newBoard[i][j].isPresent ){\r\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\r\n        }\r\n    }\r\n    for( let i = row,j = col; i <N && j < N; i++, j++){\r\n        if( newBoard[i][j].isPresent ){\r\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\r\n        }\r\n    }\r\n    for( let i = row,j = col; i>=0 && j < N; i--, j++){\r\n        if( newBoard[i][j].isPresent ){\r\n            newBoard[i][j] = {...newBoard[i][j],isAttacked:true};\r\n            pos = false;\r\n        } else{\r\n            newBoard[i][j] = {...newBoard[i][j],isChecked:true};\r\n        }\r\n    }\r\n\r\n    newBoard[row][col] = {...newBoard[row][col],isPresent:true,isCurrent:true};\r\n\r\n    return [newBoard,pos];\r\n}\r\nconst getBoard = (N) =>{\r\n    const rows = [];\r\n    for( let i = 0;i<N;i++ ){\r\n        const cols = [];\r\n        for(let j =0;j<N;j++){\r\n            cols.push(getCell(i,j));\r\n        }\r\n        rows.push(cols);\r\n    }\r\n    return rows;\r\n}\r\n\r\nconst getCell = (row,col)=>{\r\n    return{\r\n        row,\r\n        col,\r\n        isPresent:false,\r\n        isChecked:false,\r\n        isAttacked:false,\r\n        isCurrent:false\r\n    }\r\n}","import React, {Component} from 'react';\r\n\r\nclass MyTimer extends Component {\r\n    state={\r\n        time:0,\r\n        going:false,\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if( prevProps.onGoing!==this.props.onGoing ){\r\n            this.setState({going:this.props.onGoing});\r\n            if( this.props.onGoing ){\r\n                this.startCount();\r\n            }\r\n        }\r\n    }\r\n    startCount = async () => {\r\n        while (this.props.onGoing){\r\n            this.setState({time:this.state.time+1});\r\n            if( this.state.time>10){\r\n                this.setState({time:0});\r\n                this.props.onStop();\r\n            }\r\n            await sleep(100);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>\r\n                    <span className='badge badge-danger'>\r\n                    {this.state.time}\r\n                </span>\r\n                </h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default MyTimer;","export function convex_hull(points){\r\n    if( points.size === 1 ){\r\n        return;\r\n    }\r\n    const pointStart = points[0];\r\n    const pointEnd = points[ points.length-1 ];\r\n    const up = [], down = [];\r\n    const pairs = [];\r\n    const lines=[];\r\n    up.push( pointStart);\r\n    down.push(pointStart);\r\n    for( let i = 1; i< points.length ;i++ ){\r\n        if( (i === (points.length - 1)) || cw( pointStart,points[i],pointEnd ) ){\r\n            while( up.length >=2 && !cw(up[up.length-2],up[up.length-1],points[i] ) ){\r\n                lines.push({\r\n                    from:up[up.length-2],\r\n                    to:up[up.length-1],\r\n                    add:false\r\n                });\r\n                up.pop();\r\n            }\r\n            up.push( points[i] );\r\n            lines.push({\r\n                from:up[up.length-2],\r\n                to:up[up.length-1],\r\n                add:true\r\n            })\r\n        }\r\n\r\n    }\r\n    for(let i = 0; i< points.length;i++){\r\n        if( (i === (points.length - 1)) || ccw( pointStart,points[i],pointEnd ) ){\r\n            while( down.length >=2 && !ccw(down[down.length-2],down[down.length-1],points[i] ) ){\r\n                lines.push({\r\n                    from:down[down.length-2],\r\n                    to:down[down.length-1],\r\n                    add:false\r\n                });\r\n                down.pop();\r\n            }\r\n            down.push( points[i] );\r\n            lines.push({\r\n                from:down[down.length-2],\r\n                to:down[down.length-1],\r\n                add:true\r\n            })\r\n        }\r\n    }\r\n\r\n    for (let i = 0; i < up.length; i++){\r\n        pairs.push(up[i]);\r\n    }\r\n    for (let i = down.length - 2; i > 0; i--) {\r\n        pairs.push(down[i]);\r\n    }\r\n    return [pairs,lines];\r\n}\r\n\r\nfunction cw(a, b, c) {\r\n    const f = a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy);\r\n    if( a.xx*(b.yy-c.yy)+b.xx*(c.yy-a.yy)+c.xx*(a.yy-b.yy) < 0 ){\r\n        return true;\r\n    } else{\r\n        return false;\r\n    }\r\n\r\n}\r\n\r\nfunction ccw(a, b, c){\r\n    if( a.xx * (b.yy - c.yy) + b.xx * (c.yy - a.yy) + c.xx * (a.yy - b.yy) > 0 ){\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n\r\n}","import React, {Component} from 'react';\r\nimport './style.css';\r\nimport {convex_hull} from \"../algorithms/grahamScan\";\r\nclass Canvas extends Component {\r\n    state={\r\n        dots:[],\r\n        lines:[],\r\n        canvasWidth:300,\r\n        canvasHeight:100\r\n    }\r\n    constructor(props) {\r\n        super(props);\r\n        this.setState({canvasWidth:window.innerWidth});\r\n        this.setState({canvasHeight:window.innerHeight-10});\r\n        console.log(window.innerWidth);\r\n        this.myRef = React.createRef();\r\n        this.canvasLineRef = React.createRef();\r\n    }\r\n    componentDidMount() {\r\n        this.redrawDots();\r\n       // console.log(this.state.canvasWidth);\r\n    }\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n\r\n        if( this.props.dots!==prevProps.dots ){\r\n            this.setState({dots:this.props.dots});\r\n            this.redrawDots();\r\n        }\r\n        if( this.props.onGoing!==prevProps.onGoing ){\r\n            if( this.props.onGoing === true ){\r\n                this.animateLine();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{textAlign:\"center\"}}>\r\n                <div className=\"containerz\">\r\n                    <canvas\r\n                        className='canvas'\r\n                        id='canvas1'\r\n                        style={{backgroundColor:\"whitesmoke\"}}\r\n                        ref={this.canvasLineRef} width={window.innerWidth} height={window.innerHeight-200} />\r\n                    <canvas\r\n                        className='canvas'\r\n                        id='canvas2'\r\n                        // style={{backgroundColor:\"grey\"}}\r\n                        ref={this.myRef} width={window.innerWidth} height={window.innerHeight-200}\r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    redrawDots(){\r\n        const canvas = this.myRef.current;\r\n        const ctx = canvas.getContext(\"2d\");\r\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n        ctx.fillStyle = 'lightgrey';\r\n        ctx.strokeStyle = 'black';\r\n        for( let i = 0; i<this.props.dots.length;i++ ){\r\n            ctx.beginPath();\r\n           // ctx.moveTo(this.props.dots[i].xx, this.props.dots[i].yy)\r\n            ctx.arc(this.props.dots[i].xx, this.props.dots[i].yy, 10, 0, 2*Math.PI);\r\n            ctx.fill();\r\n            ctx.lineWidth = 2;\r\n            ctx.stroke();\r\n            ctx.closePath();\r\n\r\n        }\r\n        ctx.closePath();\r\n        const res = convex_hull(this.props.dots);\r\n\r\n        const cansvas2 = this.canvasLineRef.current;\r\n        const ctx2 = cansvas2.getContext('2d');\r\n        ctx2.clearRect(0, 0, canvas.width, canvas.height);\r\n        this.setState({lines:res[1]});\r\n\r\n    }\r\n\r\n    animateLine = async () => {\r\n        const {lines} = this.state;\r\n        const canvas2 = this.canvasLineRef.current;\r\n        const ctx2 = canvas2.getContext('2d');\r\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n        ctx2.fillStyle = '#ffffff';\r\n        ctx2.strokeStyle = '#ffffff';\r\n        for( let i = 0; i<lines.length;i++ ){\r\n            if( !this.props.onGoing ){\r\n                ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\r\n                return;\r\n            }\r\n            ctx2.beginPath();\r\n            if( lines[i].add ){\r\n                ctx2.beginPath();\r\n                ctx2.lineWidth = 2;\r\n                ctx2.fillStyle = 'black';\r\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\r\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 14, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.beginPath();\r\n                ctx2.fillStyle = 'red';\r\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\r\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 14, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.beginPath();\r\n                ctx2.lineWidth = 2;\r\n                ctx2.strokeStyle = '#000000';\r\n            } else{\r\n                ctx2.beginPath();\r\n                ctx2.fillStyle = 'whitesmoke';\r\n                ctx2.moveTo(lines[i].from.xx, lines[i].from.yy)\r\n                ctx2.arc(lines[i].from.xx, lines[i].from.yy, 15, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.beginPath();\r\n                ctx2.fillStyle = 'whitesmoke';\r\n                ctx2.moveTo(lines[i].to.xx, lines[i].to.yy)\r\n                ctx2.arc(lines[i].to.xx, lines[i].to.yy, 15, 0, 2*Math.PI);\r\n                ctx2.fill();\r\n                ctx2.closePath();\r\n\r\n                ctx2.lineWidth = 4;\r\n                ctx2.strokeStyle = 'whitesmoke';\r\n            }\r\n\r\n            ctx2.moveTo(lines[i].from.xx, lines[i].from.yy);\r\n            ctx2.lineTo(lines[i].to.xx, lines[i].to.yy);\r\n            ctx2.stroke();\r\n            ctx2.closePath();\r\n            if( i === lines.length - 1 ){\r\n                this.props.onTurnOff();\r\n            }\r\n            await sleep(this.props.speed);\r\n        }\r\n    }\r\n\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\nexport default Canvas;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Convex Hull</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 300,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n                marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.isDisabled}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button className=\"btn btn-primary btn-lg m-2\" onClick={this.props.onRefresh} disabled={this.props.isDisabled} style={this.isClickable()}>Refresh</button>\r\n                <DiscreteSlider\r\n                    onChange={this.props.onChangeSpeed}\r\n                    title=\"speed\"\r\n                    marks={false}\r\n                    default={10}\r\n                    step={1}\r\n                    min={10}\r\n                    max={50}\r\n                    isDisabled={false}\r\n                />\r\n                <DiscreteSlider\r\n                    onChange={this.props.onChangeValues}\r\n                    title=\"Total Number\"\r\n                    marks={false}\r\n                    default={50}\r\n                    step={1}\r\n                    min={10}\r\n                    max={200}\r\n                    isDisabled={this.props.isDisabled}\r\n                />\r\n                <button\r\n                    className=\"btn btn-warning btn-lg m-2\"\r\n                    onClick={this.props.onVisualize}\r\n                    disabled={this.props.isDisabled}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize Graham Scan\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.isDisabled ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport MyTimer from \"./timer\";\r\nimport Canvas from \"./canvas\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\nclass ConvexHull extends Component {\r\n    state={\r\n        dots:[],\r\n        lines:[],\r\n        isALgoLive:false,\r\n        width:100,\r\n        height:100,\r\n        isRunning:false,\r\n        speed:100,\r\n        number:50\r\n\r\n    }\r\n    constructor() {\r\n        super();\r\n        this.setState({width:window.innerWidth,height:window.innerHeight-200});\r\n    }\r\n    componentDidMount() {\r\n        this.setState({width:window.innerWidth,height:window.innerHeight-100});\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <Menu\r\n                    onRefresh={this.handleRefreshDots}\r\n                    onVisualize={this.handleVisualize}\r\n                    onChangeSpeed={this.changeSpeed}\r\n                    onChangeValues={this.handleValueIncease}\r\n                />\r\n                <Canvas\r\n                    width={this.state.width}\r\n                    height={this.state.height}\r\n                    dots={this.state.dots}\r\n                    onTurnOff={this.handleTurnOff}\r\n                    onGoing={this.state.isRunning}\r\n                    speed={this.state.speed}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n    handleValueIncease = (value) => {\r\n        this.setState({number:value});\r\n        this.handleRefreshDots();\r\n    }\r\n    changeSpeed = (speed) => {\r\n        //console.log(typeof speed);\r\n        this.setState({speed:600-speed*10});\r\n    }\r\n    handleAlgoStateChanged = (val) => {\r\n        this.setState({isAlgoLive:val});\r\n    }\r\n    handleVisualize = () =>{\r\n        this.setState({isRunning:true});\r\n    }\r\n    handleTurnOff = () =>{\r\n        this.setState({onGoing:false});\r\n    }\r\n    handleRefreshDots = () =>{\r\n        this.setState({isRunning:false});\r\n        this.setState({dots:getNewDots(this.state.number)});\r\n    }\r\n\r\n    handleMoreDot = () =>{\r\n        const row = Math.floor(Math.random()*400)+10;\r\n        const col = Math.floor(Math.random()*400)+10;\r\n        const dot = {\r\n            row:row,\r\n            col:col\r\n        }\r\n        const dots = this.state.dots;\r\n        dots.push(dot);\r\n        this.setState(dots);\r\n    }\r\n}\r\nfunction getNewDots(number){\r\n    const dots= [];\r\n    for(let  i = 0; i<number;i++){\r\n        dots.push(getDot());\r\n    }\r\n    dots.sort( (a,b) => {\r\n       if( a.xx!==b.xx ){\r\n           return a.xx-b.xx;\r\n       } else{\r\n           return a.yy - b.yy;\r\n       }\r\n    } );\r\n    return dots;\r\n}\r\nfunction getDot(){\r\n    const width = window.innerWidth-50;\r\n    const height = window.innerHeight-250;\r\n    const rowpos = Math.floor( Math.random()*height )+25;\r\n    const colpos = Math.floor(Math.random()*width)+25;\r\n    return {\r\n        xx:colpos,\r\n        yy:rowpos,\r\n    }\r\n}\r\nexport default ConvexHull;","import React, {Component} from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nclass EntryPoint extends Component {\r\n    state={\r\n        error:false\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <TextField\r\n                    error={this.state.error}\r\n                    id=\"standard-error-helper-text\"\r\n                    label=\"Upper Number\"\r\n                    type=\"number\"\r\n                    variant=\"outlined\"\r\n                    onChange={this.getData}\r\n                /> <br /><br />\r\n                <h1>\r\n                    Guess a number between 0 and {this.props.upper}\r\n                </h1>\r\n                <br />\r\n                <button\r\n                    className='btn btn-warning btn-lg'\r\n                    onClick={this.props.startGame}\r\n                >\r\n                    Start the game\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n    getData = (e)=>{\r\n        if( e.target.value!== \"\" ){\r\n            console.log(e.target.value);\r\n            this.props.setUpper(e.target.value);\r\n        }\r\n        else{\r\n            this.props.setUpper(100)\r\n        }\r\n    }\r\n    validateNumbers = () =>{\r\n\r\n    }\r\n}\r\n\r\nexport default EntryPoint;","import React, {useEffect} from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 400,\r\n    },\r\n});\r\n\r\n\r\nconst CSlider = withStyles({\r\n    root: {\r\n       // color: \"#ffffff\",\r\n        height: 3,\r\n        width: 400,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"#fff\",\r\n        //color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\n\r\nexport default function RangeSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([props.lower, props.upper]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    const handleCommit = (event, newValue) => {\r\n        console.log(newValue);\r\n    };\r\n    useEffect(()=>{\r\n        setValue([props.lower,props.upper]);\r\n    },[props.lower,props.upper])\r\n    return (\r\n        <div className={classes.root}>\r\n            <CSlider\r\n                disabled\r\n                value={value}\r\n                onChange={handleChange}\r\n                onChangeCommitted={handleCommit}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                valueLabelDisplay=\"on\"\r\n                max={props.max}\r\n            />\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Binary Search\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport RangeSlider from \"./doubleSlider\";\r\n\r\nclass Guess extends Component {\r\n    render() {\r\n        return (\r\n            <div >\r\n\r\n                <p>\r\n\r\n                    <button className=\"btn btn-secondary btn-lg\" type=\"button\" data-toggle=\"collapse\"\r\n                            data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                        Toggle Range\r\n                    </button>\r\n                </p>\r\n                <div className=\"collapse\" id=\"collapseExample\">\r\n                    <div className=\"card card-body\">\r\n                        <center style={{justifyContent:\"center\"}}>\r\n                            <RangeSlider\r\n                                upper={this.props.upper}\r\n                                lower={this.props.lower}\r\n                                max={this.props.max}\r\n                            />\r\n                        </center>\r\n                    </div>\r\n                </div>\r\n\r\n               <h1>\r\n                    Is you number greater than {this.getMid()}?\r\n                </h1> <br />\r\n                <button\r\n                    className='btn btn-lg btn-success m-2'\r\n                    onClick={this.props.yesButton}\r\n                >Yes</button>\r\n                <button\r\n                    className='btn btn-lg btn-danger m-2'\r\n                    onClick={this.props.noButton}\r\n                >No</button> <br/>\r\n            </div>\r\n        );\r\n    }\r\n    getMid = () => {\r\n        const mid = Math.floor( (this.props.upper+this.props.lower)/2);\r\n        return mid;\r\n    }\r\n}\r\n\r\nexport default Guess;","import React, {Component} from 'react';\r\n\r\nclass Result extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <span className='display-3'>\r\n                    Your number is {this.props.res}\r\n                </span> <br />\r\n                <button\r\n                    className='btn btn-warning btn-lg'\r\n                    onClick={this.props.onRestart}\r\n                >\r\n                    Restart\r\n                </button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Result;","import React, {Component} from 'react';\r\nimport Guess from \"./guess\";\r\nimport Result from \"./result\";\r\n\r\nclass Search extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.upper !== this.props.lower &&\r\n                <Guess\r\n                    yesButton={this.props.yesButton}\r\n                    noButton={this.props.noButton}\r\n                    upper={this.props.upper}\r\n                    lower={this.props.lower}\r\n                    max={this.props.max}\r\n                />\r\n                }\r\n                {this.props.upper === this.props.lower &&\r\n                   <Result\r\n                       res={this.props.upper}\r\n                       onRestart={this.props.onRestart}\r\n                   />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Search;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Binary Search Game</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport EntryPoint from \"./entryPoint\";\r\nimport Search from \"./search\";\r\nimport Navbar from \"./navbar\";\r\n\r\nclass BinarySearch extends Component {\r\n    state={\r\n        upper:100,\r\n        lower:0,\r\n        max:100,\r\n        isRunning:false\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Navbar/>\r\n                <br />\r\n                <br />\r\n                <br />\r\n            <center>\r\n                {!this.state.isRunning &&\r\n                <EntryPoint\r\n                    startGame={this.handleStartGame}\r\n                    upper={this.state.upper}\r\n                    setUpper={this.handleSetUpper}\r\n                /> }\r\n                {this.state.isRunning &&\r\n                <Search\r\n                    yesButton={this.handleYes}\r\n                    noButton={this.handleNo}\r\n                    upper={this.state.upper}\r\n                    lower={this.state.lower}\r\n                    max={this.state.max}\r\n                    onRestart={this.handleRestart}\r\n                />\r\n                }\r\n            </center>\r\n            </div>\r\n        );\r\n    }\r\n    handleStartGame = () =>{\r\n        this.setState({isRunning:true});\r\n    }\r\n    handleRestart = () =>{\r\n        this.setState({isRunning:false,upper:100,lower:0});\r\n    }\r\n    handleYes = () =>{\r\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\r\n        this.setState({lower:mid+1});\r\n    }\r\n    handleNo = () =>{\r\n        const mid = Math.floor( (this.state.upper+this.state.lower)/2);\r\n        this.setState({upper:mid});\r\n    }\r\n    handleSetUpper = (up) =>{\r\n        let val = parseInt(up);\r\n        if( val<=0 ){\r\n            val = 100;\r\n        }\r\n        this.setState({upper:val,max:val});\r\n    }\r\n}\r\n\r\nexport default BinarySearch;","import React, {Component} from 'react';\r\nimport './style.css';\r\nclass Rect extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div\r\n                className='rect'\r\n                style={{height:this.props.rect.width,\r\n                    border: this.checkBorder(),\r\n                    background:this.checkColor(),\r\n                    margin:this.props.marg\r\n\r\n\r\n                }}\r\n            >\r\n                \r\n            </div>\r\n        );\r\n    }\r\n    checkColor = () => {\r\n        if( this.props.rect.isSorted ){\r\n            return \"green\";\r\n        } else if( this.props.rect.isSorting ){\r\n            return \"orange\";\r\n        } else if( this.props.rect.isLeft ){\r\n            return \"red\";\r\n        } else if(this.props.rect.isRight){\r\n            return \"purple\";\r\n        }else{\r\n            return \"#ADD8E6\";\r\n        }\r\n    }\r\n    checkBorder = () =>{\r\n        if( this.props.rect.isRange ){\r\n            return \"0px solid black\";\r\n        } else{\r\n            return \"0px\"\r\n        }\r\n    }\r\n}\r\n\r\nexport default Rect;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\n\r\nclass Rects extends Component {\r\n    render() {\r\n        let margin = 5;\r\n        if( this.props.rects.length>50 ){\r\n            margin=1;\r\n        }\r\n        return (\r\n            <div className=\"d-flex justify-content-center align-items-end\">\r\n                {this.props.rects.map( (rect,rectidx)=>{\r\n                    return (\r\n                        <Rect\r\n                            marg={margin}\r\n                            key={rectidx}\r\n                            rect={rect}\r\n                        />\r\n                    );\r\n                } )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Rects;","let values = [];\r\nexport default function mergeSort(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n   // console.log( \"fdsfsd\",sz );\r\n    sz = sz-1;\r\n    mergeS(rects,0,sz);\r\n    return values;\r\n}\r\n\r\nfunction merge(rects, l, m, r){\r\n  //  console.log(l,\" \",r);\r\n    let n1 = m-l+1;\r\n    let n2 = r-m;\r\n\r\n    const L = rects.slice(l, m+1);\r\n    const R = rects.slice(m+1,r+1);\r\n    let i = 0;\r\n    let j = 0;\r\n    let k = l;\r\n    while(i<n1 && j<n2){\r\n        if( L[i].width <= R[j].width ){\r\n            rects[k] = L[i];\r\n            i++;\r\n        } else{\r\n            rects[k] = R[j];\r\n            j++;\r\n        }\r\n        k++;\r\n    }\r\n    while (i < n1) {\r\n        rects[k] = L[i];\r\n        i++;\r\n        k++;\r\n    }\r\n    while (j < n2) {\r\n        rects[k] = R[j];\r\n        j++;\r\n        k++;\r\n    }\r\n\r\n}\r\n\r\nfunction mergeS(rects,l,r){\r\n\r\n    if( l>=r ) return;\r\n    let m = l+ (r-l)/2;\r\n    m = Math.floor(m);\r\n   // console.log(\"iiiiiiiiiiiiiiiiiiiiiiiii \",m);\r\n    mergeS(rects,l,m);\r\n    mergeS(rects,m+1,r);\r\n    merge(rects,l,m,r);\r\n    let rectsCopy = rects.slice(l,r+1);\r\n    let value = {\r\n        left:l,\r\n        right:r,\r\n        mid:m,\r\n        val:rectsCopy\r\n    }\r\n    values.push(value);\r\n}","let values = [];\r\nexport default function HeapSort(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n   // sz = sz-1;\r\n    heapSort(rects,sz);\r\n    return values;\r\n}\r\nfunction heapify(rects,n,i){\r\n    let largest = i; // Initialize largest as root\r\n    let l = 2 * i + 1; // left = 2*i + 1\r\n    let r = 2 * i + 2; // right = 2*i + 2\r\n\r\n    // If left child is larger than root\r\n    if (l < n && rects[l].width > rects[largest].width)\r\n        largest = l;\r\n\r\n    // If right child is larger than largest so far\r\n    if (r < n && rects[r].width > rects[largest].width)\r\n        largest = r;\r\n\r\n    // If largest is not root\r\n    if (largest != i) {\r\n        let temp = rects[i];\r\n        rects[i] = rects[largest];\r\n        rects[largest] = temp;\r\n        let value = {\r\n            left:i,\r\n            right:largest,\r\n            sorted: false\r\n        }\r\n        values.push(value);\r\n        // Recursively heapify the affected sub-tree\r\n        heapify(rects, n, largest);\r\n    }\r\n}\r\nfunction heapSort(rects,n){\r\n    for(let i = Math.floor(n/2)-1;i>=0;i--){\r\n      //  console.log(\"heap \",n,\" \",i);\r\n        heapify(rects,n,i);\r\n    }\r\n    for (let i = n-1 ; i > 0; i--) {\r\n        // Move current root to end\r\n        let temp = rects[i];\r\n        rects[i] = rects[0];\r\n        rects[0] = temp;\r\n        let value = {\r\n            left:i,\r\n            right:0,\r\n            sorted:true\r\n        }\r\n        values.push(value);\r\n        // call max heapify on the reduced heap\r\n        heapify(rects, i, 0);\r\n    }\r\n}\r\n","let values = [];\r\n\r\nexport function quickSortRecursive(rects2){\r\n    let rects = rects2.slice();\r\n    values = [];\r\n    let sz = rects2.length;\r\n    // console.log( \"fdsfsd\",sz );\r\n    sz = sz-1;\r\n    quick(rects,0,sz);\r\n    return values;\r\n}\r\n\r\n\r\nfunction getPartition(rects, left, right){\r\n    values.push({\r\n        left,\r\n        right,\r\n        swap:false,\r\n        changedRange:true,\r\n    })\r\n    let pivot = rects[right].width\r\n    let it = left-1;\r\n    for(var j=left;j<=right-1;j++){\r\n        if( rects[j].width< pivot){\r\n            it++;\r\n            if( it!==j ){\r\n                // swap(rects[it],rects[j];\r\n                const rect1 = {...rects[it]};\r\n                const rect2 = {...rects[j]};\r\n                rects[it] = rect2;\r\n                rects[j] = rect1;\r\n                values.push({\r\n                    left:it,\r\n                    right:j,\r\n                    swap:true,\r\n                    changedRange:false,\r\n                })\r\n            }\r\n        }\r\n    }\r\n    if( it+1!==right ){\r\n        const rect1 = {...rects[it+1]};\r\n        const rect2 = {...rects[right]};\r\n        rects[it+1] = rect2;\r\n        rects[right] = rect1;\r\n        values.push({\r\n            left:it+1,\r\n            right:right,\r\n            swap:true,\r\n            changedRange:false,\r\n        })\r\n    }\r\n    return it+1;\r\n}\r\nfunction quick(rects,left,right){\r\n    if( left>=right ) return ;\r\n    const partition = getPartition(rects,left,right);\r\n    quick(rects,left,partition-1);\r\n    quick(rects,partition+1,right);\r\n}","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Recursive Sorting Visualizer</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                            <span style={{color:\"white\"}}>\r\n                                Home\r\n                            </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\nexport default function DiscreteSlider(props) {\r\n    const classes = useStyles();\r\n    const handleChange = (event) =>{\r\n        if( event.target.innerText === \"\" ){\r\n            return;\r\n        }\r\n        const num = parseInt(event.target.innerText,10);\r\n        props.onCountChange(num);\r\n    }\r\n    return (\r\n        <div className={classes.root+\" ml-2 mr-2\"}>\r\n\r\n            <Slider\r\n                defaultValue={props.default}\r\n                getAriaValueText={valuetext}\r\n                aria-labelledby=\"discrete-slider\"\r\n                valueLabelDisplay=\"auto\"\r\n                onChangeCommitted={handleChange}\r\n                step={props.step}\r\n               // marks={props.marks}\r\n                min={props.min}\r\n                max={props.max}\r\n                valueLabelDisplay=\"on\"\r\n                disabled={props.disable}\r\n            />\r\n            <Typography id=\"discrete-slider\" gutterBottom>\r\n                {props.title}\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('0');\r\n    const [state, setState] = React.useState({\r\n        pos: props.pos,\r\n    });\r\n    const handleChange = (event) => {\r\n        console.log(state.pos);\r\n        setAge(event.target.value);\r\n        props.onAlgoChanged(state.pos,event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"ml-2 mr-2\">\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    <MenuItem value={0} style={{selected:true}} >Merge Sort</MenuItem>\r\n                    <MenuItem value={1} style={{selected:true}} >Heap Sort</MenuItem>\r\n                    <MenuItem value={2} style={{selected:true}} >Quick Sort</MenuItem>\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: 300 + theme.spacing(3) * 2,\r\n    },\r\n    margin: {\r\n        height: theme.spacing(3),\r\n    },\r\n}));\r\n\r\nfunction ValueLabelComponent(props) {\r\n    const { children, open, value } = props;\r\n\r\n    return (\r\n        <Tooltip open={open} enterTouchDelay={0} placement=\"top\" title={value}>\r\n            {children}\r\n        </Tooltip>\r\n    );\r\n}\r\n\r\nValueLabelComponent.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    open: PropTypes.bool.isRequired,\r\n    value: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\n\r\n\r\nconst AirbnbSlider = withStyles({\r\n    root: {\r\n        color: '#3a8589',\r\n        height: 3,\r\n        padding: '13px 0',\r\n    },\r\n    thumb: {\r\n        height: 27,\r\n        width: 27,\r\n        backgroundColor: '#fff',\r\n        border: '1px solid currentColor',\r\n        marginTop: -12,\r\n        marginLeft: -13,\r\n        boxShadow: '#ebebeb 0 2px 2px',\r\n        '&:focus, &:hover, &$active': {\r\n            boxShadow: '#ccc 0 2px 3px 1px',\r\n        },\r\n        '& .bar': {\r\n            // display: inline-block !important;\r\n            height: 9,\r\n            width: 1,\r\n            backgroundColor: 'currentColor',\r\n            marginLeft: 1,\r\n            marginRight: 1,\r\n        },\r\n    },\r\n    active: {},\r\n    track: {\r\n        height: 3,\r\n    },\r\n    rail: {\r\n        color: '#ffffff',\r\n        opacity: 1,\r\n        height: 3,\r\n    },\r\n})(Slider);\r\n\r\nfunction AirbnbThumbComponent(props) {\r\n    return (\r\n        <span {...props}>\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n      <span className=\"bar\" />\r\n    </span>\r\n    );\r\n}\r\n\r\nexport default function CustomizedSlider() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Typography gutterBottom>Airbnb</Typography>\r\n            <AirbnbSlider\r\n                ThumbComponent={AirbnbThumbComponent}\r\n                getAriaLabel={(index) => (index === 0 ? 'Minimum price' : 'Maximum price')}\r\n                defaultValue={[20, 40]}\r\n                valueLabelDisplay=\"on\"\r\n            />\r\n        </div>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport {makeStyles, withStyles} from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: 200,\r\n    },\r\n});\r\n\r\n\r\nconst CSlider = withStyles({\r\n    root: {\r\n       // color: \"#ffffff\",\r\n        height: 3,\r\n        padding: \"13px 0\",\r\n    },\r\n    track: {\r\n        height: 4,\r\n        borderRadius: 2,\r\n    },\r\n    thumb: {\r\n        backgroundColor: \"#fff\",\r\n        //color: \"#fff\",\r\n    },\r\n})(Slider);\r\n\r\nfunction valuetext(value) {\r\n    return `${value}`;\r\n}\r\n\r\n\r\n\r\nexport default function RangeSlider(props) {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState([20, 37]);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    const handleCommit = (event, newValue) => {\r\n        console.log(newValue);\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <CSlider\r\n                disabled={props.disable}\r\n                value={value}\r\n                onChange={handleChange}\r\n                onChangeCommitted={handleCommit}\r\n                valueLabelDisplay=\"auto\"\r\n                aria-labelledby=\"range-slider\"\r\n                getAriaValueText={valuetext}\r\n                valueLabelDisplay=\"off\"\r\n            />\r\n            <Typography id=\"range-slider\" gutterBottom>\r\n                Value range\r\n            </Typography>\r\n        </div>\r\n    );\r\n}\r\n","import React, {Component} from 'react';\r\nimport DiscreteSlider from \"./slider\";\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport CustomizedSlider from \"./airBnbSlider\";\r\nimport RangeSlider from \"./doubleSlider\";\r\nimport SwitchLabels from \"./formControlLabel\";\r\n\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\">\r\n                <button\r\n                    className='btn btn-secondary m-2'\r\n                    onClick={this.props.onRandomize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Randomize\r\n                </button>\r\n\r\n                <RangeSlider\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={20}\r\n                    min={10}\r\n                    max={100}\r\n                    step={10}\r\n                    title=\"Numbers\"\r\n                    onCountChange={this.props.onCountChange}\r\n                    disable={this.props.disable}\r\n                />\r\n                <DiscreteSlider\r\n                    default={50}\r\n                    min={10}\r\n                    max={100}\r\n                    step={1}\r\n                    title=\"Speed\"\r\n                    onCountChange={this.props.onSpeedChange}\r\n                    disable={false}\r\n                />\r\n                <SimpleSelect\r\n                    pos={0}\r\n                    onAlgoChanged={this.props.onAlgoChanged}\r\n                />\r\n                <button\r\n                    className='btn btn-warning btn-lg '\r\n                    onClick={this.props.onViusalize}\r\n                    disabled={this.props.disable}\r\n                    style={this.isClickable()}\r\n                >\r\n                    Visualize\r\n                </button>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n    isClickable = () =>{\r\n        if( this.props.disable ){\r\n            return {cursor: \"not-allowed\"};\r\n        } else{\r\n            return {};\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport Rect from \"./rect\";\r\nimport Rects from \"./rects\";\r\nimport mergeSort from '../algorithms/mergeSort';\r\nimport heapSort from \"../algorithms/heapSort\";\r\nimport {quickSortRecursive} from \"../algorithms/quickSortRecursive\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\n\r\nclass RecursiveSort extends Component {\r\n    state = {\r\n        count: 20,\r\n        rects: [],\r\n        speed: 50,\r\n        isRunning: false,\r\n        algo: 0\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    componentDidMount() {\r\n        var rects = getInitialRects(this.state.count);\r\n        this.setState({rects});\r\n        /* var rects2 = rects.slice();\r\n         console.log(rects2);\r\n         rects = mergeSort(rects);\r\n         console.log(rects);*/\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Navbar/>\r\n                <Menu\r\n                    disable={this.state.isRunning}\r\n                    onViusalize={this.handleSort}\r\n                    onRandomize={this.handleRandomize}\r\n                    onRefresh={this.handleRefresh}\r\n                    onCountChange={this.handleCountChange}\r\n                    onAlgoChanged={this.handleAlgoChanged}\r\n                    onSpeedChange={this.handleSpeedChanged}\r\n                />\r\n                <div className=' justify-content-center'>\r\n                    <Rects\r\n                        rects={this.state.rects}\r\n                    />\r\n\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    handleRandomize = () => {\r\n        const rect = getInitialRects(this.state.count);\r\n        this.setState({rects: rect});\r\n    }\r\n    handleRefresh = () => {\r\n        const rects = this.state.rects;\r\n        for (let i = 0; i < rects.length; i++) {\r\n            const rect = {...rects[i], isSorted: false, isSorting: false}\r\n            rects[i] = rect;\r\n        }\r\n        this.setState({rects});\r\n    }\r\n    handleCountChange = (val) => {\r\n        this.setState({count: val});\r\n        this.handleRandomize();\r\n    }\r\n    handleAlgoChanged = (pos, val) => {\r\n        if (pos === 0) {\r\n            console.log(\"sup 0\");\r\n            this.setState({algo: val});\r\n        }\r\n    }\r\n    handleSpeedChanged = (val) => {\r\n        const speed = (110 - val);\r\n        this.setState({speed});\r\n    }\r\n\r\n    handleSort = () => {\r\n\r\n        this.setState({isRunning: true});\r\n        let steps;\r\n        let rects2;\r\n        switch (this.state.algo) {\r\n\r\n            case 0:\r\n                steps = mergeSort(this.state.rects);\r\n                this.handleMerge(steps);\r\n                break;\r\n            case 1:\r\n                rects2 = this.state.rects.slice();\r\n                steps = heapSort(rects2);\r\n                this.handleHeap(steps);\r\n                break;\r\n            case 2:\r\n                rects2 = this.state.rects.slice();\r\n                steps = quickSortRecursive(rects2);\r\n                this.handleQuick(steps);\r\n                break;\r\n            default:\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleQuick = async (steps) =>{\r\n        this.setState({isRunning: true});\r\n        let prevRect = this.state.rects;\r\n        for (let j = 0; j < this.state.count; j++) {\r\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\r\n        }\r\n        this.setState({rects: prevRect});\r\n        let hasChanged = -1;\r\n        let changed;\r\n        for(let i=0;i<steps.length;i++){\r\n            let step = steps[i];\r\n            if( hasChanged!==-1 ){\r\n                let {left,right} = changed;\r\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: false,isRight:false,isRange:false};\r\n                prevRect[right] = {...prevRect[right], isLeft: false,isSorting: false,isRight:false,isRange:false};\r\n            }\r\n            if( step.changedRange ){\r\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n                let {left,right} = step;\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false};\r\n                }\r\n                for (let j = left; j <=right; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:true,isRange:true};\r\n                }\r\n                this.setState({rects: prevRect});\r\n                await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false};\r\n                }\r\n            }else if(step.swap){\r\n                let {left,right} = step;\r\n                prevRect[left] = {...prevRect[left], isLeft: false,isSorting: true,isRight:false,isRange:false};\r\n                prevRect[right] = {...prevRect[right], isLeft: true,isSorting: false,isRight:false,isRange:false};\r\n                let temp = prevRect[left];\r\n                prevRect[left] = prevRect[right];\r\n                prevRect[right] = temp;\r\n                hasChanged = 1;\r\n                changed = step;\r\n            }\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);\r\n            if (i === steps.length - 1) {\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: false,isRange:false};\r\n                }\r\n                this.setState({rects: prevRect});\r\n                for (let j = 0; j < this.state.count; j++) {\r\n                    prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isSorted: true,isRange:false};\r\n                    this.setState({rects: prevRect});\r\n                    await sleep(10);\r\n                }\r\n                this.setState({isRunning: false,rects: prevRect});\r\n            }\r\n        }\r\n    }\r\n    handleHeap = async (steps) =>{\r\n        this.setState({isRunning: true});\r\n        let prevRect = this.state.rects;\r\n        for (let j = 0; j < this.state.count; j++) {\r\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\r\n        }\r\n        this.setState({rects: prevRect});\r\n\r\n        for(let i = 0;i<steps.length;i++){\r\n            let step = steps[i];\r\n            //   console.log(step);\r\n            for (let i = 0; i < this.state.count; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\r\n            }\r\n            let {left,right,sorted} = step;\r\n            prevRect[left] = {...prevRect[left],isLeft:true};\r\n            prevRect[right] = {...prevRect[right],isRight:true};\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);\r\n            let temp = prevRect[left];\r\n            prevRect[left] = prevRect[right];\r\n            prevRect[right] = temp;\r\n            this.setState({rects: prevRect});\r\n            if( sorted ) prevRect[left] = {...prevRect[left],isSorted: true};\r\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n            if (i === steps.length - 1) {\r\n\r\n                for (let i = 0; i < this.state.count; i++) {\r\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\r\n                    this.setState({rects: prevRect});\r\n                    await sleep(this.state.speed);\r\n                }\r\n                this.setState({isRunning: false,rects: prevRect});\r\n            }\r\n        }\r\n    }\r\n    handleMerge = async (steps) => {\r\n        this.setState({isRunning1: true});\r\n\r\n        const {speed} = this.state;\r\n\r\n        let prevRect = this.state.rects;\r\n        for (let j = 0; j < this.state.count; j++) {\r\n            prevRect[j] = {...prevRect[j], isLeft: false,isSorting: false,isRight:false,isRange:false,isSorted: false};\r\n        }\r\n        this.setState({rects: prevRect});\r\n        await sleep(this.state.speed);\r\n      //  console.log(\"steps \", steps.length);\r\n        for (let ii = 0; ii < steps.length; ii++) {\r\n            let step = steps[ii];\r\n            for (let i = 0; i < this.state.count; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false};\r\n            }\r\n           // console.log(step.left,\" \",step.mid,\" \",step.right);\r\n            for (let i = step.left; i <= step.mid; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: true,isSorting: false};\r\n            }\r\n            for (let i = step.mid + 1; i <= step.right; i++) {\r\n                prevRect[i] = {...prevRect[i], isRight: true,isLeft:false,isSorting: false};\r\n            }\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);await sleep(this.state.speed);await sleep(this.state.speed);\r\n          //  console.log(step);\r\n            for(let i= step.left;i<=step.right;i++){\r\n                prevRect[i] = {...prevRect[i],width:step.val[i-step.left].width,isSorting: true };\r\n                this.setState({rects: prevRect});\r\n                await sleep(this.state.speed);\r\n            }\r\n\r\n            if (ii === steps.length - 1) {\r\n\r\n                for (let i = 0; i < this.state.count; i++) {\r\n                    prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: true};\r\n                    this.setState({rects: prevRect});\r\n                    await sleep(this.state.speed);\r\n                }\r\n                this.setState({isRunning: false});\r\n            }\r\n\r\n            this.setState({rects: prevRect});\r\n            await sleep(this.state.speed);\r\n            prevRect = this.state.rects;\r\n          /*  for (let i = 0; i < this.state.count; i++) {\r\n                prevRect[i] = {...prevRect[i], isLeft: false,isSorting: false,isRight:false,isSorted: false};\r\n            }*/\r\n            this.setState({rects: prevRect});\r\n        }\r\n    }\r\n\r\n}\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nconst getInitialRects = (tot) => {\r\n    const rects = [];\r\n    for (let i = 0; i < tot; i++) {\r\n        rects.push(getRect());\r\n    }\r\n    return rects;\r\n}\r\nconst getRect = () => {\r\n    return {\r\n        width: Math.floor(Math.random() * 200) + 50,\r\n        isSorted: false,\r\n        isSorting: false,\r\n        isLeft: false,\r\n        isRight: false\r\n    }\r\n}\r\n\r\nexport default RecursiveSort;","import React, {Component} from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">15 Puzzle Game</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport Navbar from \"./navbar\";\r\nimport FlipMove from 'react-flip-move';\r\n\r\nimport '../helpers/array_helpers';\r\nimport './style.css';\r\nimport {times} from 'lodash';\r\n\r\nconst FLIP_DURATION = 750;\r\n\r\nclass Puzzle extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            squares: times(16, i => ({\r\n                value: i\r\n            })),\r\n        };\r\n    }\r\n\r\n    balsal = async () => {\r\n        for (let i = 0; i < 15; i++) {\r\n            this.setState({\r\n                squares: this.state.squares.slice().swap(i, i + 1)\r\n            });\r\n            await sleep(500);\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let classNames;\r\n        return (\r\n            <div style={{backgroundColor: \"#57407c\",height:'100'}}\r\n                 className={'full-height'}\r\n            >\r\n                <Navbar/>\r\n                <div className={'justify-content-around '}\r\n                     style={{textAlign: \"Center\"}}\r\n\r\n                >\r\n                    <div style={{textAlign: \"center\", height: \"440px\", width: \"440px\", margin: 'auto'}}\r\n                         className={\"m-5\"}>\r\n                        <FlipMove\r\n                            duration={FLIP_DURATION}\r\n                            easing=\"cubic-bezier(.12,.36,.14,1.2)\"\r\n                        >\r\n                            {this.state.squares.map((stt) =>\r\n                                    <div key={stt.value}\r\n                                         className={stt.value === 0 ? \"square \" :stt.value%2 === 0? 'square shadow correct pt-1':'square shadow painted pt-1'}\r\n                                    >\r\n                                        {stt.value === 0 ? \"\" : stt.value}\r\n                                    </div>\r\n                                )}\r\n                            <br/>\r\n                        </FlipMove>\r\n                        <button className={\"btn btn-secondary\"} onClick={this.balsal}>Animate</button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default Puzzle;","import React, {Component} from 'react';\r\nimport './node.css'\r\nclass Node extends Component {\r\n    static = {\r\n        row: this.props.row,\r\n        col: this.props.col\r\n    }\r\n    render() {\r\n        const { row,col,isVisited, onMouseDown, onMouseEnter,onMouseUp } = this.props;\r\n        return (\r\n            <div\r\n                id = {`node-${this.props.row}-${this.props.col}`}\r\n                className={this.getClassName()}\r\n                onMouseDown={() => onMouseDown(row,col)}\r\n                onMouseEnter={() => onMouseEnter(row,col)}\r\n                onMouseUp={() => onMouseUp(row,col)}\r\n            />\r\n        );\r\n    }\r\n    getClassName(){\r\n        if(this.props.node.isWall === true){\r\n            return \"node node-wall\";\r\n        } else if( this.props.node.isStartNode === true ){\r\n            return \"node  node-start\";\r\n        } else if( this.props.node.isEndNode === true ){\r\n            return \"node  node-end\";\r\n        } else if(this.props.node.ispathNode){\r\n            return 'node node-shortest-path';\r\n        }else if( this.props.node.isVisited === true ){\r\n            return \"node  node-visited\";\r\n        } else{\r\n            return \"node\";\r\n        }\r\n    }\r\n}\r\n\r\nexport default Node;","import React, {Component} from 'react';\r\nimport Node from \"./node\";\r\nimport './grid.css';\r\nclass Grid extends Component {\r\n    state = {\r\n        grid: this.props.grid\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"Grid\">\r\n                {this.props.grid.map((row, rowidx) => {\r\n                    return (\r\n                        <div key={rowidx}>\r\n                            {row.map((node, nodeidx) => {\r\n                                const {row, col, isWall, visitedNode, } = node;\r\n                                return (\r\n                                    <Node\r\n                                        key={nodeidx}\r\n                                        row={row}\r\n                                        col={col}\r\n                                        node={node}\r\n                                        isWall={isWall}\r\n                                        visitedNode={ visitedNode }\r\n                                        onMouseDown = {this.props.onMouseDown}\r\n                                        onMouseEnter = {this.props.onMouseEnter}\r\n                                        onMouseUp = {this.props.onMouseUp}\r\n                                    />\r\n                                );\r\n                            })}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Grid;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    selectEmpty: {\r\n        marginTop: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst SimpleSelect = (props) => {\r\n    const classes = useStyles();\r\n    const [age, setAge] = React.useState('0');\r\n\r\n    const handleChange = (event) => {\r\n        setAge(event.target.value);\r\n        props.onAlgoChanged(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <FormControl className={classes.formControl}>\r\n                <InputLabel id=\"demo-simple-select-label\">Algorithm</InputLabel>\r\n                <Select\r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={age}\r\n                    onChange={handleChange}\r\n                >\r\n                    {props.items.map( (item,itemidx)=>{\r\n                        return(\r\n                            <MenuItem\r\n                                key={itemidx}\r\n                                value={itemidx}>{item}</MenuItem>\r\n                        );\r\n                    } )}\r\n                </Select>\r\n            </FormControl>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SimpleSelect;","import React, {Component} from 'react';\r\nimport SimpleSelect from \"./simpleSelect\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n                <span className=\"navbar-brand\">Pathfinder</span>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n                        data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\"\r\n                        aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\" >\r\n                    <Link to={\"/\"}>\r\n                        <span style={{color:\"white\"}}>\r\n                            Home\r\n                        </span>\r\n                    </Link>\r\n                </div>\r\n\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, {Component} from 'react';\r\nimport SimpleSelect from \"./simpleSelect\";\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"nav alert-dark\" >\r\n                <SimpleSelect\r\n                    onAlgoChanged = {this.props.onAlgoChanged}\r\n                    items={this.props.algorithms}\r\n                />\r\n                <SimpleSelect\r\n                    onAlgoChanged={this.props.onMazeChanged}\r\n                    items={this.props.mazes}\r\n                />\r\n                <button\r\n                    className='btn btn-lg btn-secondary m-2'\r\n                    onClick={this.props.onCreateMaze}>\r\n                    Create Maze\r\n                </button>\r\n                <button\r\n                    onClick={this.props.onVisualize}\r\n                    className=\"btn btn-warning btn-lg\"\r\n                >Visualize</button>\r\n                <button\r\n                    onClick={this.props.onClearPath}\r\n                    className='btn btn-danger btn-lg m-2'>Clear Path</button>\r\n                <button\r\n                    onClick={this.props.onClearBoard}\r\n                    className='btn btn-danger btn-lg m-2'>Clear Board</button>\r\n            </nav>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","import React, {Component, Fragment} from 'react';\r\nimport Grid from \"./grid\";\r\nimport Navbar from \"./navbar\";\r\nimport Menu from \"./menu\";\r\nimport {dijkstra,getNodesInShortestPathOrder} from \"../algorithms/dijkstra\";\r\nimport {getMaze} from \"../algorithms/recursiveMaze\";\r\nimport {bfsdfs} from \"../algorithms/bfs\";\r\nimport {randomMaze} from \"../algorithms/randomMaze\";\r\nimport queryString from \"query-string\";\r\n\r\nimport { getFirestore,onSnapshot, doc,setDoc, getDoc,getDocs,collection,updateDoc, query, where } from \"firebase/firestore\"\r\nconst db = getFirestore();\r\n\r\n\r\n\r\n\r\nclass TrialPath extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            grid:[],\r\n            mouseIsPressed:false,\r\n            algorithms:[\r\n                \"Dijsktra\",\"BFS\",\"DFS\"\r\n            ],\r\n            algo:0,\r\n            mazes:[\r\n                \"Recursive division\",\"Random\",\"Recursive Horizontal bias(NA)\",\"Recursive Vertical bias(NA)\"\r\n            ],\r\n            maze:0,\r\n            startNode : {\r\n                row:1,\r\n                col:1\r\n            }\r\n        }\r\n\r\n    }\r\n    async componentDidMount() {\r\n\r\n        const docRef = doc(db, \"demoCollection\", \"hm6VBMGVlTBSXr80Cm6Q\");\r\n        const docSnap = await getDoc(docRef);\r\n\r\n        if (docSnap.exists()) {\r\n            console.log(\"Document data:\", docSnap.data());\r\n        } else {\r\n            // doc.data() will be undefined in this case\r\n            console.log(\"No such document!\");\r\n        }\r\n\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n        const row = Math.max(Math.floor(height/25)-7,10);\r\n        const col = Math.floor(width/25);\r\n        const handleQueryString = queryString.parse(this.props.location.search);\r\n        console.log(handleQueryString.startx,handleQueryString.starty);\r\n        if(! handleQueryString.startx) handleQueryString.startx = 1;\r\n        if(! handleQueryString.starty) handleQueryString.starty = 1;\r\n        const startNode = {\r\n            row:handleQueryString.startx,\r\n            col:handleQueryString.starty\r\n        };\r\n        console.log(startNode);\r\n        const endNode = {\r\n            row: row-5,\r\n            col: col-5\r\n        }\r\n        console.log( endNode.row );\r\n        const grid = getInitialGrid(row,col);\r\n        grid[startNode.row][startNode.col].isStartNode = true;\r\n        grid[row-5][col-5].isEndNode = true;\r\n        this.setState({grid,row,col,startNode,endNode});\r\n    }\r\n    async demo(){\r\n        await updateDoc(doc(collection(db, \"demoCollection\"), \"hm6VBMGVlTBSXr80Cm6Q\"), {\r\n            code: 'Henloooo',\r\n            balance:0,\r\n            earning:0,\r\n            linkClicks:10,\r\n            conversions2:10,\r\n            tmstmp: Date.now()\r\n\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Navbar/>\r\n\r\n                <Menu\r\n                    onAlgoChanged = {this.handleAlgoChanged}\r\n                    onVisualize = {this.handleClick}\r\n                    algorithms={this.state.algorithms}\r\n                    mazes={this.state.mazes}\r\n                    onMazeChanged={this.handleMazeChanged}\r\n                    onCreateMaze={this.handleCreateMaze}\r\n                    onClearBoard={this.handleClearBoard}\r\n                    onClearPath={this.handleClearPath}\r\n                />\r\n                <button onClick={this.demo} className={'btn btn-danger'} > Trigger firebase </button>\r\n                <span style={{margin: 2}}/>\r\n                <div style={{textAlign:\"center\"}} >\r\n                    <Grid\r\n                        grid={this.state.grid}\r\n                        onMouseDown={this.handleMouseDown}\r\n                        onMouseEnter={this.handleMouseEnter}\r\n                        onMouseUp={this.handleMouseUp}\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        );\r\n    }\r\n\r\n    handleMouseDown = (row, col) => {\r\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\r\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n            this.setState({grid:newGrid});\r\n        }\r\n        this.setState({mouseIsPressed: true});\r\n    }\r\n\r\n    handleMouseEnter = (row, col) => {\r\n        if (this.state.mouseIsPressed === false) return;\r\n        if((this.state.startNode.row!==row || this.state.startNode.col!==col) && (this.state.endNode.row!==row || this.state.endNode.col!==col) ){\r\n            const newGrid = getNewGridWithWallToggled(this.state.grid, row, col);\r\n            this.setState({grid:newGrid});\r\n        }\r\n    }\r\n\r\n    handleMouseUp = (row,col) => {\r\n        this.setState({mouseIsPressed: false});\r\n    }\r\n\r\n    handleAlgoChanged = (val) =>{\r\n        this.setState({algo:val});\r\n    }\r\n\r\n    handleMazeChanged = (val)=>{\r\n        this.setState({maze:val});\r\n    }\r\n\r\n    handleCreateMaze = () =>{\r\n        let pairs;\r\n        switch (this.state.maze){\r\n            case 1:\r\n                pairs= randomMaze(this.state.grid,this.state.row,this.state.col);\r\n                break;\r\n            default:\r\n                pairs= getMaze(this.state.grid,this.state.row,this.state.col);\r\n        }\r\n        const {startNode,endNode} = this.state;\r\n        for( let i = 0;i<pairs.length;i++ ){\r\n            setTimeout(()=>{\r\n                if( i === pairs.length-1 ){\r\n                   // this.setState({grid:this.state.grid});\r\n                    const grid = this.state.grid;\r\n                    grid[ startNode.row ][startNode.col]={...grid[ startNode.row ][startNode.col],isWall: false};\r\n                    grid[endNode.row][endNode.col]={...grid[endNode.row][endNode.col],isWall: false};\r\n                    this.setState({grid});\r\n                }\r\n                if((pairs[i].xx!==startNode.row || pairs[i].yy!==startNode.col) && (pairs[i].xx!==endNode.row || pairs[i].yy!==endNode.col) ){\r\n                    document.getElementById(`node-${pairs[i].xx}-${pairs[i].yy}`).className = \"node node-wall\";\r\n                }\r\n            },i*20);\r\n        }\r\n    }\r\n    handleClearBoard = ()=>{\r\n        const {grid,row,col} = this.state;\r\n        this.setState({grid:clearBoard(grid,row,col)});\r\n    }\r\n    handleClearPath = () =>{\r\n        const {grid,row,col} = this.state;\r\n        this.setState({grid:clearPath(grid,row,col)});\r\n    }\r\n    handleClick = () =>{\r\n      /*  for(let i = 0;i<20;i++){\r\n            for(let j = 0; j<50;j++){\r\n                document.getElementById(`node-${i}-${j}`).className = \"node\";\r\n            }\r\n        }*/\r\n        this.visualizeDijkstra();\r\n        /*for(let i = 0;i<this.state.row;i++){\r\n            for(let j = 0; j<this.state.col;j++){\r\n                setTimeout(()=>{\r\n                    const newGrid = toggleVisit(this.state.grid,i,j);\r\n                    this.setState({grid:newGrid});\r\n                    //document.getElementById(`node-${i}-${j}`).className = \"node node-visited\";\r\n                },100*(i+j)+j);\r\n            }\r\n        }*/\r\n    }\r\n\r\n    visualizeDijkstra() {\r\n        const {grid} = this.state;\r\n        const startNode = grid[this.state.startNode.row][this.state.startNode.col];\r\n        const finishNode = grid[this.state.endNode.row][this.state.endNode.col];\r\n        let visitedNodesInOrder;\r\n        switch (this.state.algo){\r\n            case 0:\r\n                visitedNodesInOrder = dijkstra(grid, startNode, finishNode);\r\n                break;\r\n            case 1:\r\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"bfs\");\r\n                break;\r\n            default:\r\n                visitedNodesInOrder = bfsdfs(grid, startNode, finishNode,\"dfs\");\r\n        }\r\n        const nodesInShortestPathOrder = getNodesInShortestPathOrder(finishNode);\r\n        this.animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder);\r\n    }\r\n    async animateDijkstra(visitedNodesInOrder, nodesInShortestPathOrder) {\r\n        for (let i = 0; i <= visitedNodesInOrder.length; i++) {\r\n\r\n            if (i === visitedNodesInOrder.length) {\r\n              //  setTimeout(() => {\r\n                    await sleep(100);\r\n                    await this.animateShortestPath(nodesInShortestPathOrder);\r\n\r\n              //  }, 10 * (i+10));\r\n                return;\r\n            }\r\n           // setTimeout(() => {\r\n                const node = visitedNodesInOrder[i];\r\n                const newGrid = toggleVisit(this.state.grid,node.row,node.col);\r\n                //this.setState({grid:newGrid});\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                    'node node-visited';\r\n                await sleep(10);\r\n           // }, 10 * i);\r\n        }\r\n    }\r\n\r\n    async animateShortestPath(nodesInShortestPathOrder) {\r\n        const grid = this.state.grid;\r\n        const newGrid = grid.slice();\r\n        for (let i = 0; i < nodesInShortestPathOrder.length; i++) {\r\n         //   setTimeout(() => {\r\n\r\n                const node = nodesInShortestPathOrder[i];\r\n                const newNode = {...newGrid[node.row][node.col],ispathNode:true};\r\n                newGrid[node.row][node.col] = newNode;\r\n                if( i === nodesInShortestPathOrder.length-1 ){\r\n                    this.setState({grid:newGrid});\r\n                }\r\n                document.getElementById(`node-${node.row}-${node.col}`).className =\r\n                    'node node-shortest-path';\r\n                await sleep(50);\r\n            //}, 50 * i);\r\n        }\r\n    }\r\n\r\n}\r\n\r\nconst clearPath = (grid,row,col)=>{\r\n    const newGrid = grid.slice();\r\n    for(let i = 0;i < row ; i++){\r\n        for( let j = 0;j < col; j++){\r\n            const node = newGrid[i][j];\r\n            const newNode = {\r\n                ...node,\r\n                distance:Infinity,\r\n                visitedNode: false,\r\n                isVisited:false,\r\n                ispathNode:false,\r\n                previousNode:null\r\n\r\n            };\r\n            newGrid[i][j] = newNode;\r\n        }\r\n    }\r\n    return newGrid;\r\n}\r\nconst clearBoard = (grid,row,col)=>{\r\n    const newGrid = grid.slice();\r\n    for(let i = 0;i < row ; i++){\r\n        for( let j = 0;j < col; j++){\r\n            const node = newGrid[i][j];\r\n            const newNode = {\r\n                ...node,\r\n                isWall: false,\r\n                distance:Infinity,\r\n                visitedNode: false,\r\n                isVisited:false,\r\n                ispathNode:false,\r\n                previousNode:null\r\n\r\n            };\r\n            newGrid[i][j] = newNode;\r\n        }\r\n    }\r\n    return newGrid;\r\n}\r\n\r\nconst toggleVisit = (grid,row,col) =>{\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        visitedNode: !node.visitedNode\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n}\r\nconst getNewGridWithWallToggled = (grid, row, col) => {\r\n    const newGrid = grid.slice();\r\n    const node = newGrid[row][col];\r\n    const newNode = {\r\n        ...node,\r\n        isWall: true//!node.isWall,\r\n    };\r\n    newGrid[row][col] = newNode;\r\n    return newGrid;\r\n};\r\nconst getInitialGrid = (totRow,totCol) => {\r\n    const grid = [];\r\n    for (let row = 0; row < totRow; row++) {\r\n        const currentRow = [];\r\n        for (let col = 0; col < totCol; col++) {\r\n            currentRow.push(createNode(row,col));\r\n        }\r\n        grid.push(currentRow);\r\n    }\r\n    return grid;\r\n}\r\n\r\nconst createNode = (row,col)=>{\r\n    return {\r\n        row,\r\n        col,\r\n        isWall: false,\r\n        isStartNode:false,\r\n        isEndNode:false,\r\n        distance:Infinity,\r\n        visitedNode: false,\r\n        isVisited:false,\r\n        ispathNode:false,\r\n        previousNode:null\r\n    };\r\n}\r\nfunction sleep(ms) {\r\n    return new Promise(resolve => setTimeout(resolve, ms));\r\n}\r\n\r\nexport default TrialPath;","import React, {Component} from 'react';\nimport './TrialPathFinder/firebaseConfig';\n\nimport {HashRouter as Router, Switch, Route} from 'react-router-dom';\nimport Pathfinder from \"./pathfinderComponents/pathfinder\";\nimport Home from \"./homeComponents/home\";\nimport Seive from \"./primeComponents/seive\";\nimport Sort from \"./sortComponents/sort\";\nimport Queen from \"./queenComponents/queen\";\nimport ConvexHull from \"./convexHullComponents/convexHull\";\nimport BinarySearch from \"./binarySearchComponent/binarySearch\";\nimport RecursiveSort from \"./recursiveSortComponents/recursiveSort\";\nimport Puzzle from \"./15puzzleComponents/puzzle\";\nimport TrialPath from \"./TrialPathFinder/pathfinder\";\n\n\n\n\nclass App extends Component {\n\n    constructor() {\n        super();\n    }\n    componentDidMount() {\n        console.log(window.innerHeight,\"  \",window.innerWidth);\n    }\n\n    render() {\n        return (\n            <Router basename='/'>\n                <Switch>\n                    <Route path='/pathfinder'  component={Pathfinder}/>\n                    <Route path='/prime' component={Seive}/>\n                    <Route path='/sort' component={Sort}/>\n                    <Route path='/nqueen' component={Queen}/>\n                    <Route path='/convexhull' component={ConvexHull}/>\n                    <Route path='/binarysearch' component={BinarySearch}/>\n                    <Route path='/recursivesort' component={RecursiveSort}/>\n                    <Route path='/15puzzle' component={Puzzle}/>\n                    <Route path='/trial' component={TrialPath}/>\n                    <Route path='/' component={Home}/>\n\n                </Switch>\n            </Router>\n        );\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'fontsource-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}